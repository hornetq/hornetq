<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by CodePro Server -->

<dependencyAnalysis>
	<package name="org.hornetq.jms.bridge" internal="true"/>
	<package name="org.hornetq.core.protocol.core" internal="true"/>
	<package name="org.hornetq.core.journal.impl" internal="true"/>
	<package name="org.hornetq.core.logging.impl" internal="true"/>
	<package name="org.hornetq.core.config.impl" internal="true"/>
	<package name="org.hornetq.core.server.group" internal="true"/>
	<package name="org.hornetq.ra" internal="true"/>
	<package name="org.hornetq.core.persistence" internal="true"/>
	<package name="org.hornetq.core.cluster.impl" internal="true"/>
	<package name="org.hornetq.core.filter.impl" internal="true"/>
	<package name="org.hornetq.core.logging" internal="true"/>
	<package name="org.hornetq.service" internal="true"/>
	<package name="org.hornetq.core.server.management" internal="true"/>
	<package name="org.hornetq.core.messagecounter.impl" internal="true"/>
	<package name="org.hornetq.core.remoting.impl.netty" internal="true"/>
	<package name="org.hornetq.core.persistence.config" internal="true"/>
	<package name="org.hornetq.core.management.impl" internal="true"/>
	<package name="org.hornetq.core.server.cluster" internal="true"/>
	<package name="org.hornetq.api.core.management" internal="true"/>
	<package name="org.hornetq.core.remoting.server.impl" internal="true"/>
	<package name="org.hornetq.api.core.client" internal="true"/>
	<package name="org.hornetq.jms.referenceable" internal="true"/>
	<package name="org.hornetq.jms.persistence.impl.journal" internal="true"/>
	<package name="org.hornetq.core.buffers.impl" internal="true"/>
	<package name="org.hornetq.core.deployers" internal="true"/>
	<package name="org.hornetq.integration.twitter" internal="true"/>
	<package name="org.hornetq.spi.core.protocol" internal="true"/>
	<package name="org.hornetq.jms.persistence.impl.nullpm" internal="true"/>
	<package name="org.hornetq.core.asyncio.impl" internal="true"/>
	<package name="org.hornetq.jms.server.impl" internal="true"/>
	<package name="org.hornetq.jms.client" internal="true"/>
	<package name="org.hornetq.jms.server.config.impl" internal="true"/>
	<package name="org.hornetq.jms.persistence.config" internal="true"/>
	<package name="org.hornetq.core.remoting.impl.invm" internal="true"/>
	<package name="org.hornetq.core.server.group.impl" internal="true"/>
	<package name="org.hornetq.core.filter" internal="true"/>
	<package name="org.hornetq.core.replication.impl" internal="true"/>
	<package name="org.hornetq.core.config" internal="true"/>
	<package name="org.hornetq.integration.bootstrap" internal="true"/>
	<package name="org.hornetq.core.remoting.impl.ssl" internal="true"/>
	<package name="org.hornetq.ra.inflow" internal="true"/>
	<package name="org.hornetq.api.jms" internal="true"/>
	<package name="org.hornetq.core.transaction.impl" internal="true"/>
	<package name="org.hornetq.core.server.cluster.impl" internal="true"/>
	<package name="org.hornetq.core.settings" internal="true"/>
	<package name="org.hornetq.core.client.impl" internal="true"/>
	<package name="org.hornetq.core.remoting.server" internal="true"/>
	<package name="org.hornetq.core.paging.impl" internal="true"/>
	<package name="org.hornetq.utils.json" internal="true"/>
	<package name="org.hornetq.core.message.impl" internal="true"/>
	<package name="org.hornetq.jms.persistence" internal="true"/>
	<package name="org.hornetq.core.journal.impl.dataformat" internal="true"/>
	<package name="org.hornetq.core.exception" internal="true"/>
	<package name="org.hornetq.core.version.impl" internal="true"/>
	<package name="org.hornetq.api.core" internal="true"/>
	<package name="org.hornetq.utils.concurrent" internal="true"/>
	<package name="org.hornetq.integration.jboss.security" internal="true"/>
	<package name="org.hornetq.core.protocol.stomp" internal="true"/>
	<package name="org.hornetq.integration.twitter.impl" internal="true"/>
	<package name="org.hornetq.core.security.impl" internal="true"/>
	<package name="org.hornetq.core.message" internal="true"/>
	<package name="org.hornetq.core.postoffice.impl" internal="true"/>
	<package name="org.hornetq.integration.jboss.tm" internal="true"/>
	<package name="org.hornetq.core.server" internal="true"/>
	<package name="org.hornetq.core.version" internal="true"/>
	<package name="org.hornetq.core.settings.impl" internal="true"/>
	<package name="org.hornetq.api.jms.management" internal="true"/>
	<package name="org.hornetq.core.replication" internal="true"/>
	<package name="org.hornetq.spi.core.remoting" internal="true"/>
	<package name="org.hornetq.jms.server.config" internal="true"/>
	<package name="org.hornetq.core.protocol.core.impl" internal="true"/>
	<package name="org.hornetq.jms.server" internal="true"/>
	<package name="org.hornetq.api.core.client.loadbalance" internal="true"/>
	<package name="org.hornetq.utils" internal="true"/>
	<package name="org.hornetq.core.deployers.impl" internal="true"/>
	<package name="org.hornetq.integration.logging" internal="true"/>
	<package name="org.hornetq.core.server.impl" internal="true"/>
	<package name="org.hornetq.jms.bridge.impl" internal="true"/>
	<package name="org.hornetq.spi.core.logging" internal="true"/>
	<package name="org.hornetq.core.postoffice" internal="true"/>
	<package name="org.hornetq.core.transaction" internal="true"/>
	<package name="org.hornetq.jms.server.recovery" internal="true"/>
	<package name="org.hornetq.core.server.management.impl" internal="true"/>
	<package name="org.hornetq.core.messagecounter" internal="true"/>
	<package name="org.hornetq.jms.server.management" internal="true"/>
	<package name="org.hornetq.core.security" internal="true"/>
	<package name="org.hornetq.core.paging" internal="true"/>
	<package name="org.hornetq.core.cluster" internal="true"/>
	<package name="org.hornetq.core.journal" internal="true"/>
	<package name="org.hornetq.jms.server.management.impl" internal="true"/>
	<package name="org.hornetq.core.remoting" internal="true"/>
	<package name="org.hornetq.spi.core.security" internal="true"/>
	<package name="org.hornetq.jms.management.impl" internal="true"/>
	<package name="org.hornetq.core.persistence.impl.journal" internal="true"/>
	<package name="org.hornetq.core.asyncio" internal="true"/>
	<package name="org.hornetq.core.persistence.impl.nullpm" internal="true"/>
	<type name="org.hornetq.core.server.ScheduledDeliveryHandler" internal="true" project="trunk" package="org.hornetq.core.server">
		<reference type="org.hornetq.core.server.MessageReference"/>
		<reference type="org.hornetq.core.filter.Filter"/>
	</type>
	<type name="org.hornetq.integration.jboss.tm.JBoss4TransactionManagerLocator" internal="true" project="trunk" package="org.hornetq.integration.jboss.tm">
		<reference type="javax.transaction.TransactionManager"/>
		<reference type="org.jboss.tm.TransactionManagerLocator"/>
	</type>
	<type name="org.hornetq.core.security.Role" internal="true" project="trunk" package="org.hornetq.core.security">
		<reference type="java.lang.Object"/>
		<reference type="java.io.Serializable"/>
		<reference type="java.lang.StringBuffer"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.NullPointerException"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.exception.HornetQXAException" internal="true" project="trunk" package="org.hornetq.core.exception">
		<reference type="javax.transaction.xa.XAException"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="java.lang.UnsupportedOperationException" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.SessionXAResponseMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="org.hornetq.core.client.impl.ClientSessionInternal" internal="true" project="trunk" package="org.hornetq.core.client.impl">
		<reference type="org.hornetq.core.client.impl.ClientProducerCredits"/>
		<reference type="org.hornetq.spi.core.protocol.RemotingConnection"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionReceiveMessage"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.client.ClientSession"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.core.client.impl.FailoverManager"/>
		<reference type="org.hornetq.core.client.impl.ClientConsumerInternal"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionReceiveLargeMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionReceiveContinuationMessage"/>
		<reference type="org.hornetq.core.client.impl.ClientProducerInternal"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.protocol.core.CoreRemotingConnection"/>
		<reference type="org.hornetq.api.core.Message"/>
		<reference type="org.hornetq.core.client.impl.ClientProducerCreditManager"/>
	</type>
	<type name="javax.net.ssl.X509TrustManager" internal="false" project="rt.jar" package="javax.net.ssl">
	</type>
	<type name="org.hornetq.core.server.impl.ScheduledDeliveryHandlerImpl" internal="true" project="trunk" package="org.hornetq.core.server.impl">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.core.server.ScheduledDeliveryHandler"/>
		<reference type="java.lang.Long"/>
		<reference type="java.lang.System"/>
		<reference type="java.util.concurrent.ScheduledExecutorService"/>
		<reference type="org.hornetq.core.server.MessageReference"/>
		<reference type="org.hornetq.core.server.impl.ScheduledDeliveryHandlerImpl$ScheduledDeliveryRunnable"/>
		<reference type="org.hornetq.core.filter.Filter"/>
		<reference type="java.util.concurrent.TimeUnit"/>
	</type>
	<type name="org.hornetq.core.remoting.impl.netty.HornetQFrameDecoder" internal="true" project="trunk" package="org.hornetq.core.remoting.impl.netty">
		<reference type="org.hornetq.core.buffers.impl.ChannelBufferWrapper"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Object"/>
		<reference type="org.jboss.netty.buffer.ChannelBuffer"/>
		<reference type="org.jboss.netty.channel.Channel"/>
		<reference type="org.jboss.netty.buffer.ChannelBuffers"/>
		<reference type="org.hornetq.spi.core.remoting.BufferDecoder"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.jboss.netty.handler.codec.frame.FrameDecoder"/>
		<reference type="java.lang.Override"/>
		<reference type="org.jboss.netty.channel.ChannelHandlerContext"/>
	</type>
	<type name="org.hornetq.api.core.client.ClientProducer" internal="true" project="trunk" package="org.hornetq.api.core.client">
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.api.core.Message"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="java.io.RandomAccessFile" internal="false" project="rt.jar" package="java.io">
	</type>
	<type name="twitter4j.TwitterException" internal="false" project="twitter4j-core.jar" package="twitter4j">
	</type>
	<type name="javax.xml.XMLConstants" internal="false" project="rt.jar" package="javax.xml">
	</type>
	<type name="org.hornetq.jms.server.impl.JMSServerDeployer" internal="true" project="trunk" package="org.hornetq.jms.server.impl">
		<reference type="org.hornetq.jms.server.config.JMSQueueConfiguration"/>
		<reference type="org.w3c.dom.Node"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.jms.server.config.TopicConfiguration"/>
		<reference type="org.hornetq.utils.XMLUtil"/>
		<reference type="org.hornetq.core.deployers.DeploymentManager"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.jms.server.JMSServerConfigParser"/>
		<reference type="org.hornetq.jms.server.impl.JMSServerConfigParserImpl"/>
		<reference type="org.hornetq.core.deployers.impl.XmlDeployer"/>
		<reference type="org.hornetq.jms.server.config.ConnectionFactoryConfiguration"/>
		<reference type="java.lang.Override"/>
		<reference type="org.hornetq.jms.server.JMSServerManager"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.xml.sax.SAXException" internal="false" project="rt.jar" package="org.xml.sax">
	</type>
	<type name="org.hornetq.core.server.HandleStatus" internal="true" project="trunk" package="org.hornetq.core.server">
	</type>
	<type name="javax.jms.MessageConsumer" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.core.protocol.stomp.StompConnection" internal="true" project="trunk" package="org.hornetq.core.protocol.stomp">
		<reference type="org.hornetq.api.core.HornetQBuffers"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.spi.core.protocol.RemotingConnection"/>
		<reference type="java.util.Collections"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.core.remoting.FailureListener"/>
		<reference type="org.hornetq.core.remoting.CloseListener"/>
		<reference type="org.hornetq.core.protocol.stomp.StompProtocolManager"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.spi.core.remoting.Connection"/>
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.ReplicationDeleteMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="javax.jms.XASession" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="javax.resource.spi.ConnectionManager" internal="false" project="jboss-jca-api.jar" package="javax.resource.spi">
	</type>
	<type name="org.jboss.security.SecurityContextAssociation" internal="false" project="jboss-security-spi.jar" package="org.jboss.security">
	</type>
	<type name="org.hornetq.api.core.management.MessageCounterInfo" internal="true" project="trunk" package="org.hornetq.api.core.management">
		<reference type="java.text.DateFormat"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.utils.json.JSONObject"/>
		<reference type="java.util.Date"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.messagecounter.MessageCounter"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="twitter4j.Twitter" internal="false" project="twitter4j-core.jar" package="twitter4j">
	</type>
	<type name="org.hornetq.core.protocol.core.impl.RemotingConnectionImpl" internal="true" project="trunk" package="org.hornetq.core.protocol.core.impl">
		<reference type="org.hornetq.api.core.Interceptor"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.utils.SimpleIDGenerator"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="java.lang.Long"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.protocol.core.impl.PacketDecoder"/>
		<reference type="org.hornetq.spi.core.remoting.BufferHandler"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="java.util.concurrent.Executor"/>
		<reference type="org.hornetq.core.remoting.CloseListener"/>
		<reference type="java.lang.Runnable"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.core.protocol.core.Channel"/>
		<reference type="org.hornetq.core.protocol.core.impl.ChannelImpl"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.core.protocol.core.CoreRemotingConnection"/>
		<reference type="java.lang.Throwable"/>
		<reference type="org.hornetq.core.protocol.core.impl.PacketImpl"/>
		<reference type="org.hornetq.core.remoting.FailureListener"/>
		<reference type="java.lang.Thread"/>
		<reference type="org.hornetq.core.protocol.core.Packet"/>
		<reference type="org.hornetq.spi.core.remoting.Connection"/>
	</type>
	<type name="org.hornetq.jms.server.impl.JMSServerManagerImpl" internal="true" project="trunk" package="org.hornetq.jms.server.impl">
		<reference type="javax.naming.InitialContext"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="org.hornetq.jms.client.HornetQConnectionFactory"/>
		<reference type="org.hornetq.jms.server.config.ConnectionFactoryConfiguration"/>
		<reference type="org.hornetq.jms.server.JMSServerManager"/>
		<reference type="org.hornetq.jms.server.config.impl.ConnectionFactoryConfigurationImpl"/>
		<reference type="org.hornetq.jms.server.management.impl.JMSManagementServiceImpl"/>
		<reference type="org.hornetq.jms.client.HornetQQueue"/>
		<reference type="org.hornetq.jms.server.management.JMSManagementService"/>
		<reference type="org.hornetq.jms.client.HornetQDestination"/>
		<reference type="org.hornetq.jms.server.config.JMSConfiguration"/>
		<reference type="javax.naming.Context"/>
		<reference type="org.hornetq.jms.persistence.impl.journal.JMSJournalStorageManagerImpl"/>
		<reference type="org.hornetq.core.security.Role"/>
		<reference type="org.hornetq.jms.server.impl.JMSServerDeployer"/>
		<reference type="org.hornetq.api.jms.HornetQJMSClient"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.core.server.ActivateCallback"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.jms.server.config.JMSQueueConfiguration"/>
		<reference type="org.hornetq.core.config.Configuration"/>
		<reference type="org.hornetq.jms.client.SelectorTranslator"/>
		<reference type="org.hornetq.core.deployers.DeploymentManager"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.jms.persistence.config.PersistedJNDI"/>
		<reference type="org.hornetq.core.config.DiscoveryGroupConfiguration"/>
		<reference type="org.hornetq.jms.persistence.config.PersistedDestination"/>
		<reference type="org.hornetq.core.deployers.impl.FileDeploymentManager"/>
		<reference type="javax.naming.NameNotFoundException"/>
		<reference type="org.hornetq.core.settings.impl.AddressSettings"/>
		<reference type="org.hornetq.jms.persistence.JMSStorageManager"/>
		<reference type="org.hornetq.utils.TimeAndCounterIDGenerator"/>
		<reference type="org.hornetq.jms.client.HornetQTopic"/>
		<reference type="org.hornetq.jms.persistence.config.PersistedType"/>
		<reference type="org.hornetq.core.server.HornetQServer"/>
		<reference type="org.hornetq.jms.persistence.impl.nullpm.NullJMSStorageManagerImpl"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.jms.server.config.TopicConfiguration"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.TransportConfiguration"/>
		<reference type="org.hornetq.api.core.management.AddressControl"/>
		<reference type="org.hornetq.utils.JNDIUtil"/>
		<reference type="org.hornetq.jms.persistence.config.PersistedConnectionFactory"/>
		<reference type="org.hornetq.core.postoffice.Binding"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.postoffice.BindingType"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="java.lang.Throwable"/>
		<reference type="org.hornetq.api.core.management.ResourceNames"/>
		<reference type="javax.naming.NamingException"/>
		<reference type="org.hornetq.core.deployers.impl.XmlDeployer"/>
	</type>
	<type name="org.hornetq.jms.persistence.JMSStorageManager" internal="true" project="trunk" package="org.hornetq.jms.persistence">
		<reference type="org.hornetq.jms.persistence.config.PersistedConnectionFactory"/>
		<reference type="org.hornetq.core.replication.ReplicationEndpoint"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.HornetQComponent"/>
		<reference type="org.hornetq.jms.persistence.config.PersistedJNDI"/>
		<reference type="org.hornetq.jms.persistence.config.PersistedType"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.jms.persistence.config.PersistedDestination"/>
	</type>
	<type name="org.hornetq.core.client.impl.ClientMessageInternal" internal="true" project="trunk" package="org.hornetq.core.client.impl">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.client.impl.ClientConsumerInternal"/>
		<reference type="org.hornetq.core.message.impl.MessageInternal"/>
		<reference type="org.hornetq.api.core.client.ClientMessage"/>
	</type>
	<type name="javax.jms.InvalidSelectorException" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="java.util.concurrent.atomic.AtomicBoolean" internal="false" project="rt.jar" package="java.util.concurrent.atomic">
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.ReplicationLargeMessageWriteMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="java.net.DatagramPacket" internal="false" project="rt.jar" package="java.net">
	</type>
	<type name="org.hornetq.api.jms.management.JMSQueueControl" internal="true" project="trunk" package="org.hornetq.api.jms.management">
		<reference type="javax.management.MBeanOperationInfo"/>
		<reference type="java.lang.Object"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.management.Parameter"/>
		<reference type="org.hornetq.api.core.management.Operation"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.api.jms.management.DestinationControl"/>
	</type>
	<type name="org.hornetq.ra.HornetQRAStreamMessage" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.ra.HornetQRAMessage"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.ra.HornetQRASession"/>
		<reference type="javax.jms.StreamMessage"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.jms.bridge.impl.JMSBridgeImpl$BridgeExceptionListener" internal="true" project="trunk" package="org.hornetq.jms.bridge.impl">
		<reference type="org.hornetq.jms.bridge.impl.JMSBridgeImpl$FailureHandler"/>
		<reference type="org.hornetq.jms.bridge.impl.JMSBridgeImpl"/>
		<reference type="javax.jms.ExceptionListener"/>
		<reference type="javax.jms.JMSException"/>
	</type>
	<type name="org.hornetq.api.jms.HornetQJMSClient" internal="true" project="trunk" package="org.hornetq.api.jms">
		<reference type="javax.jms.Topic"/>
		<reference type="org.hornetq.api.core.client.ClientSessionFactory"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.jms.client.HornetQDestination"/>
		<reference type="javax.jms.Queue"/>
		<reference type="org.hornetq.api.core.TransportConfiguration"/>
		<reference type="org.hornetq.jms.client.HornetQConnectionFactory"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="java.security.AccessControlException" internal="false" project="rt.jar" package="java.security">
	</type>
	<type name="javax.jms.TemporaryTopic" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="javax.jms.IllegalStateException" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="java.security.AccessController" internal="false" project="rt.jar" package="java.security">
	</type>
	<type name="org.hornetq.core.config.ConnectorServiceConfiguration" internal="true" project="trunk" package="org.hornetq.core.config">
		<reference type="java.lang.Object"/>
		<reference type="java.io.Serializable"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.journal.impl.JournalCleaner" internal="true" project="trunk" package="org.hornetq.core.journal.impl">
		<reference type="org.hornetq.core.journal.impl.JournalImpl"/>
		<reference type="org.hornetq.core.journal.impl.dataformat.JournalAddRecordTX"/>
		<reference type="org.hornetq.core.journal.impl.dataformat.JournalDeleteRecordTX"/>
		<reference type="java.util.concurrent.atomic.AtomicInteger"/>
		<reference type="java.lang.Long"/>
		<reference type="org.hornetq.core.journal.impl.dataformat.JournalRollbackRecordTX"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.journal.impl.AbstractJournalUpdateTask"/>
		<reference type="org.hornetq.core.journal.impl.dataformat.JournalAddRecord"/>
		<reference type="org.hornetq.core.journal.SequentialFileFactory"/>
		<reference type="org.hornetq.core.journal.impl.dataformat.ByteArrayEncoding"/>
		<reference type="org.hornetq.core.journal.impl.JournalFile"/>
		<reference type="org.hornetq.core.journal.impl.dataformat.JournalCompleteRecordTX"/>
		<reference type="org.hornetq.core.journal.RecordInfo"/>
		<reference type="org.hornetq.core.journal.impl.dataformat.JournalDeleteRecord"/>
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.ReplicationAddMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="org.hornetq.ra.HornetQRAProperties" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Boolean"/>
		<reference type="java.io.Serializable"/>
		<reference type="java.lang.Override"/>
		<reference type="org.hornetq.ra.ConnectionFactoryProperties"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.NullResponseMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="org.hornetq.ra.inflow.HornetQActivation" internal="true" project="trunk" package="org.hornetq.ra.inflow">
		<reference type="java.lang.InterruptedException"/>
		<reference type="org.hornetq.ra.inflow.HornetQMessageHandler"/>
		<reference type="javax.jms.MessageListener"/>
		<reference type="javax.naming.InitialContext"/>
		<reference type="javax.jms.Queue"/>
		<reference type="org.hornetq.jms.client.HornetQConnectionFactory"/>
		<reference type="javax.resource.ResourceException"/>
		<reference type="javax.jms.Topic"/>
		<reference type="org.hornetq.jms.client.HornetQDestination"/>
		<reference type="javax.naming.Context"/>
		<reference type="java.lang.Class"/>
		<reference type="org.hornetq.ra.inflow.HornetQActivation$SetupActivation"/>
		<reference type="java.lang.Override"/>
		<reference type="org.hornetq.api.jms.HornetQJMSClient"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="javax.jms.Message"/>
		<reference type="java.lang.reflect.Method"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.client.ClientSession"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.ra.Util"/>
		<reference type="javax.resource.spi.work.WorkManager"/>
		<reference type="org.hornetq.ra.inflow.HornetQActivationSpec"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.util.concurrent.atomic.AtomicBoolean"/>
		<reference type="java.lang.Throwable"/>
		<reference type="javax.jms.Destination"/>
		<reference type="java.lang.StringBuffer"/>
		<reference type="org.hornetq.ra.HornetQResourceAdapter"/>
		<reference type="java.lang.Thread"/>
		<reference type="java.lang.RuntimeException"/>
		<reference type="javax.resource.spi.endpoint.MessageEndpointFactory"/>
	</type>
	<type name="org.hornetq.core.server.cluster.BroadcastGroup" internal="true" project="trunk" package="org.hornetq.core.server.cluster">
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.HornetQComponent"/>
		<reference type="org.hornetq.api.core.TransportConfiguration"/>
		<reference type="org.hornetq.core.server.management.NotificationService"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="javax.jms.ConnectionMetaData" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.jboss.netty.handler.codec.http.HttpRequestDecoder" internal="false" project="netty.jar" package="org.jboss.netty.handler.codec.http">
	</type>
	<type name="org.hornetq.jms.server.config.impl.JMSConfigurationImpl" internal="true" project="trunk" package="org.hornetq.jms.server.config.impl">
		<reference type="org.hornetq.jms.server.config.JMSQueueConfiguration"/>
		<reference type="org.hornetq.jms.server.config.TopicConfiguration"/>
		<reference type="org.hornetq.jms.server.config.JMSConfiguration"/>
		<reference type="javax.naming.Context"/>
		<reference type="org.hornetq.jms.server.config.ConnectionFactoryConfiguration"/>
	</type>
	<type name="javax.jms.ServerSessionPool" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.jboss.netty.handler.codec.http.HttpHeaders$Names" internal="false" project="netty.jar" package="org.jboss.netty.handler.codec.http">
	</type>
	<type name="org.hornetq.core.remoting.FailureListener" internal="true" project="trunk" package="org.hornetq.core.remoting">
		<reference type="org.hornetq.api.core.HornetQException"/>
	</type>
	<type name="org.jboss.netty.channel.Channel" internal="false" project="netty.jar" package="org.jboss.netty.channel">
	</type>
	<type name="javax.jms.QueueBrowser" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.core.server.HornetQServer" internal="true" project="trunk" package="org.hornetq.core.server">
		<reference type="org.hornetq.core.config.BridgeConfiguration"/>
		<reference type="org.hornetq.core.transaction.ResourceManager"/>
		<reference type="org.hornetq.spi.core.protocol.SessionCallback"/>
		<reference type="org.hornetq.core.config.DivertConfiguration"/>
		<reference type="org.hornetq.core.persistence.StorageManager"/>
		<reference type="org.hornetq.core.settings.impl.AddressSettings"/>
		<reference type="org.hornetq.core.protocol.core.Channel"/>
		<reference type="javax.management.MBeanServer"/>
		<reference type="org.hornetq.core.replication.ReplicationEndpoint"/>
		<reference type="org.hornetq.utils.ExecutorFactory"/>
		<reference type="org.hornetq.core.server.ServerSession"/>
		<reference type="org.hornetq.core.security.Role"/>
		<reference type="org.hornetq.core.remoting.server.RemotingService"/>
		<reference type="org.hornetq.core.postoffice.PostOffice"/>
		<reference type="org.hornetq.core.server.impl.ConnectorsService"/>
		<reference type="org.hornetq.core.server.QueueFactory"/>
		<reference type="org.hornetq.spi.core.protocol.RemotingConnection"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.cluster.ClusterManager"/>
		<reference type="org.hornetq.core.management.impl.HornetQServerControlImpl"/>
		<reference type="org.hornetq.core.version.Version"/>
		<reference type="org.hornetq.core.server.ActivateCallback"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.core.config.Configuration"/>
		<reference type="org.hornetq.core.replication.ReplicationManager"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.server.HornetQComponent"/>
		<reference type="org.hornetq.core.server.group.GroupingHandler"/>
		<reference type="org.hornetq.core.server.management.ManagementService"/>
		<reference type="org.hornetq.core.server.Queue"/>
		<reference type="org.hornetq.spi.core.security.HornetQSecurityManager"/>
	</type>
	<type name="org.hornetq.core.cluster.DiscoveryGroup" internal="true" project="trunk" package="org.hornetq.core.cluster">
		<reference type="org.hornetq.core.cluster.DiscoveryEntry"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.cluster.DiscoveryListener"/>
		<reference type="org.hornetq.core.server.management.NotificationService"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.journal.impl.JournalCompactor$DeleteCompactCommand" internal="true" project="trunk" package="org.hornetq.core.journal.impl">
		<reference type="org.hornetq.core.journal.impl.JournalCompactor$CompactCommand"/>
		<reference type="org.hornetq.core.journal.impl.JournalFile"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.journal.impl.AbstractJournalUpdateTask"/>
		<reference type="org.hornetq.core.journal.impl.JournalRecord"/>
		<reference type="java.lang.Override"/>
	</type>
	<type name="org.hornetq.core.protocol.stomp.Stomp$Commands" internal="true" project="trunk" package="org.hornetq.core.protocol.stomp">
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.security.impl.SecurityStoreImpl" internal="true" project="trunk" package="org.hornetq.core.security.impl">
		<reference type="org.hornetq.core.security.CheckType"/>
		<reference type="org.hornetq.api.core.management.NotificationType"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.utils.TypedProperties"/>
		<reference type="org.hornetq.core.server.management.Notification"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.core.security.SecurityStore"/>
		<reference type="org.hornetq.core.settings.HierarchicalRepositoryChangeListener"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.System"/>
		<reference type="org.hornetq.api.core.management.ManagementHelper"/>
		<reference type="org.hornetq.core.server.ServerSession"/>
		<reference type="org.hornetq.core.security.Role"/>
		<reference type="org.hornetq.spi.core.security.HornetQSecurityManager"/>
		<reference type="org.hornetq.core.server.management.NotificationService"/>
	</type>
	<type name="org.hornetq.ra.Util" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.reflect.Method"/>
		<reference type="java.lang.Integer"/>
		<reference type="java.lang.Long"/>
		<reference type="java.lang.Exception"/>
		<reference type="javax.transaction.TransactionManager"/>
		<reference type="java.lang.Double"/>
		<reference type="java.lang.String"/>
		<reference type="java.lang.Object"/>
		<reference type="javax.naming.Context"/>
		<reference type="java.lang.Throwable"/>
		<reference type="java.lang.ClassLoader"/>
		<reference type="java.lang.Boolean"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="java.lang.Class"/>
		<reference type="java.lang.Thread"/>
	</type>
	<type name="org.hornetq.core.client.impl.ClientSessionImpl$QueueQueryImpl" internal="true" project="trunk" package="org.hornetq.core.client.impl">
		<reference type="org.hornetq.api.core.client.ClientSession$QueueQuery"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
	</type>
	<type name="org.jboss.netty.handler.codec.http.HttpResponseStatus" internal="false" project="netty.jar" package="org.jboss.netty.handler.codec.http">
	</type>
	<type name="org.hornetq.core.journal.impl.JournalImpl$PerfBlast" internal="true" project="trunk" package="org.hornetq.core.journal.impl">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.journal.impl.dataformat.ByteArrayEncoding"/>
		<reference type="org.hornetq.core.journal.impl.JournalImpl"/>
		<reference type="org.hornetq.core.journal.impl.dataformat.JournalInternalRecord"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.Thread"/>
	</type>
	<type name="javax.jms.QueueConnectionFactory" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.SessionReceiveLargeMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="org.hornetq.core.server.cluster.impl.BridgeImpl$StopRunnable" internal="true" project="trunk" package="org.hornetq.core.server.cluster.impl">
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.cluster.impl.BridgeImpl"/>
		<reference type="java.lang.Runnable"/>
	</type>
	<type name="org.hornetq.core.server.cluster.impl.RemoteQueueBindingImpl" internal="true" project="trunk" package="org.hornetq.core.server.cluster.impl">
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="org.hornetq.core.message.impl.MessageImpl"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Integer"/>
		<reference type="java.lang.Long"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.cluster.RemoteQueueBinding"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.postoffice.BindingType"/>
		<reference type="java.nio.ByteBuffer"/>
		<reference type="java.lang.System"/>
		<reference type="org.hornetq.core.filter.impl.FilterImpl"/>
		<reference type="org.hornetq.core.server.Queue"/>
		<reference type="org.hornetq.core.server.Bindable"/>
		<reference type="org.hornetq.core.server.RoutingContext"/>
		<reference type="java.lang.Override"/>
		<reference type="org.hornetq.core.filter.Filter"/>
	</type>
	<type name="org.hornetq.core.remoting.impl.netty.HornetQFrameDecoder2" internal="true" project="trunk" package="org.hornetq.core.remoting.impl.netty">
		<reference type="org.jboss.netty.buffer.DynamicChannelBuffer"/>
		<reference type="org.jboss.netty.buffer.ChannelBuffer"/>
		<reference type="java.lang.Math"/>
		<reference type="org.jboss.netty.buffer.ChannelBuffers"/>
		<reference type="org.hornetq.utils.DataConstants"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.jboss.netty.channel.MessageEvent"/>
		<reference type="org.jboss.netty.channel.SimpleChannelUpstreamHandler"/>
		<reference type="java.lang.Override"/>
		<reference type="org.jboss.netty.channel.Channels"/>
		<reference type="org.jboss.netty.channel.ChannelHandlerContext"/>
	</type>
	<type name="java.util.StringTokenizer" internal="false" project="rt.jar" package="java.util">
	</type>
	<type name="javax.resource.spi.ConnectionRequestInfo" internal="false" project="jboss-jca-api.jar" package="javax.resource.spi">
	</type>
	<type name="org.hornetq.utils.XidCodecSupport" internal="true" project="trunk" package="org.hornetq.utils">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.transaction.impl.XidImpl"/>
		<reference type="org.hornetq.utils.DataConstants"/>
		<reference type="javax.transaction.xa.Xid"/>
	</type>
	<type name="org.hornetq.core.messagecounter.MessageCounterManager" internal="true" project="trunk" package="org.hornetq.core.messagecounter">
		<reference type="org.hornetq.core.messagecounter.MessageCounter"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.remoting.impl.netty.NettyAcceptor$Listener" internal="true" project="trunk" package="org.hornetq.core.remoting.impl.netty">
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.spi.core.protocol.ProtocolType"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="org.hornetq.core.remoting.impl.netty.NettyAcceptor"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.spi.core.remoting.ConnectionLifeCycleListener"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.Thread"/>
		<reference type="org.hornetq.spi.core.remoting.Connection"/>
	</type>
	<type name="org.hornetq.core.paging.PageTransactionInfo" internal="true" project="trunk" package="org.hornetq.core.paging">
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.journal.EncodingSupport"/>
	</type>
	<type name="org.hornetq.core.protocol.stomp.Stomp$Headers$Response" internal="true" project="trunk" package="org.hornetq.core.protocol.stomp">
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.remoting.impl.netty.HttpAcceptorHandler$ResponseHolder" internal="true" project="trunk" package="org.hornetq.core.remoting.impl.netty">
		<reference type="org.jboss.netty.handler.codec.http.HttpResponse"/>
	</type>
	<type name="org.hornetq.core.protocol.stomp.StompFrame" internal="true" project="trunk" package="org.hornetq.core.protocol.stomp">
		<reference type="org.hornetq.api.core.HornetQBuffers"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="java.lang.Object"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.protocol.stomp.Stomp"/>
		<reference type="java.lang.StringBuffer"/>
		<reference type="java.lang.Override"/>
		<reference type="org.hornetq.core.protocol.stomp.Stomp$Headers"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.api.core.client.ClientSessionFactory" internal="true" project="trunk" package="org.hornetq.api.core.client">
		<reference type="org.hornetq.api.core.Interceptor"/>
		<reference type="org.hornetq.api.core.TransportConfiguration"/>
		<reference type="org.hornetq.api.core.client.ClientSession"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.utils.UTF8Util" internal="true" project="trunk" package="org.hornetq.utils">
	</type>
	<type name="org.hornetq.ra.HornetQRAXAResource" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="javax.transaction.xa.XAResource"/>
		<reference type="javax.transaction.xa.XAException"/>
		<reference type="javax.transaction.xa.Xid"/>
		<reference type="org.hornetq.ra.HornetQRAManagedConnection"/>
	</type>
	<type name="org.hornetq.core.paging.PagedMessage" internal="true" project="trunk" package="org.hornetq.core.paging">
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="org.hornetq.core.journal.EncodingSupport"/>
		<reference type="org.hornetq.core.persistence.StorageManager"/>
	</type>
	<type name="org.hornetq.core.transaction.TransactionOperation" internal="true" project="trunk" package="org.hornetq.core.transaction">
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.transaction.Transaction"/>
	</type>
	<type name="java.lang.management.ThreadMXBean" internal="false" project="rt.jar" package="java.lang.management">
	</type>
	<type name="javax.jms.ResourceAllocationException" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.SessionXAForgetMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="org.jboss.netty.handler.codec.http.HttpHeaders" internal="false" project="netty.jar" package="org.jboss.netty.handler.codec.http">
	</type>
	<type name="org.hornetq.core.filter.impl.FilterImpl" internal="true" project="trunk" package="org.hornetq.core.filter.impl">
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.core.filter.impl.Identifier"/>
		<reference type="java.lang.Integer"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.api.core.FilterConstants"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.core.filter.impl.Operator"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.Throwable"/>
		<reference type="java.lang.Boolean"/>
		<reference type="java.lang.Override"/>
		<reference type="org.hornetq.core.filter.Filter"/>
	</type>
	<type name="org.w3c.dom.NamedNodeMap" internal="false" project="rt.jar" package="org.w3c.dom">
	</type>
	<type name="javax.jms.TopicConnectionFactory" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.core.paging.impl.PagedMessageImpl" internal="true" project="trunk" package="org.hornetq.core.paging.impl">
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="org.hornetq.api.core.HornetQBuffers"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.utils.DataConstants"/>
		<reference type="org.hornetq.core.server.LargeServerMessage"/>
		<reference type="org.hornetq.core.server.impl.ServerMessageImpl"/>
		<reference type="org.hornetq.core.persistence.StorageManager"/>
		<reference type="org.hornetq.core.paging.PagedMessage"/>
	</type>
	<type name="java.util.concurrent.atomic.AtomicReferenceFieldUpdater" internal="false" project="rt.jar" package="java.util.concurrent.atomic">
	</type>
	<type name="org.hornetq.core.server.LargeServerMessage" internal="true" project="trunk" package="org.hornetq.core.server">
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="java.lang.Exception"/>
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.CreateReplicationSessionMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="org.hornetq.core.replication.ReplicationEndpoint" internal="true" project="trunk" package="org.hornetq.core.replication">
		<reference type="org.hornetq.core.protocol.core.ChannelHandler"/>
		<reference type="org.hornetq.core.server.HornetQComponent"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.core.journal.JournalLoadInformation"/>
		<reference type="org.hornetq.core.journal.Journal"/>
		<reference type="org.hornetq.core.protocol.core.Channel"/>
	</type>
	<type name="org.hornetq.core.postoffice.impl.DivertBinding" internal="true" project="trunk" package="org.hornetq.core.postoffice.impl">
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="org.hornetq.core.postoffice.BindingType"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.postoffice.Binding"/>
		<reference type="org.hornetq.core.server.Divert"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.Bindable"/>
		<reference type="org.hornetq.core.server.RoutingContext"/>
		<reference type="java.lang.Override"/>
		<reference type="org.hornetq.core.filter.Filter"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.transaction.Transaction$State" internal="true" project="trunk" package="org.hornetq.core.transaction">
	</type>
	<type name="org.hornetq.core.asyncio.impl.AsynchronousFileImpl$PollerRunnable" internal="true" project="trunk" package="org.hornetq.core.asyncio.impl">
		<reference type="org.hornetq.core.asyncio.impl.AsynchronousFileImpl"/>
		<reference type="java.lang.Runnable"/>
	</type>
	<type name="java.lang.IllegalStateException" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.hornetq.core.transaction.ResourceManager" internal="true" project="trunk" package="org.hornetq.core.transaction">
		<reference type="java.lang.Long"/>
		<reference type="org.hornetq.core.server.HornetQComponent"/>
		<reference type="org.hornetq.core.transaction.Transaction"/>
		<reference type="javax.transaction.xa.Xid"/>
	</type>
	<type name="org.hornetq.core.persistence.impl.journal.JournalStorageManager$FinishPageMessageOperation" internal="true" project="trunk" package="org.hornetq.core.persistence.impl.journal">
		<reference type="org.hornetq.core.paging.PageTransactionInfo"/>
		<reference type="org.hornetq.core.transaction.TransactionOperation"/>
		<reference type="org.hornetq.core.transaction.TransactionPropertyIndexes"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.transaction.Transaction"/>
		<reference type="org.hornetq.core.transaction.Transaction$State"/>
	</type>
	<type name="org.hornetq.core.persistence.impl.journal.JournalStorageManager$GroupingEncoding" internal="true" project="trunk" package="org.hornetq.core.persistence.impl.journal">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.journal.EncodingSupport"/>
		<reference type="java.lang.Override"/>
		<reference type="org.hornetq.core.persistence.GroupingInfo"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.security.SecurityStore" internal="true" project="trunk" package="org.hornetq.core.security">
		<reference type="org.hornetq.core.security.CheckType"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.ServerSession"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="javax.jms.QueueReceiver" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="javax.jms.TextMessage" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="javax.transaction.xa.XAResource" internal="false" project="rt.jar" package="javax.transaction.xa">
	</type>
	<type name="org.hornetq.core.persistence.GroupingInfo" internal="true" project="trunk" package="org.hornetq.core.persistence">
		<reference type="org.hornetq.api.core.SimpleString"/>
	</type>
	<type name="javax.resource.spi.ConnectionEvent" internal="false" project="jboss-jca-api.jar" package="javax.resource.spi">
	</type>
	<type name="org.hornetq.core.persistence.impl.journal.OperationContextImpl" internal="true" project="trunk" package="org.hornetq.core.persistence.impl.journal">
		<reference type="org.hornetq.core.persistence.OperationContext"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Object"/>
		<reference type="java.util.concurrent.atomic.AtomicInteger"/>
		<reference type="java.lang.Throwable"/>
		<reference type="java.lang.Integer"/>
		<reference type="org.hornetq.core.journal.IOAsyncTask"/>
		<reference type="org.hornetq.core.persistence.impl.journal.OperationContextImpl$TaskHolder"/>
		<reference type="org.hornetq.utils.ExecutorFactory"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="java.util.concurrent.Executor"/>
		<reference type="java.lang.Runnable"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="java.text.DecimalFormat" internal="false" project="rt.jar" package="java.text">
	</type>
	<type name="org.hornetq.ra.HornetQRASessionFactory" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="javax.jms.TemporaryQueue"/>
		<reference type="javax.jms.XATopicConnection"/>
		<reference type="javax.jms.TopicConnection"/>
		<reference type="org.hornetq.ra.HornetQRASession"/>
		<reference type="javax.jms.QueueConnection"/>
		<reference type="javax.jms.Connection"/>
		<reference type="javax.jms.XAQueueConnection"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="javax.jms.XAConnection"/>
		<reference type="javax.jms.TemporaryTopic"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.spi.core.protocol.RemotingConnection" internal="true" project="trunk" package="org.hornetq.spi.core.protocol">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.spi.core.remoting.BufferHandler"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.core.remoting.FailureListener"/>
		<reference type="org.hornetq.core.remoting.CloseListener"/>
		<reference type="org.hornetq.spi.core.remoting.Connection"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.protocol.core.impl.CoreProtocolManagerFactory" internal="true" project="trunk" package="org.hornetq.core.protocol.core.impl">
		<reference type="org.hornetq.api.core.Interceptor"/>
		<reference type="org.hornetq.spi.core.protocol.ProtocolManager"/>
		<reference type="org.hornetq.spi.core.protocol.ProtocolManagerFactory"/>
		<reference type="org.hornetq.core.protocol.core.impl.CoreProtocolManager"/>
		<reference type="org.hornetq.core.server.HornetQServer"/>
	</type>
	<type name="org.hornetq.core.journal.impl.ImportJournal" internal="true" project="trunk" package="org.hornetq.core.journal.impl">
		<reference type="org.hornetq.core.journal.impl.JournalImpl"/>
		<reference type="java.io.BufferedReader"/>
		<reference type="java.util.concurrent.atomic.AtomicInteger"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="java.lang.Long"/>
		<reference type="java.lang.Integer"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.io.Reader"/>
		<reference type="java.lang.Byte"/>
		<reference type="org.hornetq.core.journal.impl.JournalRecord"/>
		<reference type="org.hornetq.utils.Base64"/>
		<reference type="java.io.FileInputStream"/>
		<reference type="java.lang.String"/>
		<reference type="java.lang.Boolean"/>
		<reference type="java.lang.System"/>
		<reference type="org.hornetq.core.journal.impl.NIOSequentialFileFactory"/>
		<reference type="org.hornetq.core.journal.RecordInfo"/>
		<reference type="java.io.InputStream"/>
		<reference type="java.io.InputStreamReader"/>
		<reference type="java.io.File"/>
		<reference type="java.util.Properties"/>
	</type>
	<type name="java.io.FileNotFoundException" internal="false" project="rt.jar" package="java.io">
	</type>
	<type name="org.hornetq.core.client.impl.ClientConsumerInternal" internal="true" project="trunk" package="org.hornetq.core.client.impl">
		<reference type="org.hornetq.api.core.client.ClientConsumer"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionReceiveContinuationMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionReceiveLargeMessage"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.core.client.impl.ClientMessageInternal"/>
		<reference type="org.hornetq.api.core.client.ClientMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionQueueQueryResponseMessage"/>
	</type>
	<type name="java.io.BufferedOutputStream" internal="false" project="rt.jar" package="java.io">
	</type>
	<type name="javax.naming.Reference" internal="false" project="rt.jar" package="javax.naming">
	</type>
	<type name="javax.jms.ConnectionConsumer" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="java.util.Calendar" internal="false" project="rt.jar" package="java.util">
	</type>
	<type name="javax.naming.Binding" internal="false" project="rt.jar" package="javax.naming">
	</type>
	<type name="javax.xml.validation.Schema" internal="false" project="rt.jar" package="javax.xml.validation">
	</type>
	<type name="org.hornetq.core.server.management.Notification" internal="true" project="trunk" package="org.hornetq.core.server.management">
		<reference type="org.hornetq.api.core.management.NotificationType"/>
		<reference type="org.hornetq.utils.TypedProperties"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.SessionForceConsumerDelivery" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.ReplicationPageWriteMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="javax.xml.validation.SchemaFactory" internal="false" project="rt.jar" package="javax.xml.validation">
	</type>
	<type name="java.lang.Thread" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="java.net.MalformedURLException" internal="false" project="rt.jar" package="java.net">
	</type>
	<type name="java.util.Collections" internal="false" project="rt.jar" package="java.util">
	</type>
	<type name="java.lang.StringBuilder" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.hornetq.jms.client.HornetQStreamMessage" internal="true" project="trunk" package="org.hornetq.jms.client">
		<reference type="java.lang.Short"/>
		<reference type="org.hornetq.core.client.impl.ClientMessageImpl"/>
		<reference type="java.lang.Math"/>
		<reference type="java.lang.Integer"/>
		<reference type="java.lang.Long"/>
		<reference type="java.lang.Character"/>
		<reference type="org.hornetq.utils.DataConstants"/>
		<reference type="java.lang.Double"/>
		<reference type="java.lang.Byte"/>
		<reference type="javax.jms.MessageEOFException"/>
		<reference type="java.lang.IndexOutOfBoundsException"/>
		<reference type="java.lang.NumberFormatException"/>
		<reference type="java.lang.Float"/>
		<reference type="javax.jms.StreamMessage"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="java.lang.Override"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="javax.jms.MessageFormatException"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.client.ClientSession"/>
		<reference type="org.hornetq.jms.client.HornetQMessage"/>
		<reference type="java.lang.String"/>
		<reference type="java.lang.Object"/>
		<reference type="java.lang.Boolean"/>
		<reference type="org.hornetq.api.core.Message"/>
		<reference type="org.hornetq.api.core.client.ClientMessage"/>
		<reference type="java.lang.NullPointerException"/>
	</type>
	<type name="java.lang.IllegalAccessError" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.hornetq.jms.client.HornetQTemporaryQueue" internal="true" project="trunk" package="org.hornetq.jms.client">
		<reference type="javax.jms.TemporaryQueue"/>
		<reference type="org.hornetq.jms.client.HornetQQueue"/>
		<reference type="org.hornetq.jms.client.HornetQDestination"/>
		<reference type="org.hornetq.jms.client.HornetQSession"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.jms.bridge.impl.JNDIDestinationFactory" internal="true" project="trunk" package="org.hornetq.jms.bridge.impl">
		<reference type="org.hornetq.jms.bridge.DestinationFactory"/>
		<reference type="java.lang.Exception"/>
		<reference type="javax.jms.Destination"/>
		<reference type="org.hornetq.jms.bridge.impl.JNDIFactorySupport"/>
		<reference type="java.util.Hashtable"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.jms.management.impl.JMSTopicControlImpl$DurabilityType" internal="true" project="trunk" package="org.hornetq.jms.management.impl">
	</type>
	<type name="org.hornetq.core.server.ServerMessage" internal="true" project="trunk" package="org.hornetq.core.server">
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.journal.EncodingSupport"/>
		<reference type="org.hornetq.core.server.MessageReference"/>
		<reference type="org.hornetq.core.paging.PagingStore"/>
		<reference type="org.hornetq.core.server.Queue"/>
		<reference type="org.hornetq.core.message.impl.MessageInternal"/>
	</type>
	<type name="java.net.MulticastSocket" internal="false" project="rt.jar" package="java.net">
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.ReattachSessionMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="javax.naming.NamingEnumeration" internal="false" project="rt.jar" package="javax.naming">
	</type>
	<type name="org.w3c.dom.Node" internal="false" project="rt.jar" package="org.w3c.dom">
	</type>
	<type name="java.lang.management.ManagementFactory" internal="false" project="rt.jar" package="java.lang.management">
	</type>
	<type name="org.hornetq.utils.ObjectInputStreamWithClassLoader" internal="true" project="trunk" package="org.hornetq.utils">
		<reference type="java.io.ObjectInputStream"/>
		<reference type="java.lang.ClassNotFoundException"/>
		<reference type="java.lang.ClassLoader"/>
		<reference type="java.lang.Class"/>
		<reference type="java.io.InputStream"/>
		<reference type="java.io.IOException"/>
		<reference type="java.lang.Thread"/>
		<reference type="java.lang.Override"/>
		<reference type="java.io.ObjectStreamClass"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.paging.PagingStoreFactory" internal="true" project="trunk" package="org.hornetq.core.paging">
		<reference type="org.hornetq.core.paging.PagingManager"/>
		<reference type="java.lang.InterruptedException"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.persistence.StorageManager"/>
		<reference type="org.hornetq.core.paging.PagingStore"/>
		<reference type="org.hornetq.core.settings.impl.AddressSettings"/>
		<reference type="org.hornetq.core.journal.SequentialFileFactory"/>
		<reference type="org.hornetq.core.postoffice.PostOffice"/>
	</type>
	<type name="org.hornetq.core.config.BridgeConfiguration" internal="true" project="trunk" package="org.hornetq.core.config">
		<reference type="java.io.Serializable"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.utils.SimpleIDGenerator" internal="true" project="trunk" package="org.hornetq.utils">
		<reference type="java.lang.IllegalStateException"/>
		<reference type="java.lang.Long"/>
		<reference type="org.hornetq.utils.IDGenerator"/>
	</type>
	<type name="org.hornetq.core.journal.impl.dataformat.JournalCompleteRecordTX" internal="true" project="trunk" package="org.hornetq.core.journal.impl.dataformat">
		<reference type="org.hornetq.core.journal.impl.JournalImpl"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.journal.impl.dataformat.JournalInternalRecord"/>
		<reference type="org.hornetq.core.journal.EncodingSupport"/>
		<reference type="java.lang.Override"/>
	</type>
	<type name="org.jboss.netty.handler.codec.http.websocket.WebSocketFrameDecoder" internal="false" project="netty.jar" package="org.jboss.netty.handler.codec.http.websocket">
	</type>
	<type name="org.hornetq.core.management.impl.AcceptorControlImpl" internal="true" project="trunk" package="org.hornetq.core.management.impl">
		<reference type="javax.management.MBeanOperationInfo"/>
		<reference type="java.lang.Object"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.management.impl.MBeanInfoHelper"/>
		<reference type="org.hornetq.api.core.TransportConfiguration"/>
		<reference type="org.hornetq.core.persistence.StorageManager"/>
		<reference type="java.lang.Override"/>
		<reference type="org.hornetq.core.management.impl.AbstractControl"/>
		<reference type="org.hornetq.spi.core.remoting.Acceptor"/>
		<reference type="org.hornetq.api.core.management.AcceptorControl"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.paging.PagingManager" internal="true" project="trunk" package="org.hornetq.core.paging">
		<reference type="org.hornetq.core.paging.PageTransactionInfo"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.HornetQComponent"/>
		<reference type="org.hornetq.core.paging.PagingStore"/>
		<reference type="org.hornetq.core.postoffice.PostOffice"/>
	</type>
	<type name="org.hornetq.service.HornetQJMSStarterServiceMBean" internal="true" project="trunk" package="org.hornetq.service">
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.service.HornetQStarterServiceMBean"/>
	</type>
	<type name="org.jboss.netty.handler.codec.http.HttpResponseEncoder" internal="false" project="netty.jar" package="org.jboss.netty.handler.codec.http">
	</type>
	<type name="org.hornetq.core.config.impl.Validators$Validator" internal="true" project="trunk" package="org.hornetq.core.config.impl">
		<reference type="java.lang.Object"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.postoffice.impl.PostOfficeImpl" internal="true" project="trunk" package="org.hornetq.core.postoffice.impl">
		<reference type="org.hornetq.core.paging.PagingManager"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="org.hornetq.core.postoffice.impl.SimpleAddressManager"/>
		<reference type="org.hornetq.core.server.management.NotificationListener"/>
		<reference type="org.hornetq.core.persistence.StorageManager"/>
		<reference type="org.hornetq.core.postoffice.AddressManager"/>
		<reference type="org.hornetq.core.postoffice.DuplicateIDCache"/>
		<reference type="org.hornetq.core.postoffice.impl.PostOfficeImpl$AddOperation"/>
		<reference type="org.hornetq.core.journal.IOAsyncTask"/>
		<reference type="org.hornetq.core.postoffice.Bindings"/>
		<reference type="org.hornetq.core.server.impl.RoutingContextImpl"/>
		<reference type="org.hornetq.core.postoffice.BindingsFactory"/>
		<reference type="org.hornetq.core.paging.PagingStore"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.core.postoffice.QueueInfo"/>
		<reference type="java.lang.String"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.core.postoffice.impl.WildcardAddressManager"/>
		<reference type="org.hornetq.core.server.management.ManagementService"/>
		<reference type="org.hornetq.core.server.Queue"/>
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="org.hornetq.api.core.management.NotificationType"/>
		<reference type="java.lang.Integer"/>
		<reference type="org.hornetq.core.transaction.TransactionPropertyIndexes"/>
		<reference type="java.lang.Long"/>
		<reference type="org.hornetq.core.postoffice.impl.PostOfficeImpl$Reaper"/>
		<reference type="org.hornetq.core.server.MessageReference"/>
		<reference type="org.hornetq.core.server.management.Notification"/>
		<reference type="org.hornetq.core.settings.impl.AddressSettings"/>
		<reference type="org.hornetq.core.transaction.impl.TransactionImpl"/>
		<reference type="org.hornetq.core.transaction.Transaction"/>
		<reference type="org.hornetq.core.server.RoutingContext"/>
		<reference type="org.hornetq.core.server.HornetQServer"/>
		<reference type="org.hornetq.core.postoffice.PostOffice"/>
		<reference type="org.hornetq.core.postoffice.impl.DuplicateIDCacheImpl"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.core.server.QueueFactory"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.utils.TypedProperties"/>
		<reference type="org.hornetq.utils.UUIDGenerator"/>
		<reference type="org.hornetq.core.server.impl.ServerMessageImpl"/>
		<reference type="org.hornetq.core.postoffice.impl.PostOfficeImpl$PageMessageOperation"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.postoffice.BindingType"/>
		<reference type="org.hornetq.core.postoffice.Binding"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="java.lang.System"/>
		<reference type="org.hornetq.api.core.management.ManagementHelper"/>
		<reference type="org.hornetq.api.core.Message"/>
		<reference type="java.lang.Thread"/>
		<reference type="org.hornetq.core.filter.Filter"/>
	</type>
	<type name="org.hornetq.core.server.group.GroupingHandler" internal="true" project="trunk" package="org.hornetq.core.server.group">
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.server.group.impl.Response"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.management.NotificationListener"/>
		<reference type="org.hornetq.core.server.group.impl.Proposal"/>
		<reference type="org.hornetq.core.server.group.impl.GroupBinding"/>
	</type>
	<type name="org.hornetq.core.server.group.impl.GroupBinding" internal="true" project="trunk" package="org.hornetq.core.server.group.impl">
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.journal.impl.AbstractSequentialFileFactory" internal="true" project="trunk" package="org.hornetq.core.journal.impl">
		<reference type="java.lang.InterruptedException"/>
		<reference type="org.hornetq.utils.HornetQThreadFactory"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.core.journal.SequentialFile"/>
		<reference type="java.util.concurrent.Executors"/>
		<reference type="java.util.Arrays"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.client.impl.ClientSessionFactoryImpl"/>
		<reference type="org.hornetq.core.journal.SequentialFileFactory"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.core.journal.impl.TimedBuffer"/>
		<reference type="java.lang.Object"/>
		<reference type="java.io.FilenameFilter"/>
		<reference type="java.security.AccessController"/>
		<reference type="java.lang.ClassLoader"/>
		<reference type="java.nio.ByteBuffer"/>
		<reference type="java.lang.System"/>
		<reference type="java.util.concurrent.ExecutorService"/>
		<reference type="java.io.IOException"/>
		<reference type="java.io.File"/>
		<reference type="java.util.concurrent.TimeUnit"/>
	</type>
	<type name="java.io.ObjectInputStream" internal="false" project="rt.jar" package="java.io">
	</type>
	<type name="org.hornetq.core.postoffice.impl.PostOfficeImpl$Reaper" internal="true" project="trunk" package="org.hornetq.core.postoffice.impl">
		<reference type="java.lang.InterruptedException"/>
		<reference type="org.hornetq.core.postoffice.BindingType"/>
		<reference type="org.hornetq.core.postoffice.Binding"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.lang.System"/>
		<reference type="org.hornetq.core.postoffice.impl.PostOfficeImpl"/>
		<reference type="org.hornetq.core.server.Queue"/>
		<reference type="java.lang.Runnable"/>
	</type>
	<type name="org.hornetq.jms.bridge.impl.JMSBridgeImpl" internal="true" project="trunk" package="org.hornetq.jms.bridge.impl">
		<reference type="javax.management.ObjectName"/>
		<reference type="org.hornetq.api.jms.HornetQJMSConstants"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="org.hornetq.jms.bridge.JMSBridgeControl"/>
		<reference type="javax.transaction.TransactionManager"/>
		<reference type="javax.jms.Session"/>
		<reference type="org.hornetq.jms.bridge.impl.JMSBridgeImpl$BatchTimeChecker"/>
		<reference type="java.util.Enumeration"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="java.util.concurrent.TimeUnit"/>
		<reference type="javax.jms.XASession"/>
		<reference type="java.lang.reflect.Method"/>
		<reference type="javax.jms.ConnectionFactory"/>
		<reference type="org.hornetq.api.core.client.ClientSession"/>
		<reference type="org.hornetq.jms.client.HornetQMessage"/>
		<reference type="org.hornetq.jms.bridge.impl.JMSBridgeControlImpl"/>
		<reference type="java.lang.Runnable"/>
		<reference type="java.lang.String"/>
		<reference type="java.lang.Object"/>
		<reference type="javax.transaction.Transaction"/>
		<reference type="java.lang.ClassLoader"/>
		<reference type="org.hornetq.core.server.HornetQComponent"/>
		<reference type="java.util.concurrent.ExecutorService"/>
		<reference type="javax.jms.XAConnectionFactory"/>
		<reference type="java.lang.InterruptedException"/>
		<reference type="org.hornetq.jms.bridge.impl.JMSBridgeImpl$FailureHandler"/>
		<reference type="javax.jms.MessageConsumer"/>
		<reference type="org.hornetq.jms.client.HornetQSession"/>
		<reference type="javax.transaction.xa.XAResource"/>
		<reference type="java.util.Iterator"/>
		<reference type="org.hornetq.jms.bridge.impl.JMSBridgeImpl$StartupFailureHandler"/>
		<reference type="org.hornetq.jms.bridge.QualityOfServiceMode"/>
		<reference type="org.hornetq.jms.bridge.JMSBridge"/>
		<reference type="javax.jms.Topic"/>
		<reference type="java.util.Map$Entry"/>
		<reference type="javax.management.MBeanServer"/>
		<reference type="org.hornetq.jms.bridge.DestinationFactory"/>
		<reference type="org.hornetq.jms.bridge.ConnectionFactoryFactory"/>
		<reference type="java.lang.Class"/>
		<reference type="javax.jms.MessageProducer"/>
		<reference type="javax.jms.XAConnection"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.util.concurrent.Executors"/>
		<reference type="javax.jms.Message"/>
		<reference type="java.lang.Exception"/>
		<reference type="javax.jms.Connection"/>
		<reference type="org.hornetq.jms.bridge.impl.JMSBridgeImpl$SourceReceiver"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="java.lang.Throwable"/>
		<reference type="javax.jms.Destination"/>
		<reference type="java.lang.System"/>
		<reference type="org.hornetq.jms.bridge.impl.JMSBridgeImpl$BridgeExceptionListener"/>
		<reference type="java.lang.StringBuffer"/>
		<reference type="javax.management.StandardMBean"/>
		<reference type="java.lang.Thread"/>
	</type>
	<type name="java.util.HashSet" internal="false" project="rt.jar" package="java.util">
	</type>
	<type name="org.hornetq.core.settings.Mergeable" internal="true" project="trunk" package="org.hornetq.core.settings">
	</type>
	<type name="org.hornetq.core.protocol.stomp.Stomp$Headers$Connect" internal="true" project="trunk" package="org.hornetq.core.protocol.stomp">
		<reference type="java.lang.String"/>
	</type>
	<type name="java.lang.NullPointerException" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="javax.jms.QueueConnection" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.core.protocol.core.impl.CoreSessionCallback" internal="true" project="trunk" package="org.hornetq.core.protocol.core.impl">
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionReceiveContinuationMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionReceiveLargeMessage"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.spi.core.protocol.SessionCallback"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionReceiveMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionProducerCreditsMessage"/>
		<reference type="org.hornetq.spi.core.protocol.ProtocolManager"/>
		<reference type="org.hornetq.core.protocol.core.Packet"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.core.protocol.core.Channel"/>
	</type>
	<type name="java.io.InputStream" internal="false" project="rt.jar" package="java.io">
	</type>
	<type name="org.hornetq.spi.core.protocol.ProtocolManagerFactory" internal="true" project="trunk" package="org.hornetq.spi.core.protocol">
		<reference type="org.hornetq.api.core.Interceptor"/>
		<reference type="org.hornetq.spi.core.protocol.ProtocolManager"/>
		<reference type="org.hornetq.core.server.HornetQServer"/>
	</type>
	<type name="org.hornetq.core.server.QueueQueryResult" internal="true" project="trunk" package="org.hornetq.core.server">
		<reference type="org.hornetq.api.core.SimpleString"/>
	</type>
	<type name="org.jboss.netty.channel.SimpleChannelUpstreamHandler" internal="false" project="netty.jar" package="org.jboss.netty.channel">
	</type>
	<type name="org.hornetq.ra.HornetQRAManagedConnection" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="javax.jms.XATopicConnection"/>
		<reference type="java.lang.InterruptedException"/>
		<reference type="javax.resource.spi.ManagedConnection"/>
		<reference type="javax.jms.TopicConnection"/>
		<reference type="javax.resource.spi.ConnectionEventListener"/>
		<reference type="java.lang.Integer"/>
		<reference type="org.hornetq.ra.HornetQRAManagedConnectionFactory"/>
		<reference type="javax.transaction.TransactionManager"/>
		<reference type="org.hornetq.ra.HornetQRACredential"/>
		<reference type="javax.jms.QueueConnection"/>
		<reference type="java.util.concurrent.locks.ReentrantLock"/>
		<reference type="javax.jms.XAQueueConnection"/>
		<reference type="javax.transaction.xa.XAResource"/>
		<reference type="javax.resource.ResourceException"/>
		<reference type="org.hornetq.ra.HornetQRAXAResource"/>
		<reference type="javax.jms.IllegalStateException"/>
		<reference type="javax.resource.spi.ConnectionEvent"/>
		<reference type="javax.jms.Session"/>
		<reference type="javax.resource.spi.LocalTransaction"/>
		<reference type="java.util.Collections"/>
		<reference type="javax.resource.spi.SecurityException"/>
		<reference type="javax.transaction.SystemException"/>
		<reference type="javax.jms.XAConnection"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="javax.resource.spi.IllegalStateException"/>
		<reference type="java.util.concurrent.TimeUnit"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="javax.jms.XASession"/>
		<reference type="org.hornetq.ra.HornetQRASession"/>
		<reference type="javax.resource.spi.ConnectionRequestInfo"/>
		<reference type="javax.jms.Connection"/>
		<reference type="javax.jms.ExceptionListener"/>
		<reference type="org.hornetq.ra.HornetQRAConnectionFactory"/>
		<reference type="org.hornetq.ra.HornetQRALocalTransaction"/>
		<reference type="javax.jms.ResourceAllocationException"/>
		<reference type="javax.security.auth.Subject"/>
		<reference type="java.io.PrintWriter"/>
		<reference type="javax.transaction.Status"/>
		<reference type="org.hornetq.ra.HornetQRAMetaData"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.ra.HornetQRAConnectionRequestInfo"/>
		<reference type="java.lang.Object"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="javax.transaction.Transaction"/>
		<reference type="java.util.concurrent.atomic.AtomicBoolean"/>
		<reference type="java.lang.Throwable"/>
		<reference type="javax.resource.spi.ManagedConnectionMetaData"/>
	</type>
	<type name="twitter4j.Paging" internal="false" project="twitter4j-core.jar" package="twitter4j">
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.SessionProducerCreditsMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="org.hornetq.integration.jboss.security.AS4SecurityActions$PrincipalInfoAction" internal="true" project="trunk" package="org.hornetq.integration.jboss.security">
		<reference type="java.security.Principal"/>
		<reference type="java.lang.Object"/>
		<reference type="java.security.AccessController"/>
		<reference type="org.jboss.security.SecurityAssociation"/>
		<reference type="java.security.PrivilegedAction"/>
		<reference type="javax.security.auth.Subject"/>
	</type>
	<type name="org.hornetq.core.settings.HierarchicalRepositoryChangeListener" internal="true" project="trunk" package="org.hornetq.core.settings">
	</type>
	<type name="java.util.concurrent.ThreadPoolExecutor" internal="false" project="rt.jar" package="java.util.concurrent">
	</type>
	<type name="java.lang.reflect.Array" internal="false" project="rt.jar" package="java.lang.reflect">
	</type>
	<type name="org.w3c.dom.Element" internal="false" project="rt.jar" package="org.w3c.dom">
	</type>
	<type name="org.hornetq.core.deployers.impl.AddressSettingsDeployer" internal="true" project="trunk" package="org.hornetq.core.deployers.impl">
		<reference type="org.w3c.dom.Node"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.utils.XMLUtil"/>
		<reference type="org.hornetq.core.deployers.DeploymentManager"/>
		<reference type="org.hornetq.core.deployers.impl.FileConfigurationParser"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.deployers.impl.XmlDeployer"/>
		<reference type="org.hornetq.core.settings.impl.AddressSettings"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.jms.bridge.impl.JMSBridgeImpl$FailureHandler" internal="true" project="trunk" package="org.hornetq.jms.bridge.impl">
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.jms.bridge.impl.JMSBridgeImpl"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="java.lang.Runnable"/>
	</type>
	<type name="java.lang.CharSequence" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="javax.jms.Queue" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.w3c.dom.Document" internal="false" project="rt.jar" package="org.w3c.dom">
	</type>
	<type name="org.hornetq.core.management.impl.BridgeControlImpl" internal="true" project="trunk" package="org.hornetq.core.management.impl">
		<reference type="org.hornetq.api.core.management.BridgeControl"/>
		<reference type="javax.management.MBeanOperationInfo"/>
		<reference type="org.hornetq.core.config.BridgeConfiguration"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.management.impl.MBeanInfoHelper"/>
		<reference type="org.hornetq.core.persistence.StorageManager"/>
		<reference type="org.hornetq.core.server.cluster.Bridge"/>
		<reference type="java.lang.Override"/>
		<reference type="org.hornetq.core.management.impl.AbstractControl"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="java.lang.Class" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="java.util.concurrent.Executor" internal="false" project="rt.jar" package="java.util.concurrent">
	</type>
	<type name="org.hornetq.core.server.ServerSession" internal="true" project="trunk" package="org.hornetq.core.server">
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="org.hornetq.core.server.QueueQueryResult"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.BindingQueryResult"/>
		<reference type="javax.transaction.xa.Xid"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="javax.jms.XAQueueSession" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="javax.management.NotificationListener" internal="false" project="rt.jar" package="javax.management">
	</type>
	<type name="java.lang.Object" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.jboss.netty.channel.DefaultChannelPipeline" internal="false" project="netty.jar" package="org.jboss.netty.channel">
	</type>
	<type name="org.hornetq.api.core.management.BroadcastGroupControl" internal="true" project="trunk" package="org.hornetq.api.core.management">
		<reference type="java.lang.Object"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.management.HornetQComponentControl"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.persistence.impl.journal.JournalStorageManager$DummyOperationContext" internal="true" project="trunk" package="org.hornetq.core.persistence.impl.journal">
		<reference type="org.hornetq.core.persistence.OperationContext"/>
		<reference type="org.hornetq.core.journal.IOAsyncTask"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.jboss.netty.buffer.ChannelBuffers" internal="false" project="netty.jar" package="org.jboss.netty.buffer">
	</type>
	<type name="javax.net.ssl.SSLContext" internal="false" project="rt.jar" package="javax.net.ssl">
	</type>
	<type name="javax.jms.StreamMessage" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.core.remoting.impl.netty.NettyConnector$BatchFlusher" internal="true" project="trunk" package="org.hornetq.core.remoting.impl.netty">
		<reference type="org.hornetq.core.remoting.impl.netty.NettyConnector"/>
		<reference type="java.lang.Runnable"/>
		<reference type="org.hornetq.spi.core.remoting.Connection"/>
	</type>
	<type name="org.hornetq.utils.ConfigurationHelper" internal="true" project="trunk" package="org.hornetq.utils">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Object"/>
		<reference type="java.lang.Boolean"/>
		<reference type="java.lang.Long"/>
		<reference type="java.lang.Integer"/>
		<reference type="java.lang.StringBuilder"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.spi.core.remoting.Acceptor" internal="true" project="trunk" package="org.hornetq.spi.core.remoting">
		<reference type="org.hornetq.core.server.HornetQComponent"/>
		<reference type="org.hornetq.core.server.management.NotificationService"/>
	</type>
	<type name="org.hornetq.core.journal.impl.TimedBufferObserver" internal="true" project="trunk" package="org.hornetq.core.journal.impl">
		<reference type="java.nio.ByteBuffer"/>
		<reference type="org.hornetq.core.journal.IOAsyncTask"/>
	</type>
	<type name="org.hornetq.spi.core.protocol.SessionCallback" internal="true" project="trunk" package="org.hornetq.spi.core.protocol">
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.SessionXAEndMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="org.hornetq.core.cluster.DiscoveryEntry" internal="true" project="trunk" package="org.hornetq.core.cluster">
		<reference type="org.hornetq.api.core.TransportConfiguration"/>
	</type>
	<type name="org.hornetq.utils.json.JSONException" internal="true" project="trunk" package="org.hornetq.utils.json">
		<reference type="java.lang.Throwable"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="javax.naming.spi.ObjectFactory" internal="false" project="rt.jar" package="javax.naming.spi">
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.ReplicationAddTXMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="org.jboss.netty.channel.StaticChannelPipeline" internal="false" project="netty.jar" package="org.jboss.netty.channel">
	</type>
	<type name="org.hornetq.service.JBossASSecurityManagerServiceMBean" internal="true" project="trunk" package="org.hornetq.service">
		<reference type="org.hornetq.integration.jboss.security.JBossASSecurityManager"/>
	</type>
	<type name="org.hornetq.core.management.impl.MBeanInfoHelper" internal="true" project="trunk" package="org.hornetq.core.management.impl">
		<reference type="java.lang.annotation.Annotation"/>
		<reference type="javax.management.MBeanOperationInfo"/>
		<reference type="java.lang.reflect.Method"/>
		<reference type="java.lang.Class"/>
		<reference type="javax.management.MBeanParameterInfo"/>
		<reference type="org.hornetq.api.core.management.Parameter"/>
		<reference type="org.hornetq.api.core.management.Operation"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.utils.TokenBucketLimiter" internal="true" project="trunk" package="org.hornetq.utils">
	</type>
	<type name="org.hornetq.core.server.impl.QueueImpl$DeliverRunner" internal="true" project="trunk" package="org.hornetq.core.server.impl">
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.impl.QueueImpl"/>
		<reference type="java.lang.Runnable"/>
	</type>
	<type name="javax.naming.RefAddr" internal="false" project="rt.jar" package="javax.naming">
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.SessionCloseMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="org.hornetq.core.postoffice.impl.WildcardAddressManager" internal="true" project="trunk" package="org.hornetq.core.postoffice.impl">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.core.postoffice.Binding"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.postoffice.Bindings"/>
		<reference type="org.hornetq.core.postoffice.impl.SimpleAddressManager"/>
		<reference type="org.hornetq.core.postoffice.BindingsFactory"/>
		<reference type="java.lang.Override"/>
		<reference type="org.hornetq.core.postoffice.impl.AddressImpl"/>
		<reference type="org.hornetq.core.postoffice.Address"/>
	</type>
	<type name="org.hornetq.core.journal.LoaderCallback" internal="true" project="trunk" package="org.hornetq.core.journal">
		<reference type="org.hornetq.core.journal.PreparedTransactionInfo"/>
		<reference type="org.hornetq.core.journal.RecordInfo"/>
		<reference type="org.hornetq.core.journal.TransactionFailureCallback"/>
	</type>
	<type name="org.hornetq.core.remoting.impl.netty.NettyAcceptor$HornetQServerChannelHandler" internal="true" project="trunk" package="org.hornetq.core.remoting.impl.netty">
		<reference type="org.jboss.netty.channel.ChannelFuture"/>
		<reference type="org.jboss.netty.channel.ChannelStateEvent"/>
		<reference type="org.jboss.netty.channel.group.ChannelGroup"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.spi.core.remoting.BufferHandler"/>
		<reference type="org.hornetq.core.remoting.impl.netty.HornetQChannelHandler"/>
		<reference type="org.jboss.netty.handler.ssl.SslHandler"/>
		<reference type="org.jboss.netty.channel.ChannelHandlerContext"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.core.remoting.impl.netty.NettyAcceptor"/>
		<reference type="org.jboss.netty.channel.ChannelFutureListener"/>
		<reference type="org.hornetq.spi.core.remoting.ConnectionLifeCycleListener"/>
		<reference type="java.lang.Override"/>
		<reference type="org.hornetq.core.remoting.impl.netty.NettyAcceptor$Listener"/>
		<reference type="org.hornetq.core.remoting.impl.netty.NettyConnection"/>
	</type>
	<type name="javax.resource.spi.ResourceAdapter" internal="false" project="jboss-jca-api.jar" package="javax.resource.spi">
	</type>
	<type name="org.hornetq.utils.MemorySize" internal="true" project="trunk" package="org.hornetq.utils">
	</type>
	<type name="javax.management.MBeanInfo" internal="false" project="rt.jar" package="javax.management">
	</type>
	<type name="javax.management.MBeanParameterInfo" internal="false" project="rt.jar" package="javax.management">
	</type>
	<type name="org.hornetq.core.journal.impl.JournalRecord" internal="true" project="trunk" package="org.hornetq.core.journal.impl">
		<reference type="java.lang.Integer"/>
		<reference type="org.hornetq.core.journal.impl.JournalFile"/>
		<reference type="java.lang.StringBuffer"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="javax.jms.TransactionInProgressException" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="javax.management.ObjectInstance" internal="false" project="rt.jar" package="javax.management">
	</type>
	<type name="org.hornetq.api.jms.management.JMSManagementHelper" internal="true" project="trunk" package="org.hornetq.api.jms.management">
		<reference type="java.lang.Object"/>
		<reference type="javax.jms.Message"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.management.ManagementHelper"/>
		<reference type="org.hornetq.api.core.Message"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="org.hornetq.jms.client.HornetQMessage"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="java.lang.Override" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.hornetq.core.protocol.core.CommandConfirmationHandler" internal="true" project="trunk" package="org.hornetq.core.protocol.core">
		<reference type="org.hornetq.core.protocol.core.Packet"/>
	</type>
	<type name="org.hornetq.core.protocol.core.ServerSessionPacketHandler" internal="true" project="trunk" package="org.hornetq.core.protocol.core">
		<reference type="org.hornetq.core.server.QueueQueryResult"/>
		<reference type="org.hornetq.core.persistence.OperationContext"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionXAGetTimeoutResponseMessage"/>
		<reference type="org.hornetq.core.persistence.StorageManager"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.RollbackMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionExpireMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionXAStartMessage"/>
		<reference type="org.hornetq.core.journal.IOAsyncTask"/>
		<reference type="org.hornetq.core.server.ServerSession"/>
		<reference type="org.hornetq.core.protocol.core.Packet"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionXAGetInDoubtXidsResponseMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionConsumerFlowCreditMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionXARollbackMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionXAEndMessage"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionXAPrepareMessage"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionXASetTimeoutResponseMessage"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.core.protocol.core.CoreRemotingConnection"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionForceConsumerDelivery"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionXAJoinMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionBindingQueryResponseMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.HornetQExceptionMessage"/>
		<reference type="org.hornetq.core.remoting.FailureListener"/>
		<reference type="javax.transaction.xa.Xid"/>
		<reference type="org.hornetq.core.remoting.impl.netty.NettyConnection"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionQueueQueryMessage"/>
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="org.hornetq.core.protocol.core.ChannelHandler"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionXAResponseMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionDeleteQueueMessage"/>
		<reference type="javax.transaction.xa.XAResource"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionXAForgetMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionIndividualAcknowledgeMessage"/>
		<reference type="org.hornetq.core.remoting.CloseListener"/>
		<reference type="org.hornetq.core.protocol.core.Channel"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionXAResumeMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionRequestProducerCreditsMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.CreateQueueMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.PacketImpl"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionXACommitMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionBindingQueryMessage"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionSendMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionXASetTimeoutMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionSendContinuationMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionConsumerCloseMessage"/>
		<reference type="org.hornetq.core.exception.HornetQXAException"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionAcknowledgeMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.NullResponseMessage"/>
		<reference type="java.lang.Throwable"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionSendLargeMessage"/>
		<reference type="javax.transaction.xa.XAException"/>
		<reference type="org.hornetq.core.server.BindingQueryResult"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionCreateConsumerMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionQueueQueryResponseMessage"/>
		<reference type="org.hornetq.spi.core.remoting.Connection"/>
	</type>
	<type name="java.lang.String" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.CreateSessionResponseMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.SessionXACommitMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="org.hornetq.api.core.HornetQBuffers" internal="true" project="trunk" package="org.hornetq.api.core">
		<reference type="org.hornetq.core.buffers.impl.ChannelBufferWrapper"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.jboss.netty.buffer.ChannelBuffer"/>
		<reference type="java.nio.ByteBuffer"/>
		<reference type="org.jboss.netty.buffer.ChannelBuffers"/>
	</type>
	<type name="org.hornetq.jms.server.config.JMSConfiguration" internal="true" project="trunk" package="org.hornetq.jms.server.config">
		<reference type="org.hornetq.jms.server.config.JMSQueueConfiguration"/>
		<reference type="org.hornetq.jms.server.config.TopicConfiguration"/>
		<reference type="javax.naming.Context"/>
		<reference type="org.hornetq.jms.server.config.ConnectionFactoryConfiguration"/>
	</type>
	<type name="org.hornetq.core.persistence.impl.journal.BatchingIDGenerator$IDCounterEncoding" internal="true" project="trunk" package="org.hornetq.core.persistence.impl.journal">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.utils.DataConstants"/>
		<reference type="org.hornetq.core.journal.EncodingSupport"/>
	</type>
	<type name="org.hornetq.core.postoffice.Bindings" internal="true" project="trunk" package="org.hornetq.core.postoffice">
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="org.hornetq.core.postoffice.Binding"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.Queue"/>
		<reference type="org.hornetq.core.server.RoutingContext"/>
	</type>
	<type name="javax.naming.Context" internal="false" project="rt.jar" package="javax.naming">
	</type>
	<type name="org.hornetq.api.core.Interceptor" internal="true" project="trunk" package="org.hornetq.api.core">
		<reference type="org.hornetq.spi.core.protocol.RemotingConnection"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.core.protocol.core.Packet"/>
	</type>
	<type name="java.util.concurrent.TimeUnit" internal="false" project="rt.jar" package="java.util.concurrent">
	</type>
	<type name="org.hornetq.integration.jboss.security.JBossASSecurityManager" internal="true" project="trunk" package="org.hornetq.integration.jboss.security">
		<reference type="org.hornetq.core.security.CheckType"/>
		<reference type="org.hornetq.integration.jboss.security.SecurityActions"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="javax.naming.InitialContext"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.jboss.security.SecurityContext"/>
		<reference type="javax.security.auth.Subject"/>
		<reference type="org.jboss.security.AuthenticationManager"/>
		<reference type="java.lang.String"/>
		<reference type="java.security.Principal"/>
		<reference type="org.jboss.security.SecurityContextAssociation"/>
		<reference type="java.lang.Object"/>
		<reference type="java.security.AccessController"/>
		<reference type="org.hornetq.integration.jboss.security.AS4SecurityActions"/>
		<reference type="java.lang.Boolean"/>
		<reference type="org.hornetq.core.server.HornetQComponent"/>
		<reference type="org.jboss.security.SimplePrincipal"/>
		<reference type="org.hornetq.core.security.Role"/>
		<reference type="org.hornetq.spi.core.security.HornetQSecurityManager"/>
		<reference type="org.jboss.security.RealmMapping"/>
	</type>
	<type name="org.hornetq.core.journal.impl.SimpleWaitIOCallback" internal="true" project="trunk" package="org.hornetq.core.journal.impl">
		<reference type="java.util.concurrent.CountDownLatch"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.core.journal.impl.SyncIOCompletion"/>
		<reference type="java.lang.Override"/>
		<reference type="java.util.concurrent.TimeUnit"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.spi.core.security.HornetQSecurityManagerImpl" internal="true" project="trunk" package="org.hornetq.spi.core.security">
	</type>
	<type name="org.hornetq.jms.client.HornetQQueue" internal="true" project="trunk" package="org.hornetq.jms.client">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.jms.client.HornetQDestination"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.jms.client.HornetQSession"/>
		<reference type="javax.jms.Queue"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="java.lang.ThreadGroup" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.hornetq.core.server.impl.LastValueQueue$HolderReference" internal="true" project="trunk" package="org.hornetq.core.server.impl">
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.server.MessageReference"/>
		<reference type="org.hornetq.core.server.impl.LastValueQueue"/>
		<reference type="org.hornetq.core.server.Queue"/>
	</type>
	<type name="org.hornetq.jms.server.management.impl.JMSManagementServiceImpl" internal="true" project="trunk" package="org.hornetq.jms.server.management.impl">
		<reference type="org.hornetq.api.jms.management.TopicControl"/>
		<reference type="javax.management.ObjectName"/>
		<reference type="org.hornetq.api.core.management.QueueControl"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.messagecounter.MessageCounter"/>
		<reference type="org.hornetq.jms.client.HornetQConnectionFactory"/>
		<reference type="org.hornetq.api.jms.management.ConnectionFactoryControl"/>
		<reference type="org.hornetq.jms.server.JMSServerManager"/>
		<reference type="org.hornetq.api.core.management.AddressControl"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.api.jms.management.JMSQueueControl"/>
		<reference type="org.hornetq.jms.management.impl.JMSTopicControlImpl"/>
		<reference type="org.hornetq.jms.server.management.JMSManagementService"/>
		<reference type="org.hornetq.jms.client.HornetQQueue"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.api.core.management.ResourceNames"/>
		<reference type="org.hornetq.core.server.management.ManagementService"/>
		<reference type="org.hornetq.api.jms.management.JMSServerControl"/>
		<reference type="org.hornetq.jms.client.HornetQTopic"/>
		<reference type="org.hornetq.jms.management.impl.JMSQueueControlImpl"/>
		<reference type="org.hornetq.jms.management.impl.JMSConnectionFactoryControlImpl"/>
		<reference type="org.hornetq.jms.management.impl.JMSServerControlImpl"/>
		<reference type="org.hornetq.core.messagecounter.MessageCounterManager"/>
	</type>
	<type name="java.lang.Long" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.SessionSendContinuationMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="org.jboss.netty.handler.codec.http.HttpRequestEncoder" internal="false" project="netty.jar" package="org.jboss.netty.handler.codec.http">
	</type>
	<type name="org.hornetq.core.protocol.stomp.Stomp$Headers$Send" internal="true" project="trunk" package="org.hornetq.core.protocol.stomp">
		<reference type="java.lang.Object"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.ReplicationCompareDataMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="org.hornetq.core.security.CheckType" internal="true" project="trunk" package="org.hornetq.core.security">
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.SessionExpireMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="org.hornetq.core.server.Delivery" internal="true" project="trunk" package="org.hornetq.core.server">
		<reference type="org.hornetq.core.server.MessageReference"/>
	</type>
	<type name="org.hornetq.jms.management.impl.JMSServerControlImpl" internal="true" project="trunk" package="org.hornetq.jms.management.impl">
		<reference type="org.hornetq.api.jms.management.TopicControl"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="javax.management.NotificationFilter"/>
		<reference type="javax.management.Notification"/>
		<reference type="org.hornetq.api.jms.management.ConnectionFactoryControl"/>
		<reference type="org.hornetq.jms.server.JMSServerManager"/>
		<reference type="org.hornetq.api.jms.management.JMSQueueControl"/>
		<reference type="org.hornetq.jms.management.impl.JMSServerControlImpl$NotificationType"/>
		<reference type="java.lang.Override"/>
		<reference type="javax.management.NotificationEmitter"/>
		<reference type="javax.management.NotificationListener"/>
		<reference type="javax.management.MBeanInfo"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.TransportConfiguration"/>
		<reference type="org.hornetq.core.management.impl.MBeanInfoHelper"/>
		<reference type="javax.management.ListenerNotFoundException"/>
		<reference type="java.lang.String"/>
		<reference type="java.lang.Object"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="javax.management.NotificationBroadcasterSupport"/>
		<reference type="org.hornetq.api.core.management.ManagementHelper"/>
		<reference type="org.hornetq.api.jms.management.JMSServerControl"/>
		<reference type="javax.management.StandardMBean"/>
		<reference type="java.util.concurrent.atomic.AtomicLong"/>
		<reference type="java.lang.RuntimeException"/>
		<reference type="javax.management.MBeanNotificationInfo"/>
	</type>
	<type name="javax.jms.TopicSubscriber" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.core.server.impl.QueueImpl$ConsumerHolder" internal="true" project="trunk" package="org.hornetq.core.server.impl">
		<reference type="org.hornetq.core.server.MessageReference"/>
		<reference type="org.hornetq.core.server.Consumer"/>
	</type>
	<type name="java.util.Timer" internal="false" project="rt.jar" package="java.util">
	</type>
	<type name="java.util.concurrent.locks.ReentrantLock" internal="false" project="rt.jar" package="java.util.concurrent.locks">
	</type>
	<type name="org.hornetq.spi.core.security.HornetQSecurityManager" internal="true" project="trunk" package="org.hornetq.spi.core.security">
		<reference type="org.hornetq.core.security.CheckType"/>
		<reference type="org.hornetq.core.server.HornetQComponent"/>
		<reference type="org.hornetq.core.security.Role"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.paging.impl.TestSupportPageStore" internal="true" project="trunk" package="org.hornetq.core.paging.impl">
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.paging.PagingStore"/>
		<reference type="org.hornetq.core.paging.Page"/>
	</type>
	<type name="java.lang.ArrayIndexOutOfBoundsException" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="java.util.concurrent.ThreadFactory" internal="false" project="rt.jar" package="java.util.concurrent">
	</type>
	<type name="org.hornetq.core.client.impl.FailoverManagerImpl$DelegatingBufferHandler" internal="true" project="trunk" package="org.hornetq.core.client.impl">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.core.protocol.core.CoreRemotingConnection"/>
		<reference type="org.hornetq.core.client.impl.FailoverManagerImpl"/>
		<reference type="org.hornetq.spi.core.remoting.BufferHandler"/>
	</type>
	<type name="org.hornetq.core.deployers.DeploymentManager" internal="true" project="trunk" package="org.hornetq.core.deployers">
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.HornetQComponent"/>
		<reference type="org.hornetq.core.deployers.Deployer"/>
	</type>
	<type name="java.net.URLDecoder" internal="false" project="rt.jar" package="java.net">
	</type>
	<type name="org.hornetq.jms.referenceable.SerializableObjectRefAddr" internal="true" project="trunk" package="org.hornetq.jms.referenceable">
		<reference type="java.io.ObjectInputStream"/>
		<reference type="java.lang.Object"/>
		<reference type="java.lang.ClassNotFoundException"/>
		<reference type="java.io.ObjectOutputStream"/>
		<reference type="java.io.ByteArrayInputStream"/>
		<reference type="javax.naming.RefAddr"/>
		<reference type="javax.naming.NamingException"/>
		<reference type="java.io.ByteArrayOutputStream"/>
		<reference type="java.io.IOException"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.jboss.netty.handler.codec.http.HttpChunkAggregator" internal="false" project="netty.jar" package="org.jboss.netty.handler.codec.http">
	</type>
	<type name="java.util.concurrent.RejectedExecutionException" internal="false" project="rt.jar" package="java.util.concurrent">
	</type>
	<type name="java.net.ConnectException" internal="false" project="rt.jar" package="java.net">
	</type>
	<type name="org.hornetq.core.remoting.impl.invm.InVMConnector" internal="true" project="trunk" package="org.hornetq.core.remoting.impl.invm">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.core.remoting.impl.invm.TransportConstants"/>
		<reference type="org.hornetq.core.remoting.impl.invm.InVMConnection"/>
		<reference type="org.hornetq.spi.core.remoting.BufferHandler"/>
		<reference type="java.util.concurrent.Executor"/>
		<reference type="org.hornetq.utils.OrderedExecutorFactory"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.core.remoting.impl.invm.InVMRegistry"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.utils.ConfigurationHelper"/>
		<reference type="org.hornetq.core.remoting.impl.invm.InVMAcceptor"/>
		<reference type="org.hornetq.spi.core.remoting.Connector"/>
		<reference type="org.hornetq.spi.core.remoting.ConnectionLifeCycleListener"/>
		<reference type="org.hornetq.core.remoting.impl.invm.InVMConnector$Listener"/>
		<reference type="org.hornetq.spi.core.remoting.Acceptor"/>
		<reference type="org.hornetq.spi.core.remoting.Connection"/>
	</type>
	<type name="java.lang.Error" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.hornetq.core.messagecounter.impl.MessageCounterManagerImpl" internal="true" project="trunk" package="org.hornetq.core.messagecounter.impl">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.util.concurrent.ScheduledExecutorService"/>
		<reference type="org.hornetq.core.messagecounter.impl.MessageCounterManagerImpl$MessageCountersPinger"/>
		<reference type="org.hornetq.core.messagecounter.MessageCounter"/>
		<reference type="org.hornetq.core.config.impl.ConfigurationImpl"/>
		<reference type="java.util.concurrent.TimeUnit"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.core.messagecounter.MessageCounterManager"/>
	</type>
	<type name="org.hornetq.core.server.impl.ServerSessionImpl" internal="true" project="trunk" package="org.hornetq.core.server.impl">
		<reference type="org.hornetq.api.core.management.NotificationType"/>
		<reference type="org.hornetq.core.security.CheckType"/>
		<reference type="org.hornetq.core.transaction.ResourceManager"/>
		<reference type="org.hornetq.spi.core.protocol.SessionCallback"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="java.lang.Long"/>
		<reference type="org.hornetq.core.persistence.StorageManager"/>
		<reference type="org.hornetq.core.server.management.Notification"/>
		<reference type="org.hornetq.core.server.impl.ServerSessionImpl$TempQueueCleanerUpper"/>
		<reference type="org.hornetq.core.transaction.impl.TransactionImpl"/>
		<reference type="org.hornetq.core.server.LargeServerMessage"/>
		<reference type="org.hornetq.core.filter.impl.FilterImpl"/>
		<reference type="org.hornetq.core.transaction.Transaction"/>
		<reference type="org.hornetq.core.server.ServerConsumer"/>
		<reference type="org.hornetq.core.server.ServerSession"/>
		<reference type="org.hornetq.core.server.RoutingContext"/>
		<reference type="org.hornetq.core.postoffice.PostOffice"/>
		<reference type="org.hornetq.core.server.HornetQServer"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.core.server.impl.ServerConsumerImpl"/>
		<reference type="org.hornetq.spi.core.protocol.RemotingConnection"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.impl.RoutingContextImpl"/>
		<reference type="org.hornetq.utils.TypedProperties"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.core.postoffice.QueueBinding"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.core.security.SecurityStore"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.core.postoffice.BindingType"/>
		<reference type="org.hornetq.core.postoffice.Binding"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.Throwable"/>
		<reference type="org.hornetq.api.core.management.ManagementHelper"/>
		<reference type="org.hornetq.core.server.management.ManagementService"/>
		<reference type="org.hornetq.core.server.Queue"/>
		<reference type="org.hornetq.core.remoting.FailureListener"/>
		<reference type="org.hornetq.core.filter.Filter"/>
	</type>
	<type name="org.hornetq.utils.concurrent.HornetQConcurrentLinkedQueue$Node" internal="true" project="trunk" package="org.hornetq.utils.concurrent">
		<reference type="java.lang.Object"/>
		<reference type="java.util.concurrent.atomic.AtomicReferenceFieldUpdater"/>
	</type>
	<type name="java.util.Iterator" internal="false" project="rt.jar" package="java.util">
	</type>
	<type name="org.hornetq.core.postoffice.impl.DuplicateIDCacheImpl$ByteArrayHolder" internal="true" project="trunk" package="org.hornetq.core.postoffice.impl">
		<reference type="java.lang.Object"/>
		<reference type="java.lang.Override"/>
	</type>
	<type name="javax.jms.TopicSession" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.ReplicationPageEventMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="org.hornetq.ra.HornetQRAObjectMessage" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.ra.HornetQRAMessage"/>
		<reference type="org.hornetq.ra.HornetQRASession"/>
		<reference type="java.io.Serializable"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="javax.jms.ObjectMessage"/>
	</type>
	<type name="org.hornetq.core.transaction.impl.ResourceManagerImpl$TxTimeoutHandler" internal="true" project="trunk" package="org.hornetq.core.transaction.impl">
		<reference type="java.lang.Exception"/>
		<reference type="java.lang.System"/>
		<reference type="org.hornetq.core.transaction.Transaction"/>
		<reference type="org.hornetq.core.transaction.impl.ResourceManagerImpl"/>
		<reference type="java.lang.Runnable"/>
	</type>
	<type name="org.hornetq.core.protocol.stomp.WebSocketStompFrameEncoder" internal="true" project="trunk" package="org.hornetq.core.protocol.stomp">
		<reference type="org.hornetq.core.buffers.impl.ChannelBufferWrapper"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.jboss.netty.handler.codec.oneone.OneToOneEncoder"/>
		<reference type="java.lang.Object"/>
		<reference type="org.jboss.netty.buffer.ChannelBuffer"/>
		<reference type="org.jboss.netty.channel.Channel"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.jboss.netty.handler.codec.http.websocket.WebSocketFrame"/>
		<reference type="org.hornetq.core.protocol.stomp.StompFrameDecoder"/>
		<reference type="org.hornetq.core.protocol.stomp.StompFrame"/>
		<reference type="java.lang.Override"/>
		<reference type="org.jboss.netty.handler.codec.http.websocket.DefaultWebSocketFrame"/>
		<reference type="org.jboss.netty.channel.ChannelHandlerContext"/>
	</type>
	<type name="org.hornetq.core.persistence.impl.journal.JournalStorageManager" internal="true" project="trunk" package="org.hornetq.core.persistence.impl.journal">
		<reference type="org.hornetq.core.paging.PagingManager"/>
		<reference type="org.hornetq.core.persistence.OperationContext"/>
		<reference type="org.hornetq.core.journal.impl.JournalImpl"/>
		<reference type="org.hornetq.core.transaction.ResourceManager"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="org.hornetq.utils.DataConstants"/>
		<reference type="org.hornetq.core.persistence.StorageManager"/>
		<reference type="org.hornetq.core.journal.JournalLoadInformation"/>
		<reference type="org.hornetq.core.persistence.config.PersistedAddressSetting"/>
		<reference type="org.hornetq.core.persistence.impl.journal.JournalStorageManager$HeuristicCompletionEncoding"/>
		<reference type="org.hornetq.core.persistence.impl.journal.JournalStorageManager$DummyOperationContext"/>
		<reference type="org.hornetq.core.journal.PreparedTransactionInfo"/>
		<reference type="java.nio.ByteBuffer"/>
		<reference type="org.hornetq.core.persistence.QueueBindingInfo"/>
		<reference type="org.hornetq.core.paging.impl.PageTransactionInfoImpl"/>
		<reference type="org.hornetq.core.journal.IOAsyncTask"/>
		<reference type="org.hornetq.utils.ExecutorFactory"/>
		<reference type="java.io.File"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.persistence.impl.journal.BatchingIDGenerator"/>
		<reference type="org.hornetq.core.persistence.impl.journal.JournalStorageManager$DeleteEncoding"/>
		<reference type="org.hornetq.core.persistence.impl.journal.JournalStorageManager$AddMessageRecord"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.core.journal.Journal"/>
		<reference type="java.lang.Runnable"/>
		<reference type="org.hornetq.core.journal.SequentialFileFactory"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.core.paging.PageTransactionInfo"/>
		<reference type="org.hornetq.core.config.Configuration"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.core.persistence.impl.journal.JournalStorageManager$LargeMessageTXFailureCallback"/>
		<reference type="org.hornetq.core.journal.impl.NIOSequentialFileFactory"/>
		<reference type="org.hornetq.core.persistence.impl.journal.LargeServerMessageImpl"/>
		<reference type="org.hornetq.core.persistence.impl.journal.OperationContextImpl"/>
		<reference type="org.hornetq.core.journal.RecordInfo"/>
		<reference type="org.hornetq.core.server.Queue"/>
		<reference type="javax.transaction.xa.Xid"/>
		<reference type="java.lang.NullPointerException"/>
		<reference type="org.hornetq.core.persistence.impl.journal.JournalStorageManager$GroupingEncoding"/>
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="org.hornetq.core.transaction.TransactionPropertyIndexes"/>
		<reference type="java.lang.Long"/>
		<reference type="java.lang.Integer"/>
		<reference type="org.hornetq.core.server.MessageReference"/>
		<reference type="java.util.concurrent.Executor"/>
		<reference type="org.hornetq.core.paging.PagedMessage"/>
		<reference type="org.hornetq.core.persistence.impl.journal.JournalStorageManager$LargeMessageEncoding"/>
		<reference type="org.hornetq.core.journal.impl.AIOSequentialFileFactory"/>
		<reference type="org.hornetq.core.transaction.impl.TransactionImpl"/>
		<reference type="org.hornetq.core.server.LargeServerMessage"/>
		<reference type="org.hornetq.core.transaction.Transaction"/>
		<reference type="org.hornetq.core.persistence.impl.journal.JournalStorageManager$XidEncoding"/>
		<reference type="org.hornetq.core.persistence.impl.journal.JournalStorageManager$PersistentIDEncoding"/>
		<reference type="org.hornetq.core.server.group.impl.GroupBinding"/>
		<reference type="org.hornetq.core.persistence.impl.journal.JournalStorageManager$FinishPageMessageOperation"/>
		<reference type="org.hornetq.core.postoffice.PostOffice"/>
		<reference type="org.hornetq.core.replication.impl.ReplicatedJournal"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.core.journal.SequentialFile"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.impl.ServerMessageImpl"/>
		<reference type="org.hornetq.core.persistence.impl.journal.JournalStorageManager$QueueEncoding"/>
		<reference type="org.hornetq.core.persistence.GroupingInfo"/>
		<reference type="org.hornetq.core.persistence.config.PersistedRoles"/>
		<reference type="org.hornetq.utils.UUID"/>
		<reference type="org.hornetq.api.core.HornetQBuffers"/>
		<reference type="org.hornetq.core.postoffice.Binding"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.replication.ReplicationManager"/>
		<reference type="org.hornetq.core.persistence.impl.journal.JournalStorageManager$RefEncoding"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="java.lang.System"/>
		<reference type="org.hornetq.api.core.Message"/>
		<reference type="org.hornetq.core.persistence.impl.journal.JournalStorageManager$DeliveryCountUpdateEncoding"/>
		<reference type="org.hornetq.core.persistence.impl.journal.JournalStorageManager$PersistentQueueBindingEncoding"/>
		<reference type="org.hornetq.core.persistence.impl.journal.JournalStorageManager$DuplicateIDEncoding"/>
		<reference type="org.hornetq.core.filter.Filter"/>
		<reference type="org.hornetq.core.transaction.Transaction$State"/>
		<reference type="org.hornetq.core.server.JournalType"/>
		<reference type="org.hornetq.core.persistence.impl.journal.JournalStorageManager$ScheduledDeliveryEncoding"/>
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.SessionRequestProducerCreditsMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="org.hornetq.utils.concurrent.HornetQConcurrentLinkedQueue" internal="true" project="trunk" package="org.hornetq.utils.concurrent">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.io.Serializable"/>
	</type>
	<type name="org.jboss.netty.handler.codec.http.CookieEncoder" internal="false" project="netty.jar" package="org.jboss.netty.handler.codec.http">
	</type>
	<type name="org.hornetq.core.client.impl.FailoverManagerImpl$PingRunnable" internal="true" project="trunk" package="org.hornetq.core.client.impl">
		<reference type="java.lang.Object"/>
		<reference type="java.lang.System"/>
		<reference type="org.hornetq.core.client.impl.FailoverManagerImpl"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.Ping"/>
		<reference type="java.lang.Runnable"/>
		<reference type="org.hornetq.core.protocol.core.Channel"/>
	</type>
	<type name="org.hornetq.core.client.impl.ClientSessionImpl" internal="true" project="trunk" package="org.hornetq.core.client.impl">
		<reference type="org.hornetq.core.protocol.core.CommandConfirmationHandler"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionXAGetTimeoutResponseMessage"/>
		<reference type="org.hornetq.api.core.client.SendAcknowledgementHandler"/>
		<reference type="org.hornetq.core.client.impl.ClientMessageImpl"/>
		<reference type="org.hornetq.core.client.impl.ClientProducerCredits"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.RollbackMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.ReattachSessionResponseMessage"/>
		<reference type="org.hornetq.api.core.client.ClientSession$BindingQuery"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionExpireMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionXAStartMessage"/>
		<reference type="org.hornetq.utils.TokenBucketLimiterImpl"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionReceiveLargeMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionCloseMessage"/>
		<reference type="org.hornetq.core.protocol.core.Packet"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionXAGetInDoubtXidsResponseMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionConsumerFlowCreditMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionXARollbackMessage"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.client.impl.ClientProducerImpl"/>
		<reference type="org.hornetq.api.core.client.ClientProducer"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionXAEndMessage"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionXAPrepareMessage"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionXASetTimeoutResponseMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionReceiveContinuationMessage"/>
		<reference type="org.hornetq.core.client.impl.ClientProducerInternal"/>
		<reference type="org.hornetq.core.protocol.core.CoreRemotingConnection"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionForceConsumerDelivery"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionXAJoinMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionBindingQueryResponseMessage"/>
		<reference type="org.hornetq.core.remoting.FailureListener"/>
		<reference type="javax.transaction.xa.Xid"/>
		<reference type="org.hornetq.api.core.client.ClientMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionQueueQueryMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionXAResponseMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionDeleteQueueMessage"/>
		<reference type="org.hornetq.core.client.impl.ClientProducerCreditManagerImpl"/>
		<reference type="java.lang.Long"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionReceiveMessage"/>
		<reference type="javax.transaction.xa.XAResource"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionXAForgetMessage"/>
		<reference type="java.util.concurrent.Executor"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionIndividualAcknowledgeMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.CreateSessionMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionXAResumeMessage"/>
		<reference type="org.hornetq.core.protocol.core.Channel"/>
		<reference type="org.hornetq.api.core.client.SessionFailureListener"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionRequestProducerCreditsMessage"/>
		<reference type="org.hornetq.api.core.client.ClientSession$QueueQuery"/>
		<reference type="org.hornetq.core.client.impl.ClientConsumerInternal"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.CreateQueueMessage"/>
		<reference type="org.hornetq.core.client.impl.ClientSessionImpl$BindingQueryImpl"/>
		<reference type="org.hornetq.core.protocol.core.impl.PacketImpl"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.ReattachSessionMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionXACommitMessage"/>
		<reference type="org.hornetq.core.client.impl.ClientProducerCreditManager"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionBindingQueryMessage"/>
		<reference type="org.hornetq.utils.IDGenerator"/>
		<reference type="org.hornetq.api.core.client.ClientConsumer"/>
		<reference type="org.hornetq.core.client.impl.ClientSessionImpl$QueueQueryImpl"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.utils.SimpleIDGenerator"/>
		<reference type="org.hornetq.spi.core.protocol.RemotingConnection"/>
		<reference type="org.hornetq.core.client.impl.ClientConsumerImpl"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionSendMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionXASetTimeoutMessage"/>
		<reference type="org.hornetq.core.client.impl.ClientMessageInternal"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionAcknowledgeMessage"/>
		<reference type="org.hornetq.core.client.impl.ClientSessionInternal"/>
		<reference type="org.hornetq.core.client.impl.FailoverManager"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="java.lang.Throwable"/>
		<reference type="java.lang.System"/>
		<reference type="org.hornetq.api.core.Message"/>
		<reference type="javax.transaction.xa.XAException"/>
		<reference type="java.lang.Thread"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionCreateConsumerMessage"/>
		<reference type="org.hornetq.spi.core.remoting.Connection"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionQueueQueryResponseMessage"/>
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.RollbackMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="org.hornetq.core.messagecounter.impl.MessageCounterManagerImpl$MessageCountersPinger" internal="true" project="trunk" package="org.hornetq.core.messagecounter.impl">
		<reference type="org.hornetq.core.messagecounter.MessageCounter"/>
		<reference type="org.hornetq.core.messagecounter.impl.MessageCounterManagerImpl"/>
		<reference type="java.lang.Runnable"/>
	</type>
	<type name="org.hornetq.core.server.group.impl.Response" internal="true" project="trunk" package="org.hornetq.core.server.group.impl">
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="javax.jms.QueueSender" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.jms.server.management.JMSManagementService" internal="true" project="trunk" package="org.hornetq.jms.server.management">
		<reference type="org.hornetq.jms.client.HornetQQueue"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.jms.client.HornetQConnectionFactory"/>
		<reference type="org.hornetq.api.jms.management.JMSServerControl"/>
		<reference type="org.hornetq.jms.client.HornetQTopic"/>
		<reference type="org.hornetq.jms.server.JMSServerManager"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="javax.transaction.SystemException" internal="false" project="jboss-transaction-api.jar" package="javax.transaction">
	</type>
	<type name="javax.transaction.xa.Xid" internal="false" project="rt.jar" package="javax.transaction.xa">
	</type>
	<type name="java.text.DateFormat" internal="false" project="rt.jar" package="java.text">
	</type>
	<type name="org.hornetq.core.protocol.stomp.Stomp$Headers$Error" internal="true" project="trunk" package="org.hornetq.core.protocol.stomp">
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.utils.JNDIUtil" internal="true" project="trunk" package="org.hornetq.utils">
		<reference type="java.lang.Object"/>
		<reference type="javax.naming.Context"/>
		<reference type="java.lang.Exception"/>
		<reference type="javax.naming.NamingException"/>
		<reference type="javax.naming.NameNotFoundException"/>
		<reference type="javax.naming.Binding"/>
		<reference type="javax.naming.NamingEnumeration"/>
		<reference type="java.util.StringTokenizer"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.jms.bridge.impl.JMSBridgeImpl$SourceReceiver" internal="true" project="trunk" package="org.hornetq.jms.bridge.impl">
		<reference type="java.lang.InterruptedException"/>
		<reference type="javax.jms.Message"/>
		<reference type="java.lang.System"/>
		<reference type="org.hornetq.jms.bridge.impl.JMSBridgeImpl"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.Thread"/>
	</type>
	<type name="javax.xml.parsers.DocumentBuilder" internal="false" project="rt.jar" package="javax.xml.parsers">
	</type>
	<type name="org.hornetq.core.management.impl.ClusterConnectionControlImpl" internal="true" project="trunk" package="org.hornetq.core.management.impl">
		<reference type="javax.management.MBeanOperationInfo"/>
		<reference type="org.hornetq.utils.json.JSONArray"/>
		<reference type="org.hornetq.utils.json.JSONObject"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.core.config.ClusterConnectionConfiguration"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.management.impl.MBeanInfoHelper"/>
		<reference type="org.hornetq.core.persistence.StorageManager"/>
		<reference type="org.hornetq.core.server.cluster.ClusterConnection"/>
		<reference type="java.lang.Override"/>
		<reference type="org.hornetq.core.management.impl.AbstractControl"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.api.core.management.ClusterConnectionControl"/>
	</type>
	<type name="org.hornetq.core.remoting.impl.invm.InVMConnectorFactory" internal="true" project="trunk" package="org.hornetq.core.remoting.impl.invm">
		<reference type="org.hornetq.core.remoting.impl.invm.InVMConnector"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.spi.core.remoting.ConnectorFactory"/>
		<reference type="org.hornetq.core.remoting.impl.invm.TransportConstants"/>
		<reference type="java.util.concurrent.ScheduledExecutorService"/>
		<reference type="org.hornetq.spi.core.remoting.BufferHandler"/>
		<reference type="org.hornetq.spi.core.remoting.Connector"/>
		<reference type="java.util.concurrent.Executor"/>
		<reference type="org.hornetq.spi.core.remoting.ConnectionLifeCycleListener"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.journal.impl.SyncSpeedTest$MyRunner" internal="true" project="trunk" package="org.hornetq.core.journal.impl">
		<reference type="java.nio.ByteBuffer"/>
		<reference type="java.lang.Runnable"/>
	</type>
	<type name="org.hornetq.core.replication.impl.ReplicationManagerImpl$ResponseHandler" internal="true" project="trunk" package="org.hornetq.core.replication.impl">
		<reference type="org.hornetq.core.protocol.core.ChannelHandler"/>
		<reference type="org.hornetq.core.protocol.core.impl.PacketImpl"/>
		<reference type="org.hornetq.core.protocol.core.Packet"/>
	</type>
	<type name="java.util.logging.Level" internal="false" project="rt.jar" package="java.util.logging">
	</type>
	<type name="org.hornetq.ra.ConnectionFactoryProperties" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Object"/>
		<reference type="java.lang.Boolean"/>
		<reference type="java.lang.Long"/>
		<reference type="java.lang.Integer"/>
		<reference type="org.hornetq.ra.HornetQRAMCFProperties"/>
		<reference type="java.lang.Double"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.ra.HornetQRAMessage" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.ra.HornetQRASession"/>
		<reference type="javax.jms.Message"/>
		<reference type="javax.jms.Destination"/>
		<reference type="java.util.Enumeration"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.jboss.netty.bootstrap.ServerBootstrap" internal="false" project="netty.jar" package="org.jboss.netty.bootstrap">
	</type>
	<type name="org.jboss.netty.channel.socket.oio.OioClientSocketChannelFactory" internal="false" project="netty.jar" package="org.jboss.netty.channel.socket.oio">
	</type>
	<type name="org.hornetq.utils.HornetQThreadFactory" internal="true" project="trunk" package="org.hornetq.utils">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Object"/>
		<reference type="java.security.AccessController"/>
		<reference type="java.util.concurrent.atomic.AtomicInteger"/>
		<reference type="java.lang.ClassLoader"/>
		<reference type="java.lang.System"/>
		<reference type="java.security.AccessControlException"/>
		<reference type="java.util.concurrent.ThreadFactory"/>
		<reference type="java.lang.ThreadGroup"/>
		<reference type="java.lang.Thread"/>
		<reference type="java.lang.Runnable"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.journal.PreparedTransactionInfo" internal="true" project="trunk" package="org.hornetq.core.journal">
		<reference type="org.hornetq.core.journal.RecordInfo"/>
	</type>
	<type name="org.hornetq.core.server.ConnectorService" internal="true" project="trunk" package="org.hornetq.core.server">
		<reference type="org.hornetq.core.server.HornetQComponent"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.protocol.core.Channel" internal="true" project="trunk" package="org.hornetq.core.protocol.core">
		<reference type="org.hornetq.core.protocol.core.CommandConfirmationHandler"/>
		<reference type="org.hornetq.core.protocol.core.ChannelHandler"/>
		<reference type="org.hornetq.core.protocol.core.CoreRemotingConnection"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="java.util.concurrent.locks.Lock"/>
		<reference type="org.hornetq.core.protocol.core.Packet"/>
	</type>
	<type name="org.hornetq.core.settings.HierarchicalRepository" internal="true" project="trunk" package="org.hornetq.core.settings">
		<reference type="org.hornetq.core.settings.HierarchicalRepositoryChangeListener"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.remoting.impl.netty.HttpKeepAliveRunnable" internal="true" project="trunk" package="org.hornetq.core.remoting.impl.netty">
		<reference type="org.hornetq.core.remoting.impl.netty.HttpAcceptorHandler"/>
		<reference type="java.lang.System"/>
		<reference type="java.lang.Runnable"/>
	</type>
	<type name="org.hornetq.jms.persistence.config.PersistedConnectionFactory" internal="true" project="trunk" package="org.hornetq.jms.persistence.config">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.journal.EncodingSupport"/>
		<reference type="org.hornetq.jms.server.config.ConnectionFactoryConfiguration"/>
		<reference type="org.hornetq.jms.server.config.impl.ConnectionFactoryConfigurationImpl"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.api.core.client.loadbalance.FirstElementConnectionLoadBalancingPolicy" internal="true" project="trunk" package="org.hornetq.api.core.client.loadbalance">
		<reference type="org.hornetq.api.core.client.loadbalance.ConnectionLoadBalancingPolicy"/>
	</type>
	<type name="org.hornetq.utils.concurrent.BlockingDeque" internal="true" project="trunk" package="org.hornetq.utils.concurrent">
		<reference type="java.lang.InterruptedException"/>
		<reference type="java.util.concurrent.TimeUnit"/>
	</type>
	<type name="org.hornetq.jms.client.HornetQConnectionMetaData" internal="true" project="trunk" package="org.hornetq.jms.client">
		<reference type="javax.jms.ConnectionMetaData"/>
		<reference type="java.util.Enumeration"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="org.hornetq.core.version.Version"/>
		<reference type="java.util.Vector"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="javax.resource.spi.work.Work" internal="false" project="jboss-jca-api.jar" package="javax.resource.spi.work">
	</type>
	<type name="javax.resource.spi.endpoint.MessageEndpoint" internal="false" project="jboss-jca-api.jar" package="javax.resource.spi.endpoint">
	</type>
	<type name="java.security.cert.X509Certificate" internal="false" project="rt.jar" package="java.security.cert">
	</type>
	<type name="org.hornetq.core.persistence.OperationContext" internal="true" project="trunk" package="org.hornetq.core.persistence">
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.journal.IOAsyncTask"/>
		<reference type="org.hornetq.core.journal.IOCompletion"/>
	</type>
	<type name="javax.management.MBeanServer" internal="false" project="rt.jar" package="javax.management">
	</type>
	<type name="java.lang.Float" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.hornetq.core.server.Divert" internal="true" project="trunk" package="org.hornetq.core.server">
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.server.Bindable"/>
		<reference type="org.hornetq.core.filter.Filter"/>
	</type>
	<type name="org.hornetq.core.transaction.impl.ResourceManagerImpl" internal="true" project="trunk" package="org.hornetq.core.transaction.impl">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.core.transaction.ResourceManager"/>
		<reference type="java.lang.Long"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.util.concurrent.ScheduledExecutorService"/>
		<reference type="org.hornetq.core.transaction.impl.ResourceManagerImpl$TxTimeoutHandler"/>
		<reference type="org.hornetq.core.server.HornetQComponent"/>
		<reference type="org.hornetq.core.transaction.Transaction"/>
		<reference type="org.hornetq.core.transaction.impl.ResourceManagerImpl$HeuristicCompletionHolder"/>
		<reference type="javax.transaction.xa.Xid"/>
		<reference type="java.util.concurrent.TimeUnit"/>
		<reference type="org.hornetq.core.transaction.Transaction$State"/>
	</type>
	<type name="org.hornetq.api.jms.management.DestinationControl" internal="true" project="trunk" package="org.hornetq.api.jms.management">
		<reference type="javax.management.MBeanOperationInfo"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.management.Parameter"/>
		<reference type="org.hornetq.api.core.management.Operation"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.journal.impl.Reclaimer" internal="true" project="trunk" package="org.hornetq.core.journal.impl">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.core.journal.impl.JournalFile"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.api.core.management.HornetQServerControl" internal="true" project="trunk" package="org.hornetq.api.core.management">
		<reference type="javax.management.MBeanOperationInfo"/>
		<reference type="java.lang.Object"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.management.Parameter"/>
		<reference type="org.hornetq.api.core.management.Operation"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="java.util.Map$Entry" internal="false" project="rt.jar" package="java.util">
	</type>
	<type name="org.jboss.netty.channel.ChannelStateEvent" internal="false" project="netty.jar" package="org.jboss.netty.channel">
	</type>
	<type name="java.net.InetAddress" internal="false" project="rt.jar" package="java.net">
	</type>
	<type name="org.hornetq.core.journal.impl.JournalImpl$MyRecord" internal="true" project="trunk" package="org.hornetq.core.journal.impl">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.journal.EncodingSupport"/>
	</type>
	<type name="java.util.List" internal="false" project="rt.jar" package="java.util">
	</type>
	<type name="org.hornetq.core.server.BindingQueryResult" internal="true" project="trunk" package="org.hornetq.core.server">
		<reference type="org.hornetq.api.core.SimpleString"/>
	</type>
	<type name="java.io.InputStreamReader" internal="false" project="rt.jar" package="java.io">
	</type>
	<type name="org.hornetq.ra.HornetQResourceAdapter" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="java.lang.Integer"/>
		<reference type="java.lang.Long"/>
		<reference type="javax.transaction.TransactionManager"/>
		<reference type="javax.resource.spi.ResourceAdapterInternalException"/>
		<reference type="javax.transaction.xa.XAResource"/>
		<reference type="java.lang.Double"/>
		<reference type="org.hornetq.jms.client.HornetQConnectionFactory"/>
		<reference type="javax.resource.ResourceException"/>
		<reference type="javax.resource.spi.ResourceAdapter"/>
		<reference type="javax.jms.Session"/>
		<reference type="org.hornetq.ra.ConnectionFactoryProperties"/>
		<reference type="org.hornetq.api.core.client.HornetQClient"/>
		<reference type="org.hornetq.api.jms.HornetQJMSClient"/>
		<reference type="javax.resource.spi.BootstrapContext"/>
		<reference type="javax.resource.spi.ActivationSpec"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.io.Serializable"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.TransportConfiguration"/>
		<reference type="org.hornetq.api.core.client.ClientSession"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.ra.inflow.HornetQActivation"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.api.core.client.ClientSessionFactory"/>
		<reference type="javax.resource.spi.work.WorkManager"/>
		<reference type="org.hornetq.ra.Util"/>
		<reference type="org.hornetq.ra.inflow.HornetQActivationSpec"/>
		<reference type="java.lang.Object"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="java.util.concurrent.atomic.AtomicBoolean"/>
		<reference type="org.hornetq.ra.HornetQRAProperties"/>
		<reference type="java.lang.Boolean"/>
		<reference type="javax.resource.spi.endpoint.MessageEndpointFactory"/>
	</type>
	<type name="org.hornetq.core.journal.impl.JournalTransaction$JournalUpdate" internal="true" project="trunk" package="org.hornetq.core.journal.impl">
		<reference type="org.hornetq.core.journal.impl.JournalFile"/>
	</type>
	<type name="org.hornetq.core.server.impl.QueueFactoryImpl" internal="true" project="trunk" package="org.hornetq.core.server.impl">
		<reference type="org.hornetq.core.server.QueueFactory"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.util.concurrent.ScheduledExecutorService"/>
		<reference type="org.hornetq.utils.ExecutorFactory"/>
		<reference type="org.hornetq.core.server.impl.LastValueQueue"/>
		<reference type="org.hornetq.core.persistence.StorageManager"/>
		<reference type="org.hornetq.core.server.Queue"/>
		<reference type="org.hornetq.core.settings.impl.AddressSettings"/>
		<reference type="org.hornetq.core.filter.Filter"/>
		<reference type="org.hornetq.core.server.impl.QueueImpl"/>
		<reference type="org.hornetq.core.postoffice.PostOffice"/>
	</type>
	<type name="org.hornetq.core.journal.impl.TimedBuffer$LogRatesTimerTask" internal="true" project="trunk" package="org.hornetq.core.journal.impl">
		<reference type="org.hornetq.core.journal.impl.TimedBuffer"/>
		<reference type="java.lang.System"/>
		<reference type="java.lang.Override"/>
		<reference type="java.util.TimerTask"/>
	</type>
	<type name="org.hornetq.jms.persistence.impl.nullpm.NullJMSStorageManagerImpl" internal="true" project="trunk" package="org.hornetq.jms.persistence.impl.nullpm">
		<reference type="org.hornetq.jms.persistence.config.PersistedConnectionFactory"/>
		<reference type="org.hornetq.core.replication.ReplicationEndpoint"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.jms.persistence.config.PersistedJNDI"/>
		<reference type="java.util.Collections"/>
		<reference type="org.hornetq.jms.persistence.config.PersistedType"/>
		<reference type="org.hornetq.jms.persistence.JMSStorageManager"/>
		<reference type="org.hornetq.jms.persistence.config.PersistedDestination"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.jms.client.SelectorTranslator" internal="true" project="trunk" package="org.hornetq.jms.client">
		<reference type="java.lang.Integer"/>
		<reference type="java.lang.Character"/>
		<reference type="java.lang.StringBuffer"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.paging.Page" internal="true" project="trunk" package="org.hornetq.core.paging">
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.paging.PagedMessage"/>
	</type>
	<type name="javax.jms.TransactionRolledBackException" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.core.journal.impl.dataformat.JournalDeleteRecord" internal="true" project="trunk" package="org.hornetq.core.journal.impl.dataformat">
		<reference type="org.hornetq.core.journal.impl.JournalImpl"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.journal.impl.dataformat.JournalInternalRecord"/>
		<reference type="java.lang.Override"/>
	</type>
	<type name="org.hornetq.jms.server.config.impl.ConnectionFactoryConfigurationImpl" internal="true" project="trunk" package="org.hornetq.jms.server.config.impl">
		<reference type="org.hornetq.jms.server.config.impl.TransportConfigurationEncodingSupport"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.utils.DataConstants"/>
		<reference type="java.lang.System"/>
		<reference type="org.hornetq.utils.BufferHelper"/>
		<reference type="org.hornetq.api.core.TransportConfiguration"/>
		<reference type="org.hornetq.jms.server.config.ConnectionFactoryConfiguration"/>
		<reference type="org.hornetq.api.core.client.HornetQClient"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.journal.impl.ExportJournal" internal="true" project="trunk" package="org.hornetq.core.journal.impl">
		<reference type="java.io.BufferedOutputStream"/>
		<reference type="org.hornetq.core.journal.impl.JournalImpl"/>
		<reference type="java.lang.Integer"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.io.FileOutputStream"/>
		<reference type="java.io.PrintStream"/>
		<reference type="org.hornetq.utils.Base64"/>
		<reference type="org.hornetq.core.journal.SequentialFileFactory"/>
		<reference type="java.lang.String"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.core.journal.impl.JournalFile"/>
		<reference type="java.lang.System"/>
		<reference type="org.hornetq.core.journal.impl.NIOSequentialFileFactory"/>
		<reference type="org.hornetq.core.journal.RecordInfo"/>
		<reference type="org.hornetq.core.journal.impl.JournalReaderCallback"/>
		<reference type="java.io.File"/>
	</type>
	<type name="org.hornetq.api.core.client.loadbalance.RandomConnectionLoadBalancingPolicy" internal="true" project="trunk" package="org.hornetq.api.core.client.loadbalance">
		<reference type="org.hornetq.utils.Random"/>
		<reference type="org.hornetq.api.core.client.loadbalance.ConnectionLoadBalancingPolicy"/>
	</type>
	<type name="org.hornetq.core.deployers.impl.BasicUserCredentialsDeployer" internal="true" project="trunk" package="org.hornetq.core.deployers.impl">
		<reference type="org.w3c.dom.Node"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.utils.XMLUtil"/>
		<reference type="org.hornetq.core.deployers.DeploymentManager"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.w3c.dom.NodeList"/>
		<reference type="org.hornetq.core.deployers.impl.XmlDeployer"/>
		<reference type="java.lang.Override"/>
		<reference type="org.hornetq.spi.core.security.HornetQSecurityManager"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.server.ConnectorServiceFactory" internal="true" project="trunk" package="org.hornetq.core.server">
		<reference type="java.lang.Object"/>
		<reference type="java.util.concurrent.ScheduledExecutorService"/>
		<reference type="org.hornetq.core.persistence.StorageManager"/>
		<reference type="org.hornetq.core.server.ConnectorService"/>
		<reference type="org.hornetq.core.postoffice.PostOffice"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.protocol.stomp.Stomp$Headers$Subscribe$AckModeValues" internal="true" project="trunk" package="org.hornetq.core.protocol.stomp">
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.server.impl.LastValueQueue" internal="true" project="trunk" package="org.hornetq.core.server.impl">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.MessageReference"/>
		<reference type="org.hornetq.core.persistence.StorageManager"/>
		<reference type="org.hornetq.core.settings.impl.AddressSettings"/>
		<reference type="java.util.concurrent.Executor"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.util.concurrent.ScheduledExecutorService"/>
		<reference type="org.hornetq.api.core.Message"/>
		<reference type="org.hornetq.core.server.impl.LastValueQueue$HolderReference"/>
		<reference type="org.hornetq.core.filter.Filter"/>
		<reference type="java.lang.Override"/>
		<reference type="org.hornetq.core.server.impl.QueueImpl"/>
		<reference type="org.hornetq.core.postoffice.PostOffice"/>
	</type>
	<type name="twitter4j.GeoLocation" internal="false" project="twitter4j-core.jar" package="twitter4j">
	</type>
	<type name="javax.resource.ResourceException" internal="false" project="jboss-jca-api.jar" package="javax.resource">
	</type>
	<type name="org.hornetq.utils.VersionLoader" internal="true" project="trunk" package="org.hornetq.utils">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Integer"/>
		<reference type="java.lang.Throwable"/>
		<reference type="org.hornetq.core.version.impl.VersionImpl"/>
		<reference type="java.io.InputStream"/>
		<reference type="java.io.IOException"/>
		<reference type="org.hornetq.core.version.Version"/>
		<reference type="java.lang.RuntimeException"/>
		<reference type="java.util.Properties"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="javax.jms.Connection" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.core.journal.impl.JournalReaderCallbackAbstract" internal="true" project="trunk" package="org.hornetq.core.journal.impl">
		<reference type="org.hornetq.core.journal.impl.JournalFile"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.journal.RecordInfo"/>
		<reference type="org.hornetq.core.journal.impl.JournalReaderCallback"/>
	</type>
	<type name="org.hornetq.jms.bridge.QualityOfServiceMode" internal="true" project="trunk" package="org.hornetq.jms.bridge">
	</type>
	<type name="org.hornetq.service.HornetQFileConfigurationService" internal="true" project="trunk" package="org.hornetq.service">
		<reference type="org.hornetq.service.HornetQFileConfigurationServiceMBean"/>
		<reference type="org.hornetq.core.config.Configuration"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.config.impl.FileConfiguration"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.server.impl.ServerConsumerImpl" internal="true" project="trunk" package="org.hornetq.core.server.impl">
		<reference type="java.lang.InterruptedException"/>
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="org.hornetq.utils.Future"/>
		<reference type="org.hornetq.api.core.management.NotificationType"/>
		<reference type="org.hornetq.spi.core.protocol.SessionCallback"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="org.hornetq.core.server.impl.ServerConsumerImpl$LargeMessageDeliverer"/>
		<reference type="org.hornetq.core.server.MessageReference"/>
		<reference type="org.hornetq.core.persistence.StorageManager"/>
		<reference type="org.hornetq.core.server.management.Notification"/>
		<reference type="java.util.concurrent.Executor"/>
		<reference type="org.hornetq.core.transaction.impl.TransactionImpl"/>
		<reference type="org.hornetq.core.server.LargeServerMessage"/>
		<reference type="org.hornetq.core.transaction.Transaction"/>
		<reference type="org.hornetq.core.server.ServerConsumer"/>
		<reference type="org.hornetq.core.server.ServerSession"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.util.concurrent.atomic.AtomicInteger"/>
		<reference type="org.hornetq.core.server.impl.ServerConsumerImpl$BrowserDeliverer"/>
		<reference type="org.hornetq.core.client.impl.ClientConsumerImpl"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.utils.TypedProperties"/>
		<reference type="org.hornetq.core.server.impl.ServerMessageImpl"/>
		<reference type="org.hornetq.core.server.HandleStatus"/>
		<reference type="java.lang.Runnable"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.core.postoffice.QueueBinding"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.core.postoffice.Binding"/>
		<reference type="java.lang.System"/>
		<reference type="org.hornetq.api.core.management.ManagementHelper"/>
		<reference type="org.hornetq.core.server.management.ManagementService"/>
		<reference type="org.hornetq.core.server.Queue"/>
		<reference type="java.lang.Thread"/>
		<reference type="org.hornetq.core.filter.Filter"/>
	</type>
	<type name="java.util.Set" internal="false" project="rt.jar" package="java.util">
	</type>
	<type name="java.lang.SuppressWarnings" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="java.io.ByteArrayOutputStream" internal="false" project="rt.jar" package="java.io">
	</type>
	<type name="org.hornetq.ra.HornetQRATopicPublisher" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="javax.jms.Topic"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="javax.jms.Message"/>
		<reference type="org.hornetq.ra.HornetQRASession"/>
		<reference type="javax.jms.TopicPublisher"/>
		<reference type="org.hornetq.ra.HornetQRAMessageProducer"/>
		<reference type="javax.jms.JMSException"/>
	</type>
	<type name="org.hornetq.core.config.BroadcastGroupConfiguration" internal="true" project="trunk" package="org.hornetq.core.config">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.io.Serializable"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.paging.impl.PagingStoreImpl$DepageRunnable" internal="true" project="trunk" package="org.hornetq.core.paging.impl">
		<reference type="java.lang.Throwable"/>
		<reference type="org.hornetq.core.paging.impl.PagingStoreImpl"/>
		<reference type="java.util.concurrent.Executor"/>
		<reference type="java.lang.Runnable"/>
	</type>
	<type name="java.security.MessageDigest" internal="false" project="rt.jar" package="java.security">
	</type>
	<type name="org.hornetq.core.persistence.impl.journal.JournalStorageManager$LargeMessageEncoding" internal="true" project="trunk" package="org.hornetq.core.persistence.impl.journal">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.server.LargeServerMessage"/>
		<reference type="org.hornetq.core.journal.EncodingSupport"/>
	</type>
	<type name="java.util.Hashtable" internal="false" project="rt.jar" package="java.util">
	</type>
	<type name="org.w3c.dom.NodeList" internal="false" project="rt.jar" package="org.w3c.dom">
	</type>
	<type name="org.hornetq.core.remoting.impl.invm.TransportConstants" internal="true" project="trunk" package="org.hornetq.core.remoting.impl.invm">
		<reference type="java.util.Collections"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.server.impl.QueueImpl" internal="true" project="trunk" package="org.hornetq.core.server.impl">
		<reference type="org.hornetq.core.server.impl.QueueImpl$DeliverRunner"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.util.concurrent.atomic.AtomicInteger"/>
		<reference type="org.hornetq.core.server.cluster.impl.Redistributor"/>
		<reference type="org.hornetq.core.server.MessageReference"/>
		<reference type="org.hornetq.core.persistence.StorageManager"/>
		<reference type="org.hornetq.core.settings.impl.AddressSettings"/>
		<reference type="org.hornetq.core.server.impl.QueueImpl$ConsumerHolder"/>
		<reference type="java.util.concurrent.Executor"/>
		<reference type="java.lang.Runnable"/>
		<reference type="org.hornetq.core.server.ScheduledDeliveryHandler"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.util.concurrent.ScheduledExecutorService"/>
		<reference type="org.hornetq.core.server.Queue"/>
		<reference type="java.util.concurrent.atomic.AtomicLong"/>
		<reference type="org.hornetq.core.filter.Filter"/>
		<reference type="org.hornetq.core.server.Consumer"/>
		<reference type="org.hornetq.core.postoffice.PostOffice"/>
	</type>
	<type name="org.hornetq.utils.Future" internal="true" project="trunk" package="org.hornetq.utils">
		<reference type="java.lang.InterruptedException"/>
		<reference type="java.lang.System"/>
		<reference type="java.lang.Runnable"/>
	</type>
	<type name="javax.jms.InvalidClientIDException" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="java.util.logging.Logger" internal="false" project="rt.jar" package="java.util.logging">
	</type>
	<type name="org.hornetq.integration.jboss.security.SecurityActions" internal="true" project="trunk" package="org.hornetq.integration.jboss.security">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.integration.jboss.security.JBossASSecurityManager"/>
	</type>
	<type name="org.hornetq.jms.server.config.impl.TransportConfigurationEncodingSupport" internal="true" project="trunk" package="org.hornetq.jms.server.config.impl">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.utils.DataConstants"/>
		<reference type="org.hornetq.utils.BufferHelper"/>
		<reference type="org.hornetq.api.core.TransportConfiguration"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.journal.impl.AIOSequentialFileFactory$ReuseBuffersController$LocalBufferCallback" internal="true" project="trunk" package="org.hornetq.core.journal.impl">
		<reference type="org.hornetq.core.journal.impl.AbstractSequentialFileFactory"/>
		<reference type="org.hornetq.core.asyncio.BufferCallback"/>
		<reference type="java.nio.ByteBuffer"/>
		<reference type="java.lang.System"/>
		<reference type="org.hornetq.core.journal.impl.AIOSequentialFileFactory$ReuseBuffersController"/>
	</type>
	<type name="org.hornetq.core.server.impl.QueueImpl$DelayedAddRedistributor" internal="true" project="trunk" package="org.hornetq.core.server.impl">
		<reference type="java.util.concurrent.Executor"/>
		<reference type="org.hornetq.core.server.impl.QueueImpl"/>
		<reference type="java.lang.Runnable"/>
	</type>
	<type name="org.hornetq.jms.server.config.TopicConfiguration" internal="true" project="trunk" package="org.hornetq.jms.server.config">
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.SessionXARollbackMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="org.hornetq.core.management.impl.AddressControlImpl" internal="true" project="trunk" package="org.hornetq.core.management.impl">
		<reference type="org.hornetq.core.paging.PagingManager"/>
		<reference type="org.hornetq.core.security.CheckType"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.utils.json.JSONObject"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="org.hornetq.core.postoffice.Bindings"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.management.impl.MBeanInfoHelper"/>
		<reference type="org.hornetq.core.persistence.StorageManager"/>
		<reference type="org.hornetq.core.management.impl.AbstractControl"/>
		<reference type="org.hornetq.api.core.management.AddressControl"/>
		<reference type="java.lang.String"/>
		<reference type="javax.management.MBeanOperationInfo"/>
		<reference type="org.hornetq.utils.json.JSONArray"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.postoffice.Binding"/>
		<reference type="java.lang.Throwable"/>
		<reference type="org.hornetq.core.security.Role"/>
		<reference type="java.lang.Override"/>
		<reference type="org.hornetq.core.postoffice.PostOffice"/>
	</type>
	<type name="java.util.concurrent.locks.Condition" internal="false" project="rt.jar" package="java.util.concurrent.locks">
	</type>
	<type name="org.jboss.netty.channel.socket.ClientSocketChannelFactory" internal="false" project="netty.jar" package="org.jboss.netty.channel.socket">
	</type>
	<type name="org.hornetq.core.server.Queue" internal="true" project="trunk" package="org.hornetq.core.server">
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.MessageReference"/>
		<reference type="org.hornetq.core.transaction.Transaction"/>
		<reference type="org.hornetq.core.server.Bindable"/>
		<reference type="java.util.concurrent.Executor"/>
		<reference type="org.hornetq.core.filter.Filter"/>
		<reference type="org.hornetq.core.server.Consumer"/>
	</type>
	<type name="org.hornetq.api.core.management.Parameter" internal="true" project="trunk" package="org.hornetq.api.core.management">
	</type>
	<type name="org.hornetq.core.server.impl.ServerConsumerImpl$BrowserDeliverer" internal="true" project="trunk" package="org.hornetq.core.server.impl">
		<reference type="org.hornetq.core.server.impl.ServerConsumerImpl"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.MessageReference"/>
		<reference type="org.hornetq.core.server.HandleStatus"/>
		<reference type="java.lang.Runnable"/>
	</type>
	<type name="org.hornetq.api.jms.management.TopicControl" internal="true" project="trunk" package="org.hornetq.api.jms.management">
		<reference type="javax.management.MBeanOperationInfo"/>
		<reference type="java.lang.Object"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.management.Parameter"/>
		<reference type="org.hornetq.api.core.management.Operation"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.api.jms.management.DestinationControl"/>
	</type>
	<type name="org.hornetq.spi.core.remoting.BufferDecoder" internal="true" project="trunk" package="org.hornetq.spi.core.remoting">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
	</type>
	<type name="org.hornetq.utils.TimeAndCounterIDGenerator" internal="true" project="trunk" package="org.hornetq.utils">
		<reference type="java.lang.IllegalStateException"/>
		<reference type="java.lang.System"/>
		<reference type="java.util.concurrent.atomic.AtomicLong"/>
		<reference type="org.hornetq.utils.IDGenerator"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.client.impl.ClientSessionImpl$BindingQueryImpl" internal="true" project="trunk" package="org.hornetq.core.client.impl">
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.api.core.client.ClientSession$BindingQuery"/>
	</type>
	<type name="org.hornetq.core.server.group.impl.GroupingHandlerConfiguration$TYPE" internal="true" project="trunk" package="org.hornetq.core.server.group.impl">
	</type>
	<type name="org.hornetq.api.core.HornetQException" internal="true" project="trunk" package="org.hornetq.api.core">
		<reference type="java.lang.Throwable"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.jboss.netty.util.VirtualExecutorService" internal="false" project="netty.jar" package="org.jboss.netty.util">
	</type>
	<type name="org.jboss.netty.channel.socket.oio.OioServerSocketChannelFactory" internal="false" project="netty.jar" package="org.jboss.netty.channel.socket.oio">
	</type>
	<type name="org.hornetq.api.jms.management.JMSServerControl" internal="true" project="trunk" package="org.hornetq.api.jms.management">
		<reference type="javax.management.MBeanOperationInfo"/>
		<reference type="java.lang.Object"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.management.Parameter"/>
		<reference type="org.hornetq.api.core.management.Operation"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.ra.HornetQRAMapMessage" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.ra.HornetQRAMessage"/>
		<reference type="java.lang.Object"/>
		<reference type="javax.jms.MapMessage"/>
		<reference type="org.hornetq.ra.HornetQRASession"/>
		<reference type="java.util.Enumeration"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.ra.HornetQRASessionFactoryImpl" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="java.util.HashSet"/>
		<reference type="org.hornetq.ra.HornetQRAManagedConnectionFactory"/>
		<reference type="javax.jms.Queue"/>
		<reference type="javax.resource.Referenceable"/>
		<reference type="java.util.Iterator"/>
		<reference type="javax.jms.TemporaryTopic"/>
		<reference type="javax.jms.Topic"/>
		<reference type="javax.jms.IllegalStateException"/>
		<reference type="javax.jms.XATopicSession"/>
		<reference type="javax.jms.XAQueueSession"/>
		<reference type="javax.jms.Session"/>
		<reference type="javax.jms.ConnectionMetaData"/>
		<reference type="javax.naming.Reference"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="org.hornetq.ra.HornetQRAConnectionManager"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="javax.jms.XASession"/>
		<reference type="org.hornetq.ra.HornetQRASession"/>
		<reference type="java.lang.Exception"/>
		<reference type="javax.jms.QueueSession"/>
		<reference type="java.util.Set"/>
		<reference type="javax.jms.ServerSessionPool"/>
		<reference type="javax.jms.ExceptionListener"/>
		<reference type="org.hornetq.ra.HornetQRAConnectionFactory"/>
		<reference type="org.hornetq.ra.HornetQRAConnectionRequestInfo"/>
		<reference type="javax.resource.spi.ConnectionManager"/>
		<reference type="java.lang.String"/>
		<reference type="javax.jms.TemporaryQueue"/>
		<reference type="org.hornetq.ra.HornetQRASessionFactory"/>
		<reference type="java.lang.Throwable"/>
		<reference type="javax.jms.TopicSession"/>
		<reference type="javax.jms.Destination"/>
		<reference type="org.hornetq.ra.HornetQResourceAdapter"/>
		<reference type="java.lang.RuntimeException"/>
		<reference type="javax.jms.ConnectionConsumer"/>
	</type>
	<type name="org.hornetq.core.journal.impl.dataformat.ByteArrayEncoding" internal="true" project="trunk" package="org.hornetq.core.journal.impl.dataformat">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="org.hornetq.core.journal.EncodingSupport"/>
	</type>
	<type name="javax.jms.Topic" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.core.settings.impl.HierarchicalObjectRepository" internal="true" project="trunk" package="org.hornetq.core.settings.impl">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.core.settings.HierarchicalRepositoryChangeListener"/>
		<reference type="java.lang.Throwable"/>
		<reference type="java.util.Collections"/>
		<reference type="org.hornetq.core.settings.impl.Match"/>
		<reference type="org.hornetq.core.settings.Mergeable"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.protocol.stomp.StompSession" internal="true" project="trunk" package="org.hornetq.core.protocol.stomp">
		<reference type="org.hornetq.core.server.QueueQueryResult"/>
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="org.hornetq.core.persistence.OperationContext"/>
		<reference type="org.hornetq.core.message.impl.MessageImpl"/>
		<reference type="org.hornetq.spi.core.protocol.SessionCallback"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="org.hornetq.core.protocol.stomp.StompSubscription"/>
		<reference type="java.lang.Long"/>
		<reference type="org.hornetq.utils.DataConstants"/>
		<reference type="org.hornetq.core.protocol.stomp.Stomp$Responses"/>
		<reference type="org.hornetq.core.protocol.stomp.StompProtocolManager"/>
		<reference type="org.hornetq.core.protocol.stomp.StompUtils"/>
		<reference type="org.hornetq.core.server.ServerSession"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.spi.core.protocol.RemotingConnection"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.utils.UUIDGenerator"/>
		<reference type="org.hornetq.core.protocol.stomp.Stomp$Headers$Message"/>
		<reference type="org.hornetq.core.protocol.stomp.StompFrame"/>
		<reference type="java.lang.String"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.api.core.Message"/>
		<reference type="org.hornetq.core.protocol.stomp.StompConnection"/>
		<reference type="org.hornetq.core.protocol.stomp.Stomp$Headers$Subscribe$AckModeValues"/>
		<reference type="org.hornetq.core.protocol.stomp.Stomp$Headers"/>
	</type>
	<type name="org.hornetq.integration.jboss.security.AS4SecurityActions" internal="true" project="trunk" package="org.hornetq.integration.jboss.security">
	</type>
	<type name="org.hornetq.core.protocol.stomp.Stomp$Headers$Unsubscribe" internal="true" project="trunk" package="org.hornetq.core.protocol.stomp">
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.persistence.impl.journal.JournalStorageManager$LargeMessageTXFailureCallback" internal="true" project="trunk" package="org.hornetq.core.persistence.impl.journal">
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="org.hornetq.api.core.HornetQBuffers"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.persistence.impl.journal.JournalStorageManager"/>
		<reference type="java.lang.Long"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.LargeServerMessage"/>
		<reference type="org.hornetq.core.journal.RecordInfo"/>
		<reference type="org.hornetq.core.journal.TransactionFailureCallback"/>
	</type>
	<type name="org.hornetq.ra.HornetQRAManagedConnectionFactory" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="javax.resource.spi.ManagedConnection"/>
		<reference type="javax.resource.spi.ResourceAdapterAssociation"/>
		<reference type="java.lang.Long"/>
		<reference type="java.lang.Integer"/>
		<reference type="org.hornetq.ra.HornetQRACredential"/>
		<reference type="org.hornetq.ra.HornetQRAConnectionMetaData"/>
		<reference type="java.lang.Double"/>
		<reference type="org.hornetq.jms.client.HornetQConnectionFactory"/>
		<reference type="java.util.Iterator"/>
		<reference type="javax.resource.ResourceException"/>
		<reference type="javax.resource.spi.ResourceAdapter"/>
		<reference type="javax.jms.ConnectionMetaData"/>
		<reference type="java.lang.Override"/>
		<reference type="org.hornetq.ra.HornetQRAManagedConnection"/>
		<reference type="org.hornetq.ra.HornetQRAConnectionManager"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="javax.resource.spi.ConnectionRequestInfo"/>
		<reference type="org.hornetq.ra.HornetQRAMCFProperties"/>
		<reference type="java.util.Set"/>
		<reference type="org.hornetq.ra.HornetQRAConnectionFactory"/>
		<reference type="javax.security.auth.Subject"/>
		<reference type="java.io.PrintWriter"/>
		<reference type="javax.resource.spi.ConnectionManager"/>
		<reference type="org.hornetq.ra.HornetQRAConnectionRequestInfo"/>
		<reference type="java.lang.String"/>
		<reference type="java.lang.Object"/>
		<reference type="java.lang.Boolean"/>
		<reference type="org.hornetq.ra.HornetQRAConnectionFactoryImpl"/>
		<reference type="javax.resource.spi.ManagedConnectionFactory"/>
		<reference type="org.hornetq.ra.HornetQResourceAdapter"/>
	</type>
	<type name="org.hornetq.core.server.impl.ServerMessageImpl" internal="true" project="trunk" package="org.hornetq.core.server.impl">
		<reference type="org.hornetq.core.message.impl.MessageImpl"/>
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.utils.DataConstants"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.impl.MessageReferenceImpl"/>
		<reference type="org.hornetq.core.server.MessageReference"/>
		<reference type="org.hornetq.core.paging.PagingStore"/>
		<reference type="org.hornetq.utils.MemorySize"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.System"/>
		<reference type="org.hornetq.api.core.Message"/>
		<reference type="java.io.InputStream"/>
		<reference type="org.hornetq.core.server.Queue"/>
		<reference type="java.lang.Override"/>
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.SessionQueueQueryMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="javax.management.MBeanRegistration" internal="false" project="rt.jar" package="javax.management">
	</type>
	<type name="java.lang.StringIndexOutOfBoundsException" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.hornetq.core.protocol.stomp.Stomp$Headers$Message" internal="true" project="trunk" package="org.hornetq.core.protocol.stomp">
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.jms.bridge.impl.JMSBridgeImpl$BatchTimeChecker" internal="true" project="trunk" package="org.hornetq.jms.bridge.impl">
		<reference type="java.lang.InterruptedException"/>
		<reference type="java.lang.System"/>
		<reference type="org.hornetq.jms.bridge.impl.JMSBridgeImpl"/>
		<reference type="java.lang.Runnable"/>
	</type>
	<type name="java.util.concurrent.ScheduledThreadPoolExecutor" internal="false" project="rt.jar" package="java.util.concurrent">
	</type>
	<type name="org.hornetq.core.journal.impl.JournalFile" internal="true" project="trunk" package="org.hornetq.core.journal.impl">
		<reference type="org.hornetq.core.journal.SequentialFile"/>
	</type>
	<type name="javax.management.MBeanNotificationInfo" internal="false" project="rt.jar" package="javax.management">
	</type>
	<type name="org.hornetq.core.persistence.config.PersistedRoles" internal="true" project="trunk" package="org.hornetq.core.persistence.config">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.journal.EncodingSupport"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="javax.resource.spi.endpoint.MessageEndpointFactory" internal="false" project="jboss-jca-api.jar" package="javax.resource.spi.endpoint">
	</type>
	<type name="org.hornetq.ra.HornetQRAService" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="javax.management.MBeanServer"/>
		<reference type="javax.management.ObjectName"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Object"/>
		<reference type="java.lang.Exception"/>
		<reference type="javax.management.ObjectInstance"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.journal.impl.SyncIOCompletion" internal="true" project="trunk" package="org.hornetq.core.journal.impl">
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.journal.IOCompletion"/>
	</type>
	<type name="org.hornetq.utils.json.JSONString" internal="true" project="trunk" package="org.hornetq.utils.json">
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.spi.core.logging.LogDelegateFactory" internal="true" project="trunk" package="org.hornetq.spi.core.logging">
		<reference type="org.hornetq.spi.core.logging.LogDelegate"/>
	</type>
	<type name="org.hornetq.core.journal.impl.SyncSpeedTest" internal="true" project="trunk" package="org.hornetq.core.journal.impl">
		<reference type="java.util.concurrent.CountDownLatch"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.core.journal.SequentialFile"/>
		<reference type="java.io.RandomAccessFile"/>
		<reference type="java.util.concurrent.Executors"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.journal.impl.NIOSequentialFile"/>
		<reference type="org.hornetq.core.journal.SequentialFileFactory"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.core.journal.impl.AIOSequentialFileFactory"/>
		<reference type="java.nio.ByteBuffer"/>
		<reference type="org.hornetq.core.journal.impl.NIOSequentialFileFactory"/>
		<reference type="java.lang.System"/>
		<reference type="java.nio.channels.FileChannel"/>
		<reference type="org.hornetq.core.journal.impl.AIOSequentialFile"/>
		<reference type="java.io.File"/>
	</type>
	<type name="org.hornetq.core.client.impl.ClientConsumerImpl" internal="true" project="trunk" package="org.hornetq.core.client.impl">
		<reference type="java.lang.InterruptedException"/>
		<reference type="org.hornetq.utils.Future"/>
		<reference type="org.hornetq.core.client.impl.ClientMessageImpl"/>
		<reference type="java.lang.Long"/>
		<reference type="java.util.concurrent.Executor"/>
		<reference type="org.hornetq.core.protocol.core.Channel"/>
		<reference type="org.hornetq.core.client.impl.ClientConsumerInternal"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionReceiveLargeMessage"/>
		<reference type="org.hornetq.core.client.impl.LargeMessageBufferImpl"/>
		<reference type="org.hornetq.api.core.client.MessageHandler"/>
		<reference type="java.io.File"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionConsumerFlowCreditMessage"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.utils.TokenBucketLimiter"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionConsumerCloseMessage"/>
		<reference type="org.hornetq.core.client.impl.ClientMessageInternal"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.core.client.impl.ClientSessionInternal"/>
		<reference type="org.hornetq.api.core.HornetQBuffers"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionReceiveContinuationMessage"/>
		<reference type="org.hornetq.core.client.impl.ClientConsumerImpl$Runner"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.Throwable"/>
		<reference type="java.lang.System"/>
		<reference type="java.util.concurrent.atomic.AtomicLong"/>
		<reference type="java.lang.Thread"/>
		<reference type="org.hornetq.api.core.client.ClientMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionQueueQueryResponseMessage"/>
	</type>
	<type name="javax.jms.JMSException" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="javax.net.ssl.TrustManager" internal="false" project="rt.jar" package="javax.net.ssl">
	</type>
	<type name="java.util.Map" internal="false" project="rt.jar" package="java.util">
	</type>
	<type name="org.hornetq.core.server.group.impl.GroupingHandlerConfiguration" internal="true" project="trunk" package="org.hornetq.core.server.group.impl">
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.server.group.impl.GroupingHandlerConfiguration$TYPE"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.jms.bridge.impl.JNDIConnectionFactoryFactory" internal="true" project="trunk" package="org.hornetq.jms.bridge.impl">
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.jms.bridge.ConnectionFactoryFactory"/>
		<reference type="javax.jms.ConnectionFactory"/>
		<reference type="org.hornetq.jms.bridge.impl.JNDIFactorySupport"/>
		<reference type="java.util.Hashtable"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.remoting.impl.netty.NettyConnector" internal="true" project="trunk" package="org.hornetq.core.remoting.impl.netty">
		<reference type="java.lang.IllegalStateException"/>
		<reference type="org.jboss.netty.channel.socket.http.HttpTunnelingClientSocketChannelFactory"/>
		<reference type="org.hornetq.core.remoting.impl.netty.NettyConnector$BatchFlusher"/>
		<reference type="org.jboss.netty.channel.group.DefaultChannelGroup"/>
		<reference type="org.jboss.netty.util.VirtualExecutorService"/>
		<reference type="org.jboss.netty.channel.ChannelPipeline"/>
		<reference type="org.jboss.netty.channel.Channel"/>
		<reference type="java.util.concurrent.TimeUnit"/>
		<reference type="org.hornetq.core.remoting.impl.netty.NettyConnector$HornetQClientChannelHandler"/>
		<reference type="org.hornetq.core.remoting.impl.netty.TransportConstants"/>
		<reference type="org.jboss.netty.channel.socket.oio.OioClientSocketChannelFactory"/>
		<reference type="org.jboss.netty.channel.group.ChannelGroup"/>
		<reference type="org.jboss.netty.channel.ChannelPipelineFactory"/>
		<reference type="org.jboss.netty.handler.ssl.SslHandler"/>
		<reference type="java.lang.String"/>
		<reference type="java.net.URI"/>
		<reference type="org.hornetq.utils.ConfigurationHelper"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.core.remoting.impl.ssl.SSLSupport"/>
		<reference type="org.hornetq.spi.core.remoting.Connector"/>
		<reference type="org.hornetq.spi.core.remoting.ConnectionLifeCycleListener"/>
		<reference type="org.hornetq.core.remoting.impl.netty.HornetQFrameDecoder2"/>
		<reference type="org.jboss.netty.util.Version"/>
		<reference type="org.hornetq.core.remoting.impl.netty.NettyConnection"/>
		<reference type="org.hornetq.core.remoting.impl.netty.NettyConnector$HttpHandler"/>
		<reference type="org.jboss.netty.channel.ChannelFuture"/>
		<reference type="java.lang.Runtime"/>
		<reference type="java.net.URISyntaxException"/>
		<reference type="org.jboss.netty.channel.socket.nio.NioClientSocketChannelFactory"/>
		<reference type="org.jboss.netty.handler.codec.http.HttpRequestEncoder"/>
		<reference type="java.util.concurrent.Executor"/>
		<reference type="org.hornetq.core.remoting.impl.netty.HornetQChannelHandler"/>
		<reference type="org.hornetq.core.remoting.impl.netty.NettyConnector$Listener"/>
		<reference type="org.jboss.netty.channel.StaticChannelPipeline"/>
		<reference type="org.jboss.netty.handler.codec.http.HttpResponseDecoder"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.spi.core.remoting.BufferHandler"/>
		<reference type="java.net.InetSocketAddress"/>
		<reference type="java.net.SocketAddress"/>
		<reference type="javax.net.ssl.SSLContext"/>
		<reference type="java.lang.Throwable"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="java.util.concurrent.ScheduledExecutorService"/>
		<reference type="org.jboss.netty.channel.ChannelHandler"/>
		<reference type="org.hornetq.utils.VersionLoader"/>
		<reference type="org.jboss.netty.bootstrap.ClientBootstrap"/>
		<reference type="org.jboss.netty.channel.socket.ClientSocketChannelFactory"/>
		<reference type="javax.net.ssl.SSLEngine"/>
		<reference type="java.net.ConnectException"/>
		<reference type="org.hornetq.spi.core.remoting.Connection"/>
	</type>
	<type name="org.hornetq.core.remoting.impl.netty.TransportConstants" internal="true" project="trunk" package="org.hornetq.core.remoting.impl.netty">
		<reference type="org.hornetq.spi.core.protocol.ProtocolType"/>
		<reference type="java.util.Collections"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.persistence.impl.journal.JournalStorageManager$DeleteEncoding" internal="true" project="trunk" package="org.hornetq.core.persistence.impl.journal">
		<reference type="org.hornetq.core.persistence.impl.journal.JournalStorageManager$QueueEncoding"/>
	</type>
	<type name="org.hornetq.core.remoting.impl.netty.HttpAcceptorHandler$ResponseRunner" internal="true" project="trunk" package="org.hornetq.core.remoting.impl.netty">
		<reference type="java.lang.InterruptedException"/>
		<reference type="org.hornetq.core.remoting.impl.netty.HttpAcceptorHandler$ResponseHolder"/>
		<reference type="org.hornetq.core.remoting.impl.netty.HttpAcceptorHandler"/>
		<reference type="org.jboss.netty.buffer.ChannelBuffer"/>
		<reference type="org.jboss.netty.buffer.ChannelBuffers"/>
		<reference type="org.jboss.netty.handler.codec.http.HttpHeaders$Names"/>
		<reference type="java.util.concurrent.TimeUnit"/>
		<reference type="java.lang.Runnable"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.server.impl.ScheduledDeliveryHandlerImpl$ScheduledDeliveryRunnable" internal="true" project="trunk" package="org.hornetq.core.server.impl">
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.core.server.MessageReference"/>
		<reference type="org.hornetq.core.server.impl.ScheduledDeliveryHandlerImpl"/>
		<reference type="java.lang.Runnable"/>
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.SessionXAStartMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="org.hornetq.jms.referenceable.ConnectionFactoryObjectFactory" internal="true" project="trunk" package="org.hornetq.jms.referenceable">
		<reference type="javax.naming.spi.ObjectFactory"/>
		<reference type="java.lang.Object"/>
		<reference type="javax.naming.Context"/>
		<reference type="java.lang.Exception"/>
		<reference type="javax.naming.Reference"/>
		<reference type="java.util.Hashtable"/>
		<reference type="javax.naming.Name"/>
		<reference type="org.hornetq.jms.referenceable.SerializableObjectRefAddr"/>
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.SessionReceiveContinuationMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="java.io.Writer" internal="false" project="rt.jar" package="java.io">
	</type>
	<type name="org.hornetq.core.journal.impl.JournalReaderCallback" internal="true" project="trunk" package="org.hornetq.core.journal.impl">
		<reference type="org.hornetq.core.journal.impl.JournalFile"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.journal.RecordInfo"/>
	</type>
	<type name="org.jboss.netty.buffer.ChannelBuffer" internal="false" project="netty.jar" package="org.jboss.netty.buffer">
	</type>
	<type name="javax.jms.XATopicSession" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="java.io.OutputStreamWriter" internal="false" project="rt.jar" package="java.io">
	</type>
	<type name="org.hornetq.ra.HornetQRATopicSubscriber" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="javax.jms.Topic"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.ra.HornetQRASession"/>
		<reference type="org.hornetq.ra.HornetQRAMessageConsumer"/>
		<reference type="javax.jms.TopicSubscriber"/>
		<reference type="javax.jms.JMSException"/>
	</type>
	<type name="org.hornetq.core.journal.impl.JournalImpl$JournalFileComparator" internal="true" project="trunk" package="org.hornetq.core.journal.impl">
		<reference type="org.hornetq.core.journal.impl.JournalFile"/>
	</type>
	<type name="org.jboss.tm.TransactionManagerLocator" internal="false" project="jboss-transaction-spi.jar" package="org.jboss.tm">
	</type>
	<type name="org.hornetq.api.core.management.BridgeControl" internal="true" project="trunk" package="org.hornetq.api.core.management">
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.management.HornetQComponentControl"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.api.core.TransportConfiguration" internal="true" project="trunk" package="org.hornetq.api.core">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="java.lang.Object"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="java.lang.Long"/>
		<reference type="java.lang.Integer"/>
		<reference type="java.lang.Boolean"/>
		<reference type="java.io.Serializable"/>
		<reference type="java.lang.StringBuilder"/>
		<reference type="org.hornetq.utils.UUIDGenerator"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.jboss.netty.channel.ChannelHandlerContext" internal="false" project="netty.jar" package="org.jboss.netty.channel">
	</type>
	<type name="java.io.OutputStream" internal="false" project="rt.jar" package="java.io">
	</type>
	<type name="org.jboss.netty.channel.Channels" internal="false" project="netty.jar" package="org.jboss.netty.channel">
	</type>
	<type name="org.hornetq.utils.Base64" internal="true" project="trunk" package="org.hornetq.utils">
	</type>
	<type name="java.lang.Boolean" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.hornetq.core.settings.impl.AddressSettings" internal="true" project="trunk" package="org.hornetq.core.settings.impl">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.Integer"/>
		<reference type="java.lang.Boolean"/>
		<reference type="java.lang.Long"/>
		<reference type="java.io.Serializable"/>
		<reference type="org.hornetq.utils.BufferHelper"/>
		<reference type="org.hornetq.core.journal.EncodingSupport"/>
		<reference type="org.hornetq.core.settings.impl.AddressFullMessagePolicy"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.server.cluster.impl.BridgeImpl" internal="true" project="trunk" package="org.hornetq.core.server.cluster.impl">
		<reference type="java.lang.InterruptedException"/>
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="org.hornetq.core.message.impl.MessageImpl"/>
		<reference type="org.hornetq.utils.Future"/>
		<reference type="org.hornetq.api.core.management.NotificationType"/>
		<reference type="org.hornetq.api.core.client.SendAcknowledgementHandler"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="org.hornetq.core.server.cluster.impl.BridgeImpl$StopRunnable"/>
		<reference type="org.hornetq.core.server.MessageReference"/>
		<reference type="org.hornetq.core.persistence.StorageManager"/>
		<reference type="org.hornetq.core.server.management.Notification"/>
		<reference type="org.hornetq.core.server.cluster.impl.BridgeImpl$CreateObjectsRunnable"/>
		<reference type="java.util.concurrent.Executor"/>
		<reference type="org.hornetq.core.server.cluster.MessageFlowRecord"/>
		<reference type="org.hornetq.api.core.client.SessionFailureListener"/>
		<reference type="java.nio.ByteBuffer"/>
		<reference type="org.hornetq.core.server.cluster.Bridge"/>
		<reference type="org.hornetq.core.filter.impl.FilterImpl"/>
		<reference type="org.hornetq.api.core.client.HornetQClient"/>
		<reference type="org.hornetq.core.server.management.NotificationService"/>
		<reference type="org.hornetq.api.core.client.ClientConsumer"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.spi.core.protocol.RemotingConnection"/>
		<reference type="org.hornetq.api.core.client.ClientProducer"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.TransportConfiguration"/>
		<reference type="org.hornetq.utils.TypedProperties"/>
		<reference type="org.hornetq.utils.UUIDGenerator"/>
		<reference type="org.hornetq.core.server.HandleStatus"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.core.client.impl.ClientSessionInternal"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.api.core.client.ClientSessionFactory"/>
		<reference type="org.hornetq.utils.UUID"/>
		<reference type="org.hornetq.core.postoffice.BindingType"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.api.core.management.ResourceNames"/>
		<reference type="java.util.concurrent.ScheduledExecutorService"/>
		<reference type="org.hornetq.api.core.management.ManagementHelper"/>
		<reference type="org.hornetq.api.core.Message"/>
		<reference type="org.hornetq.core.server.Queue"/>
		<reference type="java.lang.Thread"/>
		<reference type="org.hornetq.core.server.cluster.Transformer"/>
		<reference type="org.hornetq.core.filter.Filter"/>
		<reference type="org.hornetq.api.core.client.ClientMessage"/>
	</type>
	<type name="org.hornetq.core.transaction.Transaction" internal="true" project="trunk" package="org.hornetq.core.transaction">
		<reference type="org.hornetq.core.transaction.TransactionOperation"/>
		<reference type="java.lang.Object"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="javax.transaction.xa.Xid"/>
		<reference type="org.hornetq.core.transaction.Transaction$State"/>
	</type>
	<type name="org.hornetq.jms.bridge.DestinationFactory" internal="true" project="trunk" package="org.hornetq.jms.bridge">
		<reference type="java.lang.Exception"/>
		<reference type="javax.jms.Destination"/>
	</type>
	<type name="org.hornetq.core.paging.impl.PagingStoreImpl$OurRunnable" internal="true" project="trunk" package="org.hornetq.core.paging.impl">
		<reference type="java.lang.Runnable"/>
	</type>
	<type name="org.hornetq.core.server.cluster.impl.Redistributor" internal="true" project="trunk" package="org.hornetq.core.server.cluster.impl">
		<reference type="org.hornetq.utils.Future"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.MessageReference"/>
		<reference type="org.hornetq.core.persistence.StorageManager"/>
		<reference type="org.hornetq.core.server.HandleStatus"/>
		<reference type="java.util.concurrent.Executor"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.core.server.cluster.impl.Redistributor$Prompter"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.core.transaction.impl.TransactionImpl"/>
		<reference type="org.hornetq.core.journal.IOAsyncTask"/>
		<reference type="org.hornetq.core.transaction.Transaction"/>
		<reference type="org.hornetq.core.server.Queue"/>
		<reference type="org.hornetq.core.filter.Filter"/>
		<reference type="org.hornetq.core.server.Consumer"/>
		<reference type="org.hornetq.core.postoffice.PostOffice"/>
	</type>
	<type name="org.jboss.netty.handler.codec.http.HttpRequest" internal="false" project="netty.jar" package="org.jboss.netty.handler.codec.http">
	</type>
	<type name="org.hornetq.core.journal.impl.TimedBuffer$CheckTimer" internal="true" project="trunk" package="org.hornetq.core.journal.impl">
		<reference type="java.lang.InterruptedException"/>
		<reference type="org.hornetq.core.journal.impl.TimedBuffer"/>
		<reference type="java.lang.System"/>
		<reference type="java.lang.Thread"/>
		<reference type="java.lang.Runnable"/>
	</type>
	<type name="org.hornetq.utils.Random" internal="true" project="trunk" package="org.hornetq.utils">
		<reference type="java.lang.System"/>
		<reference type="java.util.Random"/>
	</type>
	<type name="org.jboss.netty.channel.ChannelPipeline" internal="false" project="netty.jar" package="org.jboss.netty.channel">
	</type>
	<type name="org.hornetq.core.message.impl.MessageImpl$DecodingContext" internal="true" project="trunk" package="org.hornetq.core.message.impl">
		<reference type="org.hornetq.core.message.impl.MessageImpl"/>
		<reference type="org.hornetq.api.core.HornetQBuffers"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.message.BodyEncoder"/>
		<reference type="java.nio.ByteBuffer"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
	</type>
	<type name="org.jboss.kernel.plugins.bootstrap.basic.BasicBootstrap" internal="false" project="jboss-kernel.jar" package="org.jboss.kernel.plugins.bootstrap.basic">
	</type>
	<type name="java.util.TimerTask" internal="false" project="rt.jar" package="java.util">
	</type>
	<type name="org.hornetq.integration.twitter.impl.OutgoingTweetsHandler" internal="true" project="trunk" package="org.hornetq.integration.twitter.impl">
		<reference type="twitter4j.TwitterException"/>
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="twitter4j.GeoLocation"/>
		<reference type="twitter4j.TwitterFactory"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.MessageReference"/>
		<reference type="org.hornetq.core.server.HandleStatus"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.integration.twitter.TwitterConstants"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.utils.ConfigurationHelper"/>
		<reference type="org.hornetq.core.postoffice.Binding"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="twitter4j.Twitter"/>
		<reference type="org.hornetq.core.server.ConnectorService"/>
		<reference type="org.hornetq.core.server.Queue"/>
		<reference type="org.hornetq.core.filter.Filter"/>
		<reference type="org.hornetq.core.server.Consumer"/>
		<reference type="twitter4j.StatusUpdate"/>
		<reference type="org.hornetq.core.postoffice.PostOffice"/>
	</type>
	<type name="org.hornetq.core.persistence.impl.journal.JournalStorageManager$HeuristicCompletionEncoding" internal="true" project="trunk" package="org.hornetq.core.persistence.impl.journal">
		<reference type="org.hornetq.utils.XidCodecSupport"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.utils.DataConstants"/>
		<reference type="org.hornetq.core.journal.EncodingSupport"/>
		<reference type="javax.transaction.xa.Xid"/>
	</type>
	<type name="java.io.StringWriter" internal="false" project="rt.jar" package="java.io">
	</type>
	<type name="org.hornetq.ra.HornetQRAConnectionFactory" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="javax.jms.XAQueueConnectionFactory"/>
		<reference type="javax.jms.QueueConnectionFactory"/>
		<reference type="javax.jms.XATopicConnectionFactory"/>
		<reference type="java.io.Serializable"/>
		<reference type="javax.jms.ConnectionFactory"/>
		<reference type="javax.resource.Referenceable"/>
		<reference type="javax.jms.XAConnectionFactory"/>
		<reference type="javax.jms.TopicConnectionFactory"/>
	</type>
	<type name="org.hornetq.core.client.impl.ClientProducerCreditManagerImpl" internal="true" project="trunk" package="org.hornetq.core.client.impl">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.core.client.impl.ClientProducerCredits"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.client.impl.ClientProducerCreditsImpl"/>
		<reference type="org.hornetq.core.client.impl.ClientProducerCreditManager"/>
		<reference type="org.hornetq.core.client.impl.ClientSessionInternal"/>
	</type>
	<type name="org.jboss.security.SimplePrincipal" internal="false" project="jbosssx.jar" package="org.jboss.security">
	</type>
	<type name="org.hornetq.core.journal.impl.AbstractSequentialFile" internal="true" project="trunk" package="org.hornetq.core.journal.impl">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="java.util.concurrent.CountDownLatch"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.core.journal.SequentialFile"/>
		<reference type="org.hornetq.core.journal.impl.SimpleWaitIOCallback"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.journal.impl.AbstractSequentialFile$LocalBufferObserver"/>
		<reference type="java.util.concurrent.Executor"/>
		<reference type="java.lang.Runnable"/>
		<reference type="org.hornetq.core.journal.SequentialFileFactory"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.api.core.HornetQBuffers"/>
		<reference type="org.hornetq.core.journal.impl.TimedBuffer"/>
		<reference type="org.hornetq.core.journal.impl.DummyCallback"/>
		<reference type="java.lang.Object"/>
		<reference type="java.nio.ByteBuffer"/>
		<reference type="org.hornetq.core.journal.IOAsyncTask"/>
		<reference type="org.hornetq.core.journal.EncodingSupport"/>
		<reference type="org.hornetq.core.journal.impl.TimedBufferObserver"/>
		<reference type="java.util.concurrent.atomic.AtomicLong"/>
		<reference type="java.util.concurrent.TimeUnit"/>
		<reference type="java.io.File"/>
	</type>
	<type name="org.jboss.netty.channel.ExceptionEvent" internal="false" project="netty.jar" package="org.jboss.netty.channel">
	</type>
	<type name="org.hornetq.core.journal.IOAsyncTask" internal="true" project="trunk" package="org.hornetq.core.journal">
		<reference type="org.hornetq.core.asyncio.AIOCallback"/>
	</type>
	<type name="org.hornetq.utils.ReusableLatch" internal="true" project="trunk" package="org.hornetq.utils">
	</type>
	<type name="java.net.URISyntaxException" internal="false" project="rt.jar" package="java.net">
	</type>
	<type name="org.hornetq.core.logging.impl.JULLogDelegate" internal="true" project="trunk" package="org.hornetq.core.logging.impl">
		<reference type="java.lang.Object"/>
		<reference type="java.lang.Throwable"/>
		<reference type="org.hornetq.spi.core.logging.LogDelegate"/>
		<reference type="java.util.logging.Level"/>
		<reference type="java.util.logging.Logger"/>
	</type>
	<type name="org.jboss.netty.channel.ChannelPipelineFactory" internal="false" project="netty.jar" package="org.jboss.netty.channel">
	</type>
	<type name="org.jboss.netty.handler.codec.http.HttpResponse" internal="false" project="netty.jar" package="org.jboss.netty.handler.codec.http">
	</type>
	<type name="org.hornetq.core.server.cluster.impl.ClusterConnectionImpl$MessageFlowRecordImpl" internal="true" project="trunk" package="org.hornetq.core.server.cluster.impl">
		<reference type="org.hornetq.api.core.management.NotificationType"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="org.hornetq.core.postoffice.Bindings"/>
		<reference type="java.lang.Long"/>
		<reference type="java.lang.Integer"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.postoffice.impl.PostOfficeImpl"/>
		<reference type="org.hornetq.utils.TypedProperties"/>
		<reference type="org.hornetq.core.server.management.Notification"/>
		<reference type="org.hornetq.core.server.group.impl.Proposal"/>
		<reference type="org.hornetq.core.server.cluster.RemoteQueueBinding"/>
		<reference type="org.hornetq.core.server.cluster.impl.ClusterConnectionImpl"/>
		<reference type="org.hornetq.core.server.cluster.MessageFlowRecord"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.core.server.cluster.impl.RemoteQueueBindingImpl"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.server.group.impl.Response"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="org.hornetq.api.core.management.ManagementHelper"/>
		<reference type="org.hornetq.core.server.cluster.Bridge"/>
		<reference type="org.hornetq.core.server.Queue"/>
		<reference type="org.hornetq.api.core.client.ClientMessage"/>
	</type>
	<type name="org.hornetq.jms.client.HornetQMessage" internal="true" project="trunk" package="org.hornetq.jms.client">
		<reference type="org.hornetq.core.client.impl.ClientMessageImpl"/>
		<reference type="org.hornetq.api.jms.HornetQJMSConstants"/>
		<reference type="java.lang.Long"/>
		<reference type="org.hornetq.jms.client.HornetQObjectMessage"/>
		<reference type="java.lang.Character"/>
		<reference type="java.lang.Byte"/>
		<reference type="org.hornetq.jms.client.JMSExceptionHelper"/>
		<reference type="javax.jms.IllegalStateException"/>
		<reference type="org.hornetq.jms.client.HornetQDestination"/>
		<reference type="javax.jms.MessageNotReadableException"/>
		<reference type="org.hornetq.api.core.PropertyConversionException"/>
		<reference type="java.util.Collections"/>
		<reference type="org.hornetq.jms.client.HornetQBytesMessage"/>
		<reference type="java.io.InputStream"/>
		<reference type="java.util.Enumeration"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="java.lang.Override"/>
		<reference type="org.hornetq.jms.client.HornetQStreamMessage"/>
		<reference type="java.io.OutputStream"/>
		<reference type="javax.jms.MessageNotWriteableException"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="javax.jms.Message"/>
		<reference type="javax.jms.MessageFormatException"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.client.ClientSession"/>
		<reference type="javax.jms.InvalidDestinationException"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.jms.client.HornetQMapMessage"/>
		<reference type="javax.jms.DeliveryMode"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.utils.UUID"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.jms.client.HornetQTextMessage"/>
		<reference type="java.lang.Boolean"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="javax.jms.Destination"/>
		<reference type="java.lang.System"/>
		<reference type="org.hornetq.api.core.Message"/>
		<reference type="java.lang.StringBuffer"/>
		<reference type="org.hornetq.api.core.client.ClientMessage"/>
	</type>
	<type name="org.hornetq.api.core.management.NotificationType" internal="true" project="trunk" package="org.hornetq.api.core.management">
	</type>
	<type name="org.jboss.netty.handler.codec.http.DefaultHttpRequest" internal="false" project="netty.jar" package="org.jboss.netty.handler.codec.http">
	</type>
	<type name="org.hornetq.integration.logging.HornetQLoggerFormatter" internal="true" project="trunk" package="org.hornetq.integration.logging">
		<reference type="java.util.logging.Formatter"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.text.SimpleDateFormat"/>
		<reference type="java.util.Date"/>
		<reference type="java.lang.System"/>
		<reference type="java.io.StringWriter"/>
		<reference type="java.lang.StringBuffer"/>
		<reference type="java.io.PrintWriter"/>
		<reference type="java.lang.Thread"/>
		<reference type="java.lang.Override"/>
		<reference type="java.util.logging.LogRecord"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="javax.management.MBeanOperationInfo" internal="false" project="rt.jar" package="javax.management">
	</type>
	<type name="org.jboss.netty.handler.codec.oneone.OneToOneEncoder" internal="false" project="netty.jar" package="org.jboss.netty.handler.codec.oneone">
	</type>
	<type name="org.jboss.netty.channel.local.DefaultLocalServerChannelFactory" internal="false" project="netty.jar" package="org.jboss.netty.channel.local">
	</type>
	<type name="org.hornetq.core.remoting.impl.netty.NettyConnector$Listener" internal="true" project="trunk" package="org.hornetq.core.remoting.impl.netty">
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.spi.core.protocol.ProtocolType"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="org.hornetq.core.remoting.impl.netty.NettyConnector"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.spi.core.remoting.ConnectionLifeCycleListener"/>
		<reference type="java.lang.Runnable"/>
		<reference type="org.hornetq.spi.core.remoting.Connection"/>
	</type>
	<type name="org.hornetq.core.persistence.config.PersistedAddressSetting" internal="true" project="trunk" package="org.hornetq.core.persistence.config">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.journal.EncodingSupport"/>
		<reference type="org.hornetq.core.settings.impl.AddressSettings"/>
	</type>
	<type name="java.util.ArrayList" internal="false" project="rt.jar" package="java.util">
	</type>
	<type name="javax.resource.spi.ManagedConnectionFactory" internal="false" project="jboss-jca-api.jar" package="javax.resource.spi">
	</type>
	<type name="org.hornetq.core.server.RoutingContext" internal="true" project="trunk" package="org.hornetq.core.server">
		<reference type="org.hornetq.core.transaction.Transaction"/>
		<reference type="org.hornetq.core.server.Queue"/>
	</type>
	<type name="org.hornetq.jms.client.JMSMessageListenerWrapper" internal="true" project="trunk" package="org.hornetq.jms.client">
		<reference type="org.hornetq.api.core.client.ClientConsumer"/>
		<reference type="javax.jms.MessageListener"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="javax.jms.Session"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.jms.client.HornetQSession"/>
		<reference type="org.hornetq.api.core.client.MessageHandler"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.jms.client.HornetQMessage"/>
		<reference type="java.lang.RuntimeException"/>
		<reference type="org.hornetq.api.core.client.ClientMessage"/>
	</type>
	<type name="org.hornetq.spi.core.protocol.ProtocolType" internal="true" project="trunk" package="org.hornetq.spi.core.protocol">
	</type>
	<type name="org.hornetq.core.server.impl.MemoryManagerImpl$MemoryRunnable" internal="true" project="trunk" package="org.hornetq.core.server.impl">
		<reference type="java.lang.InterruptedException"/>
		<reference type="org.hornetq.utils.SizeFormatterUtil"/>
		<reference type="org.hornetq.core.server.impl.MemoryManagerImpl"/>
		<reference type="java.lang.Thread"/>
		<reference type="java.lang.Runnable"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.ra.HornetQRACredential" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="javax.resource.spi.ConnectionRequestInfo"/>
		<reference type="javax.resource.spi.security.PasswordCredential"/>
		<reference type="java.io.Serializable"/>
		<reference type="javax.resource.spi.SecurityException"/>
		<reference type="javax.resource.spi.ManagedConnectionFactory"/>
		<reference type="javax.security.auth.Subject"/>
		<reference type="java.lang.Override"/>
		<reference type="org.hornetq.ra.HornetQRACredential$GetCredentialAction"/>
		<reference type="org.hornetq.ra.HornetQRAConnectionRequestInfo"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.utils.HQDeque" internal="true" project="trunk" package="org.hornetq.utils">
	</type>
	<type name="org.jboss.security.AuthenticationManager" internal="false" project="jboss-security-spi.jar" package="org.jboss.security">
	</type>
	<type name="org.hornetq.core.persistence.impl.nullpm.NullStorageManager" internal="true" project="trunk" package="org.hornetq.core.persistence.impl.nullpm">
		<reference type="org.hornetq.core.persistence.OperationContext"/>
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="org.hornetq.core.paging.PagingManager"/>
		<reference type="org.hornetq.core.transaction.ResourceManager"/>
		<reference type="org.hornetq.core.persistence.impl.nullpm.NullStorageLargeServerMessage"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="java.lang.Long"/>
		<reference type="org.hornetq.core.server.MessageReference"/>
		<reference type="org.hornetq.core.persistence.StorageManager"/>
		<reference type="java.util.concurrent.Executor"/>
		<reference type="org.hornetq.core.journal.JournalLoadInformation"/>
		<reference type="org.hornetq.core.paging.PagedMessage"/>
		<reference type="org.hornetq.core.persistence.config.PersistedAddressSetting"/>
		<reference type="org.hornetq.core.journal.IOAsyncTask"/>
		<reference type="org.hornetq.core.persistence.QueueBindingInfo"/>
		<reference type="java.util.Collections"/>
		<reference type="org.hornetq.core.server.LargeServerMessage"/>
		<reference type="org.hornetq.core.server.group.impl.GroupBinding"/>
		<reference type="org.hornetq.core.postoffice.PostOffice"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.persistence.GroupingInfo"/>
		<reference type="org.hornetq.core.persistence.config.PersistedRoles"/>
		<reference type="org.hornetq.core.paging.PageTransactionInfo"/>
		<reference type="org.hornetq.utils.UUID"/>
		<reference type="org.hornetq.api.core.HornetQBuffers"/>
		<reference type="org.hornetq.core.replication.ReplicationManager"/>
		<reference type="org.hornetq.core.postoffice.Binding"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.server.Queue"/>
		<reference type="java.util.concurrent.atomic.AtomicLong"/>
		<reference type="javax.transaction.xa.Xid"/>
	</type>
	<type name="org.hornetq.jms.client.HornetQMessageConsumer" internal="true" project="trunk" package="org.hornetq.jms.client">
		<reference type="org.hornetq.api.core.client.ClientConsumer"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="javax.jms.MessageListener"/>
		<reference type="javax.jms.MessageConsumer"/>
		<reference type="javax.jms.QueueReceiver"/>
		<reference type="javax.jms.Message"/>
		<reference type="java.lang.Exception"/>
		<reference type="javax.jms.Queue"/>
		<reference type="org.hornetq.jms.client.HornetQSession"/>
		<reference type="org.hornetq.jms.client.HornetQMessage"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.jms.client.JMSMessageListenerWrapper"/>
		<reference type="java.lang.String"/>
		<reference type="javax.jms.Topic"/>
		<reference type="org.hornetq.jms.client.JMSExceptionHelper"/>
		<reference type="javax.jms.IllegalStateException"/>
		<reference type="org.hornetq.jms.client.HornetQDestination"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="javax.jms.Session"/>
		<reference type="javax.jms.TopicSubscriber"/>
		<reference type="org.hornetq.api.core.client.MessageHandler"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="java.lang.Override"/>
		<reference type="org.hornetq.api.core.client.ClientMessage"/>
	</type>
	<type name="org.hornetq.core.server.impl.DeliveryImpl" internal="true" project="trunk" package="org.hornetq.core.server.impl">
		<reference type="org.hornetq.core.server.Delivery"/>
		<reference type="org.hornetq.core.server.MessageReference"/>
	</type>
	<type name="org.hornetq.jms.server.impl.JMSServerConfigParserImpl" internal="true" project="trunk" package="org.hornetq.jms.server.impl">
		<reference type="org.hornetq.core.config.impl.Validators"/>
		<reference type="org.hornetq.jms.server.config.impl.JMSQueueConfigurationImpl"/>
		<reference type="java.io.Reader"/>
		<reference type="org.hornetq.jms.server.config.ConnectionFactoryConfiguration"/>
		<reference type="org.hornetq.jms.server.config.impl.ConnectionFactoryConfigurationImpl"/>
		<reference type="org.hornetq.utils.XMLUtil"/>
		<reference type="org.hornetq.jms.server.config.JMSConfiguration"/>
		<reference type="java.io.InputStream"/>
		<reference type="org.hornetq.jms.server.impl.JMSServerDeployer"/>
		<reference type="org.hornetq.api.core.client.HornetQClient"/>
		<reference type="org.hornetq.utils.XMLConfigurationUtil"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.jms.server.config.TopicConfiguration"/>
		<reference type="org.w3c.dom.NamedNodeMap"/>
		<reference type="org.hornetq.jms.server.config.impl.TopicConfigurationImpl"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.jms.server.JMSServerConfigParser"/>
		<reference type="org.hornetq.jms.server.config.impl.JMSConfigurationImpl"/>
		<reference type="org.w3c.dom.NodeList"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.jms.server.config.JMSQueueConfiguration"/>
		<reference type="org.w3c.dom.Node"/>
		<reference type="org.w3c.dom.Element"/>
		<reference type="java.io.InputStreamReader"/>
	</type>
	<type name="javax.resource.spi.work.WorkManager" internal="false" project="jboss-jca-api.jar" package="javax.resource.spi.work">
	</type>
	<type name="org.hornetq.ra.HornetQRACredential$GetCredentialAction" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="java.security.AccessController"/>
		<reference type="javax.resource.spi.security.PasswordCredential"/>
		<reference type="org.hornetq.ra.HornetQRACredential"/>
		<reference type="javax.resource.spi.ManagedConnectionFactory"/>
		<reference type="javax.security.auth.Subject"/>
	</type>
	<type name="org.hornetq.ra.HornetQRASession" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="javax.jms.MessageListener"/>
		<reference type="java.lang.Error"/>
		<reference type="javax.jms.TopicPublisher"/>
		<reference type="javax.resource.ResourceException"/>
		<reference type="org.hornetq.ra.HornetQRATopicPublisher"/>
		<reference type="javax.jms.IllegalStateException"/>
		<reference type="javax.jms.XATopicSession"/>
		<reference type="org.hornetq.ra.HornetQRAMessageConsumer"/>
		<reference type="javax.jms.Session"/>
		<reference type="javax.jms.QueueSender"/>
		<reference type="javax.jms.StreamMessage"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="org.hornetq.ra.HornetQRAQueueReceiver"/>
		<reference type="javax.jms.ObjectMessage"/>
		<reference type="org.hornetq.ra.HornetQRAManagedConnection"/>
		<reference type="javax.jms.QueueBrowser"/>
		<reference type="javax.jms.MapMessage"/>
		<reference type="javax.jms.XASession"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.ra.HornetQRAConnectionRequestInfo"/>
		<reference type="javax.jms.BytesMessage"/>
		<reference type="java.util.HashSet"/>
		<reference type="javax.resource.spi.ManagedConnection"/>
		<reference type="javax.jms.QueueReceiver"/>
		<reference type="javax.jms.MessageConsumer"/>
		<reference type="org.hornetq.ra.HornetQRAMessageProducer"/>
		<reference type="javax.jms.Queue"/>
		<reference type="javax.jms.TextMessage"/>
		<reference type="org.hornetq.ra.HornetQRAQueueSender"/>
		<reference type="javax.transaction.xa.XAResource"/>
		<reference type="java.util.Iterator"/>
		<reference type="javax.jms.TemporaryTopic"/>
		<reference type="org.hornetq.ra.HornetQRATopicSubscriber"/>
		<reference type="javax.jms.Topic"/>
		<reference type="javax.resource.spi.ConnectionEvent"/>
		<reference type="javax.jms.XAQueueSession"/>
		<reference type="javax.jms.TopicSubscriber"/>
		<reference type="javax.jms.MessageProducer"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="javax.jms.Message"/>
		<reference type="java.io.Serializable"/>
		<reference type="javax.jms.QueueSession"/>
		<reference type="java.util.Set"/>
		<reference type="javax.jms.InvalidDestinationException"/>
		<reference type="org.hornetq.ra.HornetQRAConnectionFactory"/>
		<reference type="javax.jms.TemporaryQueue"/>
		<reference type="org.hornetq.ra.HornetQRASessionFactory"/>
		<reference type="javax.jms.TransactionInProgressException"/>
		<reference type="java.lang.Throwable"/>
		<reference type="javax.jms.TopicSession"/>
		<reference type="javax.jms.Destination"/>
	</type>
	<type name="org.hornetq.core.paging.impl.PageImpl" internal="true" project="trunk" package="org.hornetq.core.paging.impl">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.core.journal.SequentialFile"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="java.util.concurrent.atomic.AtomicInteger"/>
		<reference type="org.hornetq.utils.DataConstants"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.persistence.StorageManager"/>
		<reference type="org.hornetq.core.paging.PagedMessage"/>
		<reference type="org.hornetq.core.paging.Page"/>
		<reference type="org.hornetq.core.journal.SequentialFileFactory"/>
		<reference type="org.hornetq.api.core.HornetQBuffers"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.nio.ByteBuffer"/>
		<reference type="org.hornetq.core.paging.impl.PagedMessageImpl"/>
	</type>
	<type name="org.hornetq.core.journal.impl.JournalCompactor$UpdateCompactCommand" internal="true" project="trunk" package="org.hornetq.core.journal.impl">
		<reference type="org.hornetq.core.journal.impl.JournalCompactor$CompactCommand"/>
		<reference type="org.hornetq.core.journal.impl.JournalFile"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.journal.impl.AbstractJournalUpdateTask"/>
		<reference type="org.hornetq.core.journal.impl.JournalRecord"/>
		<reference type="java.lang.Override"/>
	</type>
	<type name="org.hornetq.core.postoffice.impl.BindingsImpl" internal="true" project="trunk" package="org.hornetq.core.postoffice.impl">
		<reference type="org.hornetq.core.message.impl.MessageImpl"/>
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.core.postoffice.Bindings"/>
		<reference type="java.lang.Integer"/>
		<reference type="java.lang.Long"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.core.server.group.impl.Proposal"/>
		<reference type="java.lang.IndexOutOfBoundsException"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.postoffice.Binding"/>
		<reference type="java.nio.ByteBuffer"/>
		<reference type="org.hornetq.core.server.group.impl.Response"/>
		<reference type="org.hornetq.api.core.Message"/>
		<reference type="org.hornetq.core.server.group.GroupingHandler"/>
		<reference type="org.hornetq.core.server.Queue"/>
		<reference type="org.hornetq.core.server.RoutingContext"/>
		<reference type="org.hornetq.core.filter.Filter"/>
	</type>
	<type name="org.hornetq.api.jms.HornetQJMSConstants" internal="true" project="trunk" package="org.hornetq.api.jms">
		<reference type="java.lang.String"/>
	</type>
	<type name="org.jboss.netty.handler.codec.http.websocket.WebSocketFrame" internal="false" project="netty.jar" package="org.jboss.netty.handler.codec.http.websocket">
	</type>
	<type name="org.hornetq.integration.jboss.tm.JBoss5TransactionManagerLocator" internal="true" project="trunk" package="org.hornetq.integration.jboss.tm">
		<reference type="javax.transaction.TransactionManager"/>
		<reference type="org.jboss.tm.TransactionManagerLocator"/>
	</type>
	<type name="org.hornetq.integration.jboss.security.SecurityActions$PrincipalInfoAction" internal="true" project="trunk" package="org.hornetq.integration.jboss.security">
		<reference type="java.security.Principal"/>
		<reference type="org.jboss.security.SecurityContextFactory"/>
		<reference type="org.jboss.security.SecurityContextAssociation"/>
		<reference type="org.hornetq.integration.jboss.security.SecurityActions"/>
		<reference type="java.lang.Object"/>
		<reference type="java.security.AccessController"/>
		<reference type="java.lang.Throwable"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.jboss.security.SecurityContext"/>
		<reference type="javax.security.auth.Subject"/>
		<reference type="java.lang.RuntimeException"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.server.impl.HornetQServerImpl" internal="true" project="trunk" package="org.hornetq.core.server.impl">
		<reference type="java.util.concurrent.ScheduledThreadPoolExecutor"/>
		<reference type="org.hornetq.core.config.BridgeConfiguration"/>
		<reference type="org.hornetq.core.transaction.ResourceManager"/>
		<reference type="org.hornetq.core.persistence.StorageManager"/>
		<reference type="java.util.concurrent.ThreadFactory"/>
		<reference type="org.hornetq.core.journal.JournalLoadInformation"/>
		<reference type="org.hornetq.core.transaction.impl.ResourceManagerImpl"/>
		<reference type="org.hornetq.core.persistence.config.PersistedAddressSetting"/>
		<reference type="org.hornetq.core.server.group.impl.RemoteGroupingHandler"/>
		<reference type="org.hornetq.core.server.MemoryManager"/>
		<reference type="org.hornetq.core.server.impl.QueueFactoryImpl"/>
		<reference type="org.hornetq.utils.ExecutorFactory"/>
		<reference type="org.hornetq.core.remoting.server.RemotingService"/>
		<reference type="org.hornetq.core.version.Version"/>
		<reference type="org.hornetq.core.server.ActivateCallback"/>
		<reference type="org.hornetq.api.core.client.ClientSessionFactory"/>
		<reference type="org.hornetq.core.security.SecurityStore"/>
		<reference type="org.hornetq.core.config.Configuration"/>
		<reference type="org.hornetq.core.deployers.DeploymentManager"/>
		<reference type="org.hornetq.core.deployers.impl.AddressSettingsDeployer"/>
		<reference type="org.hornetq.core.server.Queue"/>
		<reference type="org.hornetq.core.server.cluster.Transformer"/>
		<reference type="org.hornetq.core.server.impl.ServerInfo"/>
		<reference type="java.lang.InterruptedException"/>
		<reference type="org.hornetq.core.replication.impl.ReplicationManagerImpl"/>
		<reference type="org.hornetq.core.deployers.impl.FileDeploymentManager"/>
		<reference type="org.hornetq.core.config.DivertConfiguration"/>
		<reference type="org.hornetq.core.settings.impl.AddressSettings"/>
		<reference type="org.hornetq.core.protocol.core.Channel"/>
		<reference type="org.hornetq.core.server.cluster.impl.ClusterManagerImpl"/>
		<reference type="java.security.AccessController"/>
		<reference type="org.hornetq.core.remoting.server.impl.RemotingServiceImpl"/>
		<reference type="org.hornetq.core.server.HornetQServer"/>
		<reference type="org.hornetq.core.postoffice.PostOffice"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.spi.core.protocol.RemotingConnection"/>
		<reference type="java.util.concurrent.Executors"/>
		<reference type="org.hornetq.core.server.group.impl.LocalGroupingHandler"/>
		<reference type="org.hornetq.core.server.group.impl.GroupingHandlerConfiguration$TYPE"/>
		<reference type="org.hornetq.core.server.impl.DivertImpl"/>
		<reference type="org.hornetq.core.server.impl.MemoryManagerImpl"/>
		<reference type="org.hornetq.core.client.impl.ClientSessionFactoryImpl"/>
		<reference type="org.hornetq.core.server.impl.ServerSessionImpl"/>
		<reference type="org.hornetq.core.persistence.GroupingInfo"/>
		<reference type="org.hornetq.core.persistence.config.PersistedRoles"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.postoffice.Binding"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="java.lang.Throwable"/>
		<reference type="java.util.concurrent.ScheduledExecutorService"/>
		<reference type="java.lang.System"/>
		<reference type="org.hornetq.utils.VersionLoader"/>
		<reference type="org.hornetq.core.paging.PagingManager"/>
		<reference type="org.hornetq.core.security.CheckType"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="org.hornetq.core.postoffice.impl.LocalQueueBinding"/>
		<reference type="org.hornetq.core.security.impl.SecurityStoreImpl"/>
		<reference type="org.hornetq.core.config.CoreQueueConfiguration"/>
		<reference type="org.hornetq.core.deployers.impl.QueueDeployer"/>
		<reference type="org.hornetq.core.postoffice.DuplicateIDCache"/>
		<reference type="org.hornetq.core.replication.impl.ReplicationEndpointImpl"/>
		<reference type="org.hornetq.core.persistence.impl.journal.JournalStorageManager"/>
		<reference type="org.hornetq.core.replication.ReplicationEndpoint"/>
		<reference type="org.hornetq.core.persistence.QueueBindingInfo"/>
		<reference type="org.hornetq.core.filter.impl.FilterImpl"/>
		<reference type="org.hornetq.core.server.ServerSession"/>
		<reference type="org.hornetq.core.deployers.Deployer"/>
		<reference type="org.hornetq.core.security.Role"/>
		<reference type="java.lang.Override"/>
		<reference type="java.util.concurrent.TimeUnit"/>
		<reference type="org.hornetq.core.server.impl.ConnectorsService"/>
		<reference type="org.hornetq.core.server.cluster.ClusterManager"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.utils.OrderedExecutorFactory"/>
		<reference type="org.hornetq.core.server.management.impl.ManagementServiceImpl"/>
		<reference type="java.lang.Runnable"/>
		<reference type="org.hornetq.core.deployers.impl.SecurityDeployer"/>
		<reference type="java.lang.management.ManagementFactory"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.core.journal.impl.SyncSpeedTest"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.core.deployers.impl.BasicUserCredentialsDeployer"/>
		<reference type="java.lang.ClassLoader"/>
		<reference type="org.hornetq.core.paging.impl.PagingStoreFactoryNIO"/>
		<reference type="org.hornetq.spi.core.logging.LogDelegateFactory"/>
		<reference type="org.hornetq.core.server.management.ManagementService"/>
		<reference type="java.util.concurrent.ExecutorService"/>
		<reference type="org.hornetq.spi.core.security.HornetQSecurityManager"/>
		<reference type="org.hornetq.utils.HornetQThreadFactory"/>
		<reference type="org.hornetq.spi.core.protocol.SessionCallback"/>
		<reference type="org.hornetq.core.server.Divert"/>
		<reference type="java.lang.Long"/>
		<reference type="org.hornetq.core.postoffice.impl.PostOfficeImpl"/>
		<reference type="javax.management.MBeanServer"/>
		<reference type="org.hornetq.core.config.impl.ConfigurationImpl"/>
		<reference type="org.hornetq.core.client.impl.FailoverManagerImpl"/>
		<reference type="org.hornetq.core.server.group.impl.GroupBinding"/>
		<reference type="org.hornetq.api.core.client.HornetQClient"/>
		<reference type="org.hornetq.core.postoffice.impl.DivertBinding"/>
		<reference type="org.hornetq.core.server.QueueFactory"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.TransportConfiguration"/>
		<reference type="org.hornetq.utils.UUIDGenerator"/>
		<reference type="org.hornetq.core.management.impl.HornetQServerControlImpl"/>
		<reference type="org.hornetq.core.paging.impl.PagingManagerImpl"/>
		<reference type="org.hornetq.core.client.impl.FailoverManager"/>
		<reference type="org.hornetq.utils.UUID"/>
		<reference type="org.hornetq.core.persistence.impl.nullpm.NullStorageManager"/>
		<reference type="org.hornetq.core.replication.ReplicationManager"/>
		<reference type="org.hornetq.core.server.group.impl.GroupingHandlerConfiguration"/>
		<reference type="org.hornetq.core.server.group.GroupingHandler"/>
		<reference type="java.lang.Thread"/>
		<reference type="org.hornetq.core.filter.Filter"/>
		<reference type="org.hornetq.utils.SecurityFormatter"/>
	</type>
	<type name="java.io.InterruptedIOException" internal="false" project="rt.jar" package="java.io">
	</type>
	<type name="javax.jms.Session" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.jms.bridge.ConnectionFactoryFactory" internal="true" project="trunk" package="org.hornetq.jms.bridge">
		<reference type="java.lang.Exception"/>
		<reference type="javax.jms.ConnectionFactory"/>
	</type>
	<type name="org.jboss.kernel.plugins.deployment.xml.BeanXMLDeployer" internal="false" project="jboss-kernel.jar" package="org.jboss.kernel.plugins.deployment.xml">
	</type>
	<type name="java.lang.Double" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.jboss.netty.channel.group.ChannelGroup" internal="false" project="netty.jar" package="org.jboss.netty.channel.group">
	</type>
	<type name="org.hornetq.utils.concurrent.HornetQConcurrentLinkedQueue$Itr" internal="true" project="trunk" package="org.hornetq.utils.concurrent">
		<reference type="java.lang.IllegalStateException"/>
		<reference type="java.util.NoSuchElementException"/>
	</type>
	<type name="org.hornetq.core.config.DivertConfiguration" internal="true" project="trunk" package="org.hornetq.core.config">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.io.Serializable"/>
		<reference type="org.hornetq.utils.UUIDGenerator"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.postoffice.BindingType" internal="true" project="trunk" package="org.hornetq.core.postoffice">
	</type>
	<type name="org.hornetq.utils.concurrent.LinkedBlockingDeque" internal="true" project="trunk" package="org.hornetq.utils.concurrent">
		<reference type="java.io.Serializable"/>
	</type>
	<type name="java.util.logging.Formatter" internal="false" project="rt.jar" package="java.util.logging">
	</type>
	<type name="java.lang.IndexOutOfBoundsException" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="javax.resource.spi.ResourceAdapterInternalException" internal="false" project="jboss-jca-api.jar" package="javax.resource.spi">
	</type>
	<type name="javax.resource.Referenceable" internal="false" project="jboss-jca-api.jar" package="javax.resource">
	</type>
	<type name="org.hornetq.core.filter.impl.SimpleStringReader" internal="true" project="trunk" package="org.hornetq.core.filter.impl">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.Math"/>
		<reference type="java.io.Reader"/>
		<reference type="java.io.IOException"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.IndexOutOfBoundsException"/>
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.ReplicationLargemessageEndMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="org.hornetq.integration.twitter.TwitterConstants" internal="true" project="trunk" package="org.hornetq.integration.twitter">
		<reference type="java.lang.String"/>
	</type>
	<type name="javax.resource.spi.ManagedConnectionMetaData" internal="false" project="jboss-jca-api.jar" package="javax.resource.spi">
	</type>
	<type name="java.nio.ByteBuffer" internal="false" project="rt.jar" package="java.nio">
	</type>
	<type name="org.hornetq.utils.json.JSONArray" internal="true" project="trunk" package="org.hornetq.utils.json">
		<reference type="java.lang.reflect.Array"/>
		<reference type="java.util.ArrayList"/>
		<reference type="org.hornetq.utils.json.JSONObject"/>
		<reference type="java.lang.Long"/>
		<reference type="java.lang.Integer"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.lang.Character"/>
		<reference type="org.hornetq.utils.json.JSONException"/>
		<reference type="java.lang.Double"/>
		<reference type="java.util.Iterator"/>
		<reference type="java.util.Collection"/>
		<reference type="java.lang.String"/>
		<reference type="java.lang.Object"/>
		<reference type="java.util.Map"/>
		<reference type="java.lang.Boolean"/>
		<reference type="java.io.Writer"/>
		<reference type="java.lang.StringBuffer"/>
		<reference type="java.io.IOException"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.Number"/>
		<reference type="org.hornetq.utils.json.JSONTokener"/>
	</type>
	<type name="org.hornetq.core.management.impl.QueueControlImpl" internal="true" project="trunk" package="org.hornetq.core.management.impl">
		<reference type="org.hornetq.utils.json.JSONObject"/>
		<reference type="org.hornetq.api.core.management.QueueControl"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="org.hornetq.core.messagecounter.MessageCounter"/>
		<reference type="org.hornetq.core.server.MessageReference"/>
		<reference type="org.hornetq.core.messagecounter.impl.MessageCounterHelper"/>
		<reference type="org.hornetq.core.persistence.StorageManager"/>
		<reference type="org.hornetq.core.settings.impl.AddressSettings"/>
		<reference type="org.hornetq.core.management.impl.AbstractControl"/>
		<reference type="org.hornetq.api.core.management.MessageCounterInfo"/>
		<reference type="org.hornetq.core.filter.impl.FilterImpl"/>
		<reference type="java.lang.Override"/>
		<reference type="org.hornetq.core.postoffice.PostOffice"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.management.impl.MBeanInfoHelper"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="java.lang.String"/>
		<reference type="javax.management.MBeanOperationInfo"/>
		<reference type="org.hornetq.utils.json.JSONArray"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.postoffice.Binding"/>
		<reference type="java.util.Map"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="org.hornetq.api.core.Message"/>
		<reference type="org.hornetq.core.server.Queue"/>
		<reference type="org.hornetq.core.filter.Filter"/>
	</type>
	<type name="org.jboss.netty.channel.local.LocalAddress" internal="false" project="netty.jar" package="org.jboss.netty.channel.local">
	</type>
	<type name="org.hornetq.core.journal.impl.JournalCompactor$PendingTransaction" internal="true" project="trunk" package="org.hornetq.core.journal.impl">
	</type>
	<type name="org.hornetq.utils.TypedProperties" internal="true" project="trunk" package="org.hornetq.utils">
	</type>
	<type name="org.hornetq.core.cluster.impl.DiscoveryGroupImpl" internal="true" project="trunk" package="org.hornetq.core.cluster.impl">
		<reference type="java.lang.InterruptedException"/>
		<reference type="org.hornetq.api.core.management.NotificationType"/>
		<reference type="org.hornetq.core.server.management.Notification"/>
		<reference type="java.io.InterruptedIOException"/>
		<reference type="java.net.MulticastSocket"/>
		<reference type="org.hornetq.core.cluster.DiscoveryGroup"/>
		<reference type="org.hornetq.core.server.management.NotificationService"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.TransportConfiguration"/>
		<reference type="org.hornetq.utils.TypedProperties"/>
		<reference type="org.hornetq.core.cluster.DiscoveryListener"/>
		<reference type="java.lang.Runnable"/>
		<reference type="java.lang.String"/>
		<reference type="java.net.InetAddress"/>
		<reference type="org.hornetq.api.core.HornetQBuffers"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.Throwable"/>
		<reference type="org.hornetq.core.cluster.DiscoveryEntry"/>
		<reference type="java.lang.System"/>
		<reference type="java.io.IOException"/>
		<reference type="java.lang.Thread"/>
		<reference type="java.net.DatagramPacket"/>
	</type>
	<type name="org.hornetq.core.server.Consumer" internal="true" project="trunk" package="org.hornetq.core.server">
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.MessageReference"/>
		<reference type="org.hornetq.core.server.HandleStatus"/>
		<reference type="org.hornetq.core.filter.Filter"/>
	</type>
	<type name="org.hornetq.core.server.cluster.impl.BroadcastGroupImpl" internal="true" project="trunk" package="org.hornetq.core.server.cluster.impl">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.api.core.management.NotificationType"/>
		<reference type="org.hornetq.core.server.cluster.BroadcastGroup"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.net.DatagramSocket"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.TransportConfiguration"/>
		<reference type="org.hornetq.utils.TypedProperties"/>
		<reference type="org.hornetq.utils.UUIDGenerator"/>
		<reference type="org.hornetq.core.server.management.Notification"/>
		<reference type="java.lang.Runnable"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.api.core.HornetQBuffers"/>
		<reference type="java.net.InetAddress"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.net.DatagramPacket"/>
		<reference type="org.hornetq.core.server.management.NotificationService"/>
	</type>
	<type name="javax.transaction.xa.XAException" internal="false" project="rt.jar" package="javax.transaction.xa">
	</type>
	<type name="org.hornetq.core.client.impl.LargeMessageBufferInternal" internal="true" project="trunk" package="org.hornetq.core.client.impl">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="java.io.OutputStream"/>
	</type>
	<type name="javax.jms.XAQueueConnection" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="java.io.FilenameFilter" internal="false" project="rt.jar" package="java.io">
	</type>
	<type name="java.lang.Runtime" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.hornetq.core.journal.impl.dataformat.JournalAddRecordTX" internal="true" project="trunk" package="org.hornetq.core.journal.impl.dataformat">
		<reference type="org.hornetq.core.journal.impl.JournalImpl"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.journal.impl.dataformat.JournalInternalRecord"/>
		<reference type="org.hornetq.core.journal.EncodingSupport"/>
		<reference type="java.lang.Override"/>
	</type>
	<type name="org.hornetq.core.journal.impl.TimedBuffer" internal="true" project="trunk" package="org.hornetq.core.journal.impl">
		<reference type="java.lang.InterruptedException"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="java.lang.Math"/>
		<reference type="java.util.TimerTask"/>
		<reference type="org.hornetq.core.journal.impl.TimedBuffer$LogRatesTimerTask"/>
		<reference type="org.hornetq.core.journal.impl.dataformat.ByteArrayEncoding"/>
		<reference type="org.hornetq.api.core.HornetQBuffers"/>
		<reference type="java.util.Timer"/>
		<reference type="java.nio.ByteBuffer"/>
		<reference type="java.lang.System"/>
		<reference type="org.hornetq.core.journal.impl.TimedBuffer$CheckTimer"/>
		<reference type="org.hornetq.core.journal.IOAsyncTask"/>
		<reference type="org.hornetq.core.journal.EncodingSupport"/>
		<reference type="org.hornetq.core.journal.impl.TimedBufferObserver"/>
		<reference type="java.util.concurrent.Semaphore"/>
		<reference type="java.util.concurrent.atomic.AtomicLong"/>
		<reference type="java.lang.Thread"/>
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.SessionCreateConsumerMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="org.hornetq.core.server.cluster.Transformer" internal="true" project="trunk" package="org.hornetq.core.server.cluster">
		<reference type="org.hornetq.core.server.ServerMessage"/>
	</type>
	<type name="org.jboss.netty.bootstrap.ClientBootstrap" internal="false" project="netty.jar" package="org.jboss.netty.bootstrap">
	</type>
	<type name="org.hornetq.jms.client.HornetQTextMessage" internal="true" project="trunk" package="org.hornetq.jms.client">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.client.ClientSession"/>
		<reference type="org.hornetq.api.core.Message"/>
		<reference type="javax.jms.TextMessage"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="org.hornetq.jms.client.HornetQMessage"/>
		<reference type="java.lang.Override"/>
		<reference type="org.hornetq.api.core.client.ClientMessage"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.integration.twitter.TwitterIncomingConnectorServiceFactory" internal="true" project="trunk" package="org.hornetq.integration.twitter">
		<reference type="org.hornetq.integration.twitter.impl.IncomingTweetsHandler"/>
		<reference type="org.hornetq.integration.twitter.TwitterConstants"/>
		<reference type="java.lang.Object"/>
		<reference type="java.util.concurrent.ScheduledExecutorService"/>
		<reference type="org.hornetq.core.server.ConnectorServiceFactory"/>
		<reference type="org.hornetq.core.persistence.StorageManager"/>
		<reference type="org.hornetq.core.server.ConnectorService"/>
		<reference type="org.hornetq.core.postoffice.PostOffice"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.utils.UUIDGenerator" internal="true" project="trunk" package="org.hornetq.utils">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Integer"/>
		<reference type="java.util.Arrays"/>
		<reference type="java.util.UUID"/>
		<reference type="java.lang.reflect.Method"/>
		<reference type="org.hornetq.utils.UUIDTimer"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.utils.UUID"/>
		<reference type="java.security.SecureRandom"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.Throwable"/>
		<reference type="java.lang.Boolean"/>
		<reference type="java.lang.System"/>
		<reference type="java.util.Random"/>
		<reference type="java.net.NetworkInterface"/>
	</type>
	<type name="org.hornetq.api.core.management.HornetQComponentControl" internal="true" project="trunk" package="org.hornetq.api.core.management">
		<reference type="java.lang.Exception"/>
	</type>
	<type name="org.hornetq.spi.core.remoting.Connection" internal="true" project="trunk" package="org.hornetq.spi.core.remoting">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="java.lang.Object"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="javax.jms.MessageProducer" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.core.persistence.StorageManager" internal="true" project="trunk" package="org.hornetq.core.persistence">
		<reference type="org.hornetq.core.paging.PagingManager"/>
		<reference type="org.hornetq.core.persistence.OperationContext"/>
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="org.hornetq.core.transaction.ResourceManager"/>
		<reference type="java.lang.Long"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.MessageReference"/>
		<reference type="org.hornetq.core.journal.JournalLoadInformation"/>
		<reference type="java.util.concurrent.Executor"/>
		<reference type="org.hornetq.core.paging.PagedMessage"/>
		<reference type="org.hornetq.core.persistence.config.PersistedAddressSetting"/>
		<reference type="org.hornetq.core.persistence.GroupingInfo"/>
		<reference type="org.hornetq.core.persistence.config.PersistedRoles"/>
		<reference type="org.hornetq.core.paging.PageTransactionInfo"/>
		<reference type="org.hornetq.utils.UUID"/>
		<reference type="org.hornetq.core.postoffice.Binding"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.persistence.QueueBindingInfo"/>
		<reference type="org.hornetq.core.server.HornetQComponent"/>
		<reference type="org.hornetq.core.journal.IOAsyncTask"/>
		<reference type="org.hornetq.core.server.LargeServerMessage"/>
		<reference type="org.hornetq.core.server.Queue"/>
		<reference type="javax.transaction.xa.Xid"/>
		<reference type="org.hornetq.core.server.group.impl.GroupBinding"/>
		<reference type="org.hornetq.core.postoffice.PostOffice"/>
	</type>
	<type name="org.jboss.netty.handler.codec.http.HttpResponseDecoder" internal="false" project="netty.jar" package="org.jboss.netty.handler.codec.http">
	</type>
	<type name="org.hornetq.core.management.impl.BroadcastGroupControlImpl" internal="true" project="trunk" package="org.hornetq.core.management.impl">
		<reference type="org.hornetq.api.core.management.BroadcastGroupControl"/>
		<reference type="org.hornetq.core.server.cluster.BroadcastGroup"/>
		<reference type="javax.management.MBeanOperationInfo"/>
		<reference type="org.hornetq.utils.json.JSONArray"/>
		<reference type="org.hornetq.utils.json.JSONObject"/>
		<reference type="java.lang.Object"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.management.impl.MBeanInfoHelper"/>
		<reference type="org.hornetq.core.persistence.StorageManager"/>
		<reference type="org.hornetq.core.config.BroadcastGroupConfiguration"/>
		<reference type="java.lang.Override"/>
		<reference type="org.hornetq.core.management.impl.AbstractControl"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.postoffice.impl.AddressImpl" internal="true" project="trunk" package="org.hornetq.core.postoffice.impl">
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.postoffice.impl.WildcardAddressManager"/>
		<reference type="java.lang.Override"/>
		<reference type="org.hornetq.core.postoffice.Address"/>
	</type>
	<type name="org.hornetq.core.protocol.stomp.Stomp$Headers$Ack" internal="true" project="trunk" package="org.hornetq.core.protocol.stomp">
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.config.impl.FileConfiguration" internal="true" project="trunk" package="org.hornetq.core.config.impl">
		<reference type="org.w3c.dom.Element"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.core.deployers.impl.FileConfigurationParser"/>
		<reference type="org.hornetq.utils.XMLUtil"/>
		<reference type="java.net.URL"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.config.impl.ConfigurationImpl"/>
		<reference type="java.io.Reader"/>
		<reference type="java.io.InputStreamReader"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.jms.server.config.impl.JMSQueueConfigurationImpl" internal="true" project="trunk" package="org.hornetq.jms.server.config.impl">
		<reference type="org.hornetq.jms.server.config.JMSQueueConfiguration"/>
		<reference type="java.lang.System"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.journal.impl.TransactionCallback" internal="true" project="trunk" package="org.hornetq.core.journal.impl">
		<reference type="java.lang.InterruptedException"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="org.hornetq.utils.ReusableLatch"/>
		<reference type="org.hornetq.core.journal.IOAsyncTask"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.api.core.Message" internal="true" project="trunk" package="org.hornetq.api.core">
		<reference type="org.hornetq.utils.UUID"/>
		<reference type="java.lang.Short"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.Long"/>
		<reference type="java.lang.Integer"/>
		<reference type="java.lang.Boolean"/>
		<reference type="org.hornetq.api.core.PropertyConversionException"/>
		<reference type="java.lang.Float"/>
		<reference type="java.lang.Double"/>
		<reference type="java.lang.Byte"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.postoffice.impl.DuplicateIDCacheImpl$AddDuplicateIDOperation" internal="true" project="trunk" package="org.hornetq.core.postoffice.impl">
		<reference type="org.hornetq.core.transaction.TransactionOperation"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.util.Collections"/>
		<reference type="org.hornetq.core.transaction.Transaction"/>
		<reference type="org.hornetq.core.server.Queue"/>
	</type>
	<type name="org.hornetq.core.journal.impl.DummyCallback" internal="true" project="trunk" package="org.hornetq.core.journal.impl">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.core.journal.impl.SimpleWaitIOCallback"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.journal.impl.SyncIOCompletion"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.deployers.impl.FileDeploymentManager" internal="true" project="trunk" package="org.hornetq.core.deployers.impl">
		<reference type="org.hornetq.api.core.Pair"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.io.UnsupportedEncodingException"/>
		<reference type="java.util.concurrent.Executors"/>
		<reference type="java.net.URL"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.deployers.impl.FileDeploymentManager$DeployInfo"/>
		<reference type="java.lang.Runnable"/>
		<reference type="java.net.URLDecoder"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.core.deployers.DeploymentManager"/>
		<reference type="java.util.concurrent.ScheduledExecutorService"/>
		<reference type="java.lang.System"/>
		<reference type="org.hornetq.core.deployers.Deployer"/>
		<reference type="java.lang.Thread"/>
		<reference type="java.io.File"/>
		<reference type="java.util.concurrent.TimeUnit"/>
	</type>
	<type name="org.hornetq.core.server.JournalType" internal="true" project="trunk" package="org.hornetq.core.server">
	</type>
	<type name="javax.resource.spi.LocalTransaction" internal="false" project="jboss-jca-api.jar" package="javax.resource.spi">
	</type>
	<type name="org.hornetq.core.buffers.impl.ResetLimitWrappedHornetQBuffer" internal="true" project="trunk" package="org.hornetq.core.buffers.impl">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.buffers.impl.ChannelBufferWrapper"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.nio.ByteBuffer"/>
		<reference type="org.hornetq.core.message.impl.MessageInternal"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="java.io.StringReader" internal="false" project="rt.jar" package="java.io">
	</type>
	<type name="javax.net.ssl.KeyManager" internal="false" project="rt.jar" package="javax.net.ssl">
	</type>
	<type name="org.hornetq.core.protocol.core.impl.ChannelImpl" internal="true" project="trunk" package="org.hornetq.core.protocol.core.impl">
		<reference type="java.lang.InterruptedException"/>
		<reference type="org.hornetq.core.protocol.core.CommandConfirmationHandler"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.core.protocol.core.ChannelHandler"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="java.util.concurrent.locks.ReentrantLock"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="java.util.concurrent.locks.Lock"/>
		<reference type="org.hornetq.core.protocol.core.Channel"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.core.protocol.core.CoreRemotingConnection"/>
		<reference type="java.util.concurrent.locks.Condition"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="org.hornetq.core.protocol.core.impl.PacketImpl"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.PacketsConfirmedMessage"/>
		<reference type="java.lang.System"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.HornetQExceptionMessage"/>
		<reference type="org.hornetq.core.protocol.core.Packet"/>
		<reference type="java.util.concurrent.TimeUnit"/>
	</type>
	<type name="org.hornetq.jms.client.HornetQTemporaryTopic" internal="true" project="trunk" package="org.hornetq.jms.client">
		<reference type="org.hornetq.jms.client.HornetQSession"/>
		<reference type="org.hornetq.jms.client.HornetQTopic"/>
		<reference type="javax.jms.TemporaryTopic"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="java.io.BufferedReader" internal="false" project="rt.jar" package="java.io">
	</type>
	<type name="java.nio.channels.ScatteringByteChannel" internal="false" project="rt.jar" package="java.nio.channels">
	</type>
	<type name="org.hornetq.jms.client.HornetQMessageProducer" internal="true" project="trunk" package="org.hornetq.jms.client">
		<reference type="org.hornetq.jms.client.HornetQObjectMessage"/>
		<reference type="javax.jms.TopicPublisher"/>
		<reference type="javax.jms.Queue"/>
		<reference type="javax.jms.TextMessage"/>
		<reference type="javax.jms.Topic"/>
		<reference type="org.hornetq.jms.client.JMSExceptionHelper"/>
		<reference type="javax.jms.IllegalStateException"/>
		<reference type="java.lang.UnsupportedOperationException"/>
		<reference type="org.hornetq.jms.client.HornetQDestination"/>
		<reference type="org.hornetq.jms.client.HornetQBytesMessage"/>
		<reference type="javax.jms.QueueSender"/>
		<reference type="javax.jms.MessageProducer"/>
		<reference type="javax.jms.StreamMessage"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="org.hornetq.jms.client.HornetQStreamMessage"/>
		<reference type="java.lang.Override"/>
		<reference type="javax.jms.ObjectMessage"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="javax.jms.MapMessage"/>
		<reference type="javax.jms.Message"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.client.ClientProducer"/>
		<reference type="org.hornetq.api.core.client.ClientSession"/>
		<reference type="org.hornetq.utils.UUIDGenerator"/>
		<reference type="javax.jms.InvalidDestinationException"/>
		<reference type="org.hornetq.jms.client.HornetQMapMessage"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.jms.client.HornetQMessage"/>
		<reference type="javax.jms.DeliveryMode"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.utils.UUID"/>
		<reference type="org.hornetq.jms.client.HornetQConnection"/>
		<reference type="javax.jms.BytesMessage"/>
		<reference type="org.hornetq.jms.client.HornetQTextMessage"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="javax.jms.Destination"/>
		<reference type="java.lang.System"/>
		<reference type="org.hornetq.api.core.client.ClientMessage"/>
	</type>
	<type name="twitter4j.TwitterFactory" internal="false" project="twitter4j-core.jar" package="twitter4j">
	</type>
	<type name="org.hornetq.core.remoting.impl.invm.InVMAcceptor" internal="true" project="trunk" package="org.hornetq.core.remoting.impl.invm">
		<reference type="org.hornetq.api.core.management.NotificationType"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.remoting.impl.invm.TransportConstants"/>
		<reference type="org.hornetq.utils.TypedProperties"/>
		<reference type="org.hornetq.core.remoting.impl.invm.InVMConnection"/>
		<reference type="org.hornetq.spi.core.remoting.BufferHandler"/>
		<reference type="org.hornetq.core.server.management.Notification"/>
		<reference type="java.util.concurrent.Executor"/>
		<reference type="org.hornetq.core.remoting.impl.invm.InVMAcceptor$Listener"/>
		<reference type="org.hornetq.utils.OrderedExecutorFactory"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.core.remoting.impl.invm.InVMRegistry"/>
		<reference type="org.hornetq.core.remoting.impl.invm.InVMConnector"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.utils.ConfigurationHelper"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.utils.ExecutorFactory"/>
		<reference type="org.hornetq.spi.core.remoting.ConnectionLifeCycleListener"/>
		<reference type="org.hornetq.spi.core.remoting.Acceptor"/>
		<reference type="org.hornetq.core.server.management.NotificationService"/>
		<reference type="org.hornetq.core.remoting.impl.invm.InVMAcceptorFactory"/>
		<reference type="org.hornetq.spi.core.remoting.Connection"/>
	</type>
	<type name="org.hornetq.core.postoffice.impl.DuplicateIDCacheImpl" internal="true" project="trunk" package="org.hornetq.core.postoffice.impl">
		<reference type="org.hornetq.core.postoffice.DuplicateIDCache"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.core.postoffice.impl.DuplicateIDCacheImpl$AddDuplicateIDOperation"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.Long"/>
		<reference type="java.lang.Integer"/>
		<reference type="java.lang.System"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.postoffice.impl.DuplicateIDCacheImpl$ByteArrayHolder"/>
		<reference type="org.hornetq.core.transaction.Transaction"/>
		<reference type="org.hornetq.core.persistence.StorageManager"/>
	</type>
	<type name="javax.xml.transform.dom.DOMSource" internal="false" project="rt.jar" package="javax.xml.transform.dom">
	</type>
	<type name="java.security.SecureRandom" internal="false" project="rt.jar" package="java.security">
	</type>
	<type name="org.hornetq.utils.TokenBucketLimiterImpl" internal="true" project="trunk" package="org.hornetq.utils">
		<reference type="java.lang.System"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.utils.TokenBucketLimiter"/>
		<reference type="java.lang.Thread"/>
	</type>
	<type name="org.hornetq.core.client.impl.FailoverManagerImpl$Channel0Handler" internal="true" project="trunk" package="org.hornetq.core.client.impl">
		<reference type="org.hornetq.core.protocol.core.ChannelHandler"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.core.protocol.core.CoreRemotingConnection"/>
		<reference type="org.hornetq.core.protocol.core.impl.PacketImpl"/>
		<reference type="org.hornetq.core.client.impl.FailoverManagerImpl"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.core.protocol.core.Packet"/>
		<reference type="java.lang.Runnable"/>
	</type>
	<type name="java.io.Serializable" internal="false" project="rt.jar" package="java.io">
	</type>
	<type name="org.hornetq.core.server.cluster.impl.Redistributor$Prompter" internal="true" project="trunk" package="org.hornetq.core.server.cluster.impl">
		<reference type="org.hornetq.core.server.cluster.impl.Redistributor"/>
		<reference type="java.lang.Runnable"/>
	</type>
	<type name="org.hornetq.integration.logging.Log4jLogDelegate" internal="true" project="trunk" package="org.hornetq.integration.logging">
		<reference type="java.lang.Object"/>
		<reference type="java.lang.Throwable"/>
		<reference type="org.hornetq.spi.core.logging.LogDelegate"/>
		<reference type="org.apache.log4j.Logger"/>
	</type>
	<type name="javax.jms.Destination" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="java.util.concurrent.locks.ReadWriteLock" internal="false" project="rt.jar" package="java.util.concurrent.locks">
	</type>
	<type name="org.hornetq.core.transaction.TransactionPropertyIndexes" internal="true" project="trunk" package="org.hornetq.core.transaction">
	</type>
	<type name="org.hornetq.core.deployers.impl.FileDeploymentManager$DeployInfo" internal="true" project="trunk" package="org.hornetq.core.deployers.impl">
		<reference type="org.hornetq.core.deployers.Deployer"/>
	</type>
	<type name="org.hornetq.jms.bridge.JMSBridgeControl" internal="true" project="trunk" package="org.hornetq.jms.bridge">
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.management.HornetQComponentControl"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="java.util.concurrent.locks.ReentrantReadWriteLock" internal="false" project="rt.jar" package="java.util.concurrent.locks">
	</type>
	<type name="org.jboss.kernel.spi.config.KernelConfig" internal="false" project="jboss-kernel.jar" package="org.jboss.kernel.spi.config">
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.SessionXAPrepareMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.CreateQueueMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="org.hornetq.core.remoting.impl.invm.InVMConnector$Listener" internal="true" project="trunk" package="org.hornetq.core.remoting.impl.invm">
		<reference type="org.hornetq.core.remoting.impl.invm.InVMConnector"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.spi.core.protocol.ProtocolType"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.spi.core.remoting.ConnectionLifeCycleListener"/>
		<reference type="java.lang.Runnable"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.spi.core.remoting.Connection"/>
	</type>
	<type name="org.hornetq.service.HornetQStarterServiceMBean" internal="true" project="trunk" package="org.hornetq.service">
		<reference type="org.hornetq.service.HornetQFileConfigurationServiceMBean"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.service.JBossASSecurityManagerServiceMBean"/>
		<reference type="org.hornetq.core.server.HornetQServer"/>
	</type>
	<type name="org.hornetq.utils.ExecutorFactory" internal="true" project="trunk" package="org.hornetq.utils">
		<reference type="java.util.concurrent.Executor"/>
	</type>
	<type name="javax.jms.XAQueueConnectionFactory" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.core.client.impl.FailoverManagerImpl$ActualScheduledPinger" internal="true" project="trunk" package="org.hornetq.core.client.impl">
		<reference type="org.hornetq.core.client.impl.FailoverManagerImpl$PingRunnable"/>
		<reference type="java.lang.Runnable"/>
	</type>
	<type name="org.hornetq.core.postoffice.QueueInfo" internal="true" project="trunk" package="org.hornetq.core.postoffice">
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="java.io.Serializable"/>
	</type>
	<type name="org.hornetq.core.client.impl.ClientConsumerImpl$Runner" internal="true" project="trunk" package="org.hornetq.core.client.impl">
		<reference type="org.hornetq.core.client.impl.ClientConsumerImpl"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.lang.Runnable"/>
	</type>
	<type name="javax.xml.parsers.DocumentBuilderFactory" internal="false" project="rt.jar" package="javax.xml.parsers">
	</type>
	<type name="org.hornetq.core.config.ClusterConnectionConfiguration" internal="true" project="trunk" package="org.hornetq.core.config">
		<reference type="java.io.Serializable"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.protocol.core.impl.HornetQPacketHandler" internal="true" project="trunk" package="org.hornetq.core.protocol.core.impl">
		<reference type="org.hornetq.core.protocol.core.impl.CoreSessionCallback"/>
		<reference type="org.hornetq.core.protocol.core.ChannelHandler"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.CreateSessionResponseMessage"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.protocol.core.ServerSessionPacketHandler"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.core.version.Version"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.NullResponseMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.ReattachSessionResponseMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.CoreProtocolManager"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.CreateSessionMessage"/>
		<reference type="org.hornetq.core.protocol.core.Channel"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.CreateReplicationSessionMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.CreateQueueMessage"/>
		<reference type="org.hornetq.core.protocol.core.CoreRemotingConnection"/>
		<reference type="org.hornetq.core.replication.ReplicationEndpoint"/>
		<reference type="org.hornetq.core.protocol.core.impl.PacketImpl"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.ReattachSessionMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.HornetQExceptionMessage"/>
		<reference type="org.hornetq.core.server.ServerSession"/>
		<reference type="org.hornetq.core.protocol.core.Packet"/>
		<reference type="org.hornetq.core.server.HornetQServer"/>
	</type>
	<type name="org.hornetq.core.settings.impl.Match" internal="true" project="trunk" package="org.hornetq.core.settings.impl">
		<reference type="java.lang.Object"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="java.lang.Override"/>
		<reference type="java.util.regex.Pattern"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.client.impl.ClientProducerCreditManager" internal="true" project="trunk" package="org.hornetq.core.client.impl">
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.client.impl.ClientProducerCredits"/>
	</type>
	<type name="org.hornetq.jms.persistence.config.PersistedJNDI" internal="true" project="trunk" package="org.hornetq.jms.persistence.config">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.utils.DataConstants"/>
		<reference type="org.hornetq.utils.BufferHelper"/>
		<reference type="org.hornetq.core.journal.EncodingSupport"/>
		<reference type="org.hornetq.jms.persistence.config.PersistedType"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.jms.client.HornetQConnection" internal="true" project="trunk" package="org.hornetq.jms.client">
	</type>
	<type name="javax.jms.BytesMessage" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.core.logging.Logger" internal="true" project="trunk" package="org.hornetq.core.logging">
		<reference type="org.hornetq.core.logging.impl.JULLogDelegateFactory"/>
		<reference type="java.lang.Object"/>
		<reference type="java.lang.Throwable"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="java.lang.ClassLoader"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.lang.System"/>
		<reference type="org.hornetq.spi.core.logging.LogDelegateFactory"/>
		<reference type="org.hornetq.spi.core.logging.LogDelegate"/>
		<reference type="java.lang.Thread"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.utils.OrderedExecutorFactory" internal="true" project="trunk" package="org.hornetq.utils">
	</type>
	<type name="org.hornetq.core.management.impl.DivertControlImpl" internal="true" project="trunk" package="org.hornetq.core.management.impl">
		<reference type="javax.management.MBeanOperationInfo"/>
		<reference type="org.hornetq.api.core.management.DivertControl"/>
		<reference type="org.hornetq.core.server.Divert"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.management.impl.MBeanInfoHelper"/>
		<reference type="org.hornetq.core.persistence.StorageManager"/>
		<reference type="org.hornetq.core.config.DivertConfiguration"/>
		<reference type="java.lang.Override"/>
		<reference type="org.hornetq.core.management.impl.AbstractControl"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.server.management.NotificationListener" internal="true" project="trunk" package="org.hornetq.core.server.management">
		<reference type="org.hornetq.core.server.management.Notification"/>
	</type>
	<type name="org.hornetq.core.remoting.impl.invm.InVMAcceptor$Listener" internal="true" project="trunk" package="org.hornetq.core.remoting.impl.invm">
		<reference type="org.hornetq.core.remoting.impl.invm.InVMConnector"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.spi.core.protocol.ProtocolType"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="org.hornetq.core.remoting.impl.invm.InVMAcceptor"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.spi.core.remoting.ConnectionLifeCycleListener"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.Thread"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.spi.core.remoting.Connection"/>
	</type>
	<type name="com.arjuna.ats.jta.recovery.XAResourceRecovery" internal="false" project="jbossjts.jar" package="com.arjuna.ats.jta.recovery">
	</type>
	<type name="org.jboss.netty.handler.codec.http.DefaultHttpResponse" internal="false" project="netty.jar" package="org.jboss.netty.handler.codec.http">
	</type>
	<type name="org.hornetq.ra.HornetQRAConnectionFactoryImpl" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="javax.jms.XATopicConnection"/>
		<reference type="org.hornetq.jms.referenceable.ConnectionFactoryObjectFactory"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.ra.HornetQRAConnectionManager"/>
		<reference type="javax.jms.TopicConnection"/>
		<reference type="org.hornetq.ra.HornetQRAManagedConnectionFactory"/>
		<reference type="javax.jms.Connection"/>
		<reference type="javax.jms.QueueConnection"/>
		<reference type="javax.jms.XAQueueConnection"/>
		<reference type="org.hornetq.ra.HornetQRAConnectionFactory"/>
		<reference type="org.hornetq.jms.referenceable.SerializableObjectRefAddr"/>
		<reference type="java.lang.String"/>
		<reference type="javax.resource.spi.ConnectionManager"/>
		<reference type="org.hornetq.ra.HornetQRASessionFactoryImpl"/>
		<reference type="javax.naming.NamingException"/>
		<reference type="javax.naming.Reference"/>
		<reference type="javax.jms.XAConnection"/>
		<reference type="javax.jms.JMSException"/>
	</type>
	<type name="org.hornetq.spi.core.protocol.ConnectionEntry" internal="true" project="trunk" package="org.hornetq.spi.core.protocol">
		<reference type="org.hornetq.spi.core.protocol.RemotingConnection"/>
	</type>
	<type name="org.hornetq.core.server.HornetQComponent" internal="true" project="trunk" package="org.hornetq.core.server">
		<reference type="java.lang.Exception"/>
	</type>
	<type name="org.hornetq.core.protocol.core.ChannelHandler" internal="true" project="trunk" package="org.hornetq.core.protocol.core">
		<reference type="org.hornetq.core.protocol.core.Packet"/>
	</type>
	<type name="org.hornetq.core.server.ServerConsumer" internal="true" project="trunk" package="org.hornetq.core.server">
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.MessageReference"/>
		<reference type="org.hornetq.core.transaction.Transaction"/>
		<reference type="org.hornetq.core.server.Queue"/>
		<reference type="org.hornetq.core.server.Consumer"/>
	</type>
	<type name="org.hornetq.core.protocol.stomp.StompException" internal="true" project="trunk" package="org.hornetq.core.protocol.stomp">
		<reference type="java.lang.Throwable"/>
		<reference type="java.io.IOException"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.server.management.ManagementService" internal="true" project="trunk" package="org.hornetq.core.server.management">
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="org.hornetq.core.paging.PagingManager"/>
		<reference type="org.hornetq.core.server.cluster.BroadcastGroup"/>
		<reference type="org.hornetq.core.config.BridgeConfiguration"/>
		<reference type="org.hornetq.core.transaction.ResourceManager"/>
		<reference type="javax.management.ObjectName"/>
		<reference type="org.hornetq.api.core.management.ObjectNameBuilder"/>
		<reference type="org.hornetq.core.server.Divert"/>
		<reference type="org.hornetq.core.config.BroadcastGroupConfiguration"/>
		<reference type="org.hornetq.core.config.DivertConfiguration"/>
		<reference type="org.hornetq.core.persistence.StorageManager"/>
		<reference type="org.hornetq.core.settings.impl.AddressSettings"/>
		<reference type="org.hornetq.core.cluster.DiscoveryGroup"/>
		<reference type="org.hornetq.core.server.cluster.ClusterConnection"/>
		<reference type="org.hornetq.core.server.cluster.Bridge"/>
		<reference type="org.hornetq.core.security.Role"/>
		<reference type="org.hornetq.core.remoting.server.RemotingService"/>
		<reference type="org.hornetq.core.server.management.NotificationService"/>
		<reference type="org.hornetq.core.postoffice.PostOffice"/>
		<reference type="org.hornetq.core.messagecounter.MessageCounterManager"/>
		<reference type="org.hornetq.core.server.HornetQServer"/>
		<reference type="org.hornetq.core.server.QueueFactory"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.TransportConfiguration"/>
		<reference type="org.hornetq.core.management.impl.HornetQServerControlImpl"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.core.config.Configuration"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.config.ClusterConnectionConfiguration"/>
		<reference type="org.hornetq.core.server.HornetQComponent"/>
		<reference type="java.util.concurrent.ScheduledExecutorService"/>
		<reference type="org.hornetq.core.server.Queue"/>
		<reference type="org.hornetq.core.config.DiscoveryGroupConfiguration"/>
		<reference type="org.hornetq.spi.core.remoting.Acceptor"/>
	</type>
	<type name="javax.management.Notification" internal="false" project="rt.jar" package="javax.management">
	</type>
	<type name="org.hornetq.core.server.group.impl.Proposal" internal="true" project="trunk" package="org.hornetq.core.server.group.impl">
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.ReplicationCommitMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="org.hornetq.core.journal.IOCompletion" internal="true" project="trunk" package="org.hornetq.core.journal">
		<reference type="org.hornetq.core.journal.IOAsyncTask"/>
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.ReplicationPrepareMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="org.hornetq.jms.client.HornetQDestination" internal="true" project="trunk" package="org.hornetq.jms.client">
		<reference type="java.util.UUID"/>
		<reference type="java.io.Serializable"/>
		<reference type="javax.naming.Referenceable"/>
		<reference type="org.hornetq.jms.client.HornetQTemporaryTopic"/>
		<reference type="org.hornetq.jms.client.HornetQSession"/>
		<reference type="org.hornetq.jms.referenceable.DestinationObjectFactory"/>
		<reference type="org.hornetq.jms.referenceable.SerializableObjectRefAddr"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.jms.client.HornetQQueue"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.jms.client.HornetQTemporaryQueue"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="javax.jms.Destination"/>
		<reference type="javax.naming.NamingException"/>
		<reference type="javax.naming.Reference"/>
		<reference type="java.lang.StringBuffer"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="org.hornetq.jms.client.HornetQTopic"/>
		<reference type="java.lang.Override"/>
	</type>
	<type name="org.hornetq.core.filter.Filter" internal="true" project="trunk" package="org.hornetq.core.filter">
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
	</type>
	<type name="org.hornetq.core.remoting.CloseListener" internal="true" project="trunk" package="org.hornetq.core.remoting">
	</type>
	<type name="org.hornetq.ra.HornetQRAConnectionRequestInfo" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="org.hornetq.ra.Util"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Object"/>
		<reference type="javax.resource.spi.ConnectionRequestInfo"/>
		<reference type="java.lang.Integer"/>
		<reference type="javax.jms.Session"/>
		<reference type="org.hornetq.ra.HornetQRAProperties"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="java.util.concurrent.ExecutorService" internal="false" project="rt.jar" package="java.util.concurrent">
	</type>
	<type name="org.hornetq.ra.inflow.HornetQActivationSpec" internal="true" project="trunk" package="org.hornetq.ra.inflow">
		<reference type="javax.resource.spi.ActivationSpec"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Integer"/>
		<reference type="java.lang.Long"/>
		<reference type="javax.resource.ResourceException"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.ra.Util"/>
		<reference type="java.lang.Object"/>
		<reference type="javax.resource.spi.ResourceAdapter"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="java.lang.Boolean"/>
		<reference type="javax.jms.Session"/>
		<reference type="java.lang.StringBuffer"/>
		<reference type="org.hornetq.ra.HornetQResourceAdapter"/>
		<reference type="java.lang.Override"/>
		<reference type="org.hornetq.ra.ConnectionFactoryProperties"/>
		<reference type="javax.resource.spi.InvalidPropertyException"/>
	</type>
	<type name="java.io.ObjectOutputStream" internal="false" project="rt.jar" package="java.io">
	</type>
	<type name="org.hornetq.service.HornetQFileConfigurationServiceMBean" internal="true" project="trunk" package="org.hornetq.service">
		<reference type="org.hornetq.core.config.Configuration"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="javax.resource.spi.security.PasswordCredential" internal="false" project="jboss-jca-api.jar" package="javax.resource.spi.security">
	</type>
	<type name="javax.resource.spi.ResourceAdapterAssociation" internal="false" project="jboss-jca-api.jar" package="javax.resource.spi">
	</type>
	<type name="org.hornetq.core.client.impl.ClientProducerCredits" internal="true" project="trunk" package="org.hornetq.core.client.impl">
		<reference type="java.lang.InterruptedException"/>
	</type>
	<type name="org.hornetq.core.server.impl.CreditsAvailableRunnable" internal="true" project="trunk" package="org.hornetq.core.server.impl">
	</type>
	<type name="org.hornetq.core.server.cluster.impl.ClusterManagerImpl" internal="true" project="trunk" package="org.hornetq.core.server.cluster.impl">
		<reference type="org.hornetq.core.server.cluster.BroadcastGroup"/>
		<reference type="org.hornetq.core.config.BridgeConfiguration"/>
		<reference type="org.hornetq.core.cluster.impl.DiscoveryGroupImpl"/>
		<reference type="org.hornetq.core.config.BroadcastGroupConfiguration"/>
		<reference type="org.hornetq.core.server.cluster.impl.BridgeImpl"/>
		<reference type="org.hornetq.core.server.cluster.impl.ClusterConnectionImpl"/>
		<reference type="org.hornetq.utils.ExecutorFactory"/>
		<reference type="org.hornetq.core.cluster.DiscoveryGroup"/>
		<reference type="org.hornetq.core.server.cluster.ClusterConnection"/>
		<reference type="org.hornetq.core.server.cluster.Bridge"/>
		<reference type="java.util.concurrent.TimeUnit"/>
		<reference type="org.hornetq.core.postoffice.PostOffice"/>
		<reference type="org.hornetq.core.server.HornetQServer"/>
		<reference type="org.hornetq.core.server.cluster.impl.BroadcastGroupImpl"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.core.server.cluster.ClusterManager"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.TransportConfiguration"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.utils.UUID"/>
		<reference type="java.net.InetAddress"/>
		<reference type="org.hornetq.core.config.Configuration"/>
		<reference type="org.hornetq.core.postoffice.Binding"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.ClassLoader"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="org.hornetq.core.config.ClusterConnectionConfiguration"/>
		<reference type="java.util.concurrent.ScheduledExecutorService"/>
		<reference type="org.hornetq.core.server.management.ManagementService"/>
		<reference type="org.hornetq.core.server.Queue"/>
		<reference type="java.lang.Thread"/>
		<reference type="org.hornetq.core.server.cluster.Transformer"/>
		<reference type="org.hornetq.core.config.DiscoveryGroupConfiguration"/>
	</type>
	<type name="javax.transaction.TransactionManager" internal="false" project="jboss-transaction-api.jar" package="javax.transaction">
	</type>
	<type name="org.hornetq.core.remoting.server.RemotingService" internal="true" project="trunk" package="org.hornetq.core.remoting.server">
		<reference type="org.hornetq.api.core.Interceptor"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.spi.core.protocol.RemotingConnection"/>
		<reference type="org.hornetq.core.server.HornetQComponent"/>
	</type>
	<type name="org.hornetq.core.paging.impl.PagingManagerImpl" internal="true" project="trunk" package="org.hornetq.core.paging.impl">
		<reference type="org.hornetq.core.paging.PageTransactionInfo"/>
		<reference type="org.hornetq.core.paging.PagingManager"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.Long"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.persistence.StorageManager"/>
		<reference type="org.hornetq.core.paging.PagingStore"/>
		<reference type="org.hornetq.core.settings.impl.AddressSettings"/>
		<reference type="org.hornetq.core.paging.PagingStoreFactory"/>
		<reference type="org.hornetq.core.postoffice.PostOffice"/>
	</type>
	<type name="javax.jms.DeliveryMode" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.core.server.management.NotificationService" internal="true" project="trunk" package="org.hornetq.core.server.management">
		<reference type="org.hornetq.core.server.management.NotificationListener"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.management.Notification"/>
	</type>
	<type name="org.hornetq.core.postoffice.PostOffice" internal="true" project="trunk" package="org.hornetq.core.postoffice">
		<reference type="org.hornetq.core.paging.PagingManager"/>
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="org.hornetq.core.postoffice.DuplicateIDCache"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.postoffice.Binding"/>
		<reference type="org.hornetq.core.postoffice.Bindings"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.HornetQComponent"/>
		<reference type="org.hornetq.core.server.MessageReference"/>
		<reference type="org.hornetq.core.transaction.Transaction"/>
		<reference type="org.hornetq.core.server.Queue"/>
		<reference type="org.hornetq.core.server.RoutingContext"/>
	</type>
	<type name="java.lang.annotation.Annotation" internal="false" project="rt.jar" package="java.lang.annotation">
	</type>
	<type name="org.hornetq.core.remoting.impl.netty.NettyConnector$HornetQClientChannelHandler" internal="true" project="trunk" package="org.hornetq.core.remoting.impl.netty">
		<reference type="org.jboss.netty.channel.group.ChannelGroup"/>
		<reference type="org.hornetq.spi.core.remoting.BufferHandler"/>
		<reference type="org.hornetq.spi.core.remoting.ConnectionLifeCycleListener"/>
		<reference type="org.hornetq.core.remoting.impl.netty.HornetQChannelHandler"/>
	</type>
	<type name="org.hornetq.core.config.CoreQueueConfiguration" internal="true" project="trunk" package="org.hornetq.core.config">
		<reference type="java.io.Serializable"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="javax.transaction.Transaction" internal="false" project="jboss-transaction-api.jar" package="javax.transaction">
	</type>
	<type name="org.jboss.netty.handler.codec.http.Cookie" internal="false" project="netty.jar" package="org.jboss.netty.handler.codec.http">
	</type>
	<type name="javax.jms.JMSSecurityException" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.core.client.impl.ClientSessionPacketHandler" internal="true" project="trunk" package="org.hornetq.core.client.impl">
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionReceiveLargeMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionReceiveContinuationMessage"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.core.protocol.core.ChannelHandler"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionReceiveMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.PacketImpl"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionProducerCreditsMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.HornetQExceptionMessage"/>
		<reference type="org.hornetq.core.protocol.core.Packet"/>
		<reference type="org.hornetq.core.client.impl.ClientSessionInternal"/>
		<reference type="org.hornetq.core.protocol.core.Channel"/>
	</type>
	<type name="java.lang.NumberFormatException" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="java.util.concurrent.CountDownLatch" internal="false" project="rt.jar" package="java.util.concurrent">
	</type>
	<type name="org.hornetq.core.transaction.impl.XidImpl" internal="true" project="trunk" package="org.hornetq.core.transaction.impl">
		<reference type="java.lang.Object"/>
		<reference type="java.lang.System"/>
		<reference type="java.io.Serializable"/>
		<reference type="java.lang.StringBuffer"/>
		<reference type="java.lang.Override"/>
		<reference type="javax.transaction.xa.Xid"/>
		<reference type="org.hornetq.utils.Base64"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.utils.XMLUtil" internal="true" project="trunk" package="org.hornetq.utils">
		<reference type="java.util.ArrayList"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="java.lang.Integer"/>
		<reference type="java.lang.Long"/>
		<reference type="javax.xml.transform.dom.DOMSource"/>
		<reference type="java.net.URL"/>
		<reference type="javax.xml.validation.SchemaFactory"/>
		<reference type="java.io.Reader"/>
		<reference type="java.lang.Double"/>
		<reference type="javax.xml.validation.Validator"/>
		<reference type="javax.xml.parsers.DocumentBuilder"/>
		<reference type="java.util.List"/>
		<reference type="java.io.StringReader"/>
		<reference type="java.lang.NumberFormatException"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.xml.sax.SAXException"/>
		<reference type="org.w3c.dom.NamedNodeMap"/>
		<reference type="org.w3c.dom.Document"/>
		<reference type="java.lang.reflect.Method"/>
		<reference type="java.lang.Exception"/>
		<reference type="javax.xml.validation.Schema"/>
		<reference type="org.w3c.dom.NodeList"/>
		<reference type="javax.xml.XMLConstants"/>
		<reference type="java.lang.String"/>
		<reference type="org.w3c.dom.Element"/>
		<reference type="org.w3c.dom.Node"/>
		<reference type="org.xml.sax.InputSource"/>
		<reference type="java.lang.Object"/>
		<reference type="java.lang.Boolean"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="java.lang.System"/>
		<reference type="java.lang.StringBuffer"/>
		<reference type="javax.xml.parsers.DocumentBuilderFactory"/>
		<reference type="java.lang.Thread"/>
		<reference type="java.io.InputStreamReader"/>
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.PacketsConfirmedMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="org.hornetq.core.transaction.impl.ResourceManagerImpl$HeuristicCompletionHolder" internal="true" project="trunk" package="org.hornetq.core.transaction.impl">
		<reference type="javax.transaction.xa.Xid"/>
	</type>
	<type name="org.jboss.netty.channel.socket.http.HttpTunnelingClientSocketChannelFactory" internal="false" project="netty.jar" package="org.jboss.netty.channel.socket.http">
	</type>
	<type name="org.hornetq.utils.IDGenerator" internal="true" project="trunk" package="org.hornetq.utils">
	</type>
	<type name="org.hornetq.jms.bridge.impl.JMSBridgeImpl$StartupFailureHandler" internal="true" project="trunk" package="org.hornetq.jms.bridge.impl">
		<reference type="org.hornetq.jms.bridge.impl.JMSBridgeImpl$FailureHandler"/>
		<reference type="org.hornetq.jms.bridge.impl.JMSBridgeImpl"/>
		<reference type="javax.jms.JMSException"/>
	</type>
	<type name="org.hornetq.core.journal.impl.dataformat.JournalAddRecord" internal="true" project="trunk" package="org.hornetq.core.journal.impl.dataformat">
		<reference type="org.hornetq.core.journal.impl.JournalImpl"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.journal.impl.dataformat.JournalInternalRecord"/>
		<reference type="org.hornetq.core.journal.EncodingSupport"/>
		<reference type="java.lang.Override"/>
	</type>
	<type name="java.lang.reflect.Method" internal="false" project="rt.jar" package="java.lang.reflect">
	</type>
	<type name="org.hornetq.core.remoting.impl.netty.NettyConnection" internal="true" project="trunk" package="org.hornetq.core.remoting.impl.netty">
		<reference type="java.lang.InterruptedException"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.jboss.netty.channel.ChannelFuture"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.spi.core.protocol.ProtocolType"/>
		<reference type="org.jboss.netty.handler.ssl.SslHandler"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.api.core.HornetQBuffers"/>
		<reference type="org.hornetq.core.buffers.impl.ChannelBufferWrapper"/>
		<reference type="java.lang.Object"/>
		<reference type="org.jboss.netty.channel.Channel"/>
		<reference type="java.util.concurrent.atomic.AtomicBoolean"/>
		<reference type="java.lang.Throwable"/>
		<reference type="org.jboss.netty.buffer.ChannelBuffers"/>
		<reference type="org.hornetq.spi.core.remoting.ConnectionLifeCycleListener"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.Thread"/>
		<reference type="org.hornetq.spi.core.remoting.Connection"/>
	</type>
	<type name="org.hornetq.core.server.MessageReference" internal="true" project="trunk" package="org.hornetq.core.server">
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="org.hornetq.core.server.Queue"/>
	</type>
	<type name="org.hornetq.jms.server.JMSServerConfigParser" internal="true" project="trunk" package="org.hornetq.jms.server">
		<reference type="org.hornetq.jms.server.config.JMSQueueConfiguration"/>
		<reference type="org.w3c.dom.Node"/>
		<reference type="org.hornetq.jms.server.config.TopicConfiguration"/>
		<reference type="org.hornetq.jms.server.config.JMSConfiguration"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.io.InputStream"/>
		<reference type="org.hornetq.jms.server.config.ConnectionFactoryConfiguration"/>
	</type>
	<type name="org.hornetq.core.journal.EncodingSupport" internal="true" project="trunk" package="org.hornetq.core.journal">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
	</type>
	<type name="java.util.GregorianCalendar" internal="false" project="rt.jar" package="java.util">
	</type>
	<type name="org.hornetq.ra.HornetQRAQueueReceiver" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="javax.jms.QueueReceiver"/>
		<reference type="org.hornetq.ra.HornetQRASession"/>
		<reference type="org.hornetq.ra.HornetQRAMessageConsumer"/>
		<reference type="javax.jms.Queue"/>
		<reference type="javax.jms.JMSException"/>
	</type>
	<type name="org.hornetq.utils.ConcurrentSet" internal="true" project="trunk" package="org.hornetq.utils">
	</type>
	<type name="org.hornetq.core.journal.impl.JournalCompactor$RollbackCompactCommand" internal="true" project="trunk" package="org.hornetq.core.journal.impl">
		<reference type="org.hornetq.core.journal.impl.JournalCompactor$CompactCommand"/>
		<reference type="org.hornetq.core.journal.impl.JournalFile"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.journal.impl.JournalTransaction"/>
		<reference type="java.lang.Override"/>
		<reference type="org.hornetq.core.journal.impl.JournalCompactor"/>
	</type>
	<type name="org.hornetq.spi.core.remoting.AcceptorFactory" internal="true" project="trunk" package="org.hornetq.spi.core.remoting">
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.spi.core.remoting.BufferDecoder"/>
		<reference type="java.util.concurrent.ScheduledExecutorService"/>
		<reference type="org.hornetq.spi.core.remoting.BufferHandler"/>
		<reference type="java.util.concurrent.Executor"/>
		<reference type="org.hornetq.spi.core.remoting.ConnectionLifeCycleListener"/>
		<reference type="org.hornetq.spi.core.remoting.Acceptor"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="javax.resource.spi.ConnectionEventListener" internal="false" project="jboss-jca-api.jar" package="javax.resource.spi">
	</type>
	<type name="javax.management.NotificationBroadcasterSupport" internal="false" project="rt.jar" package="javax.management">
	</type>
	<type name="java.util.Collection" internal="false" project="rt.jar" package="java.util">
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.CreateSessionMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="org.hornetq.core.client.impl.FailoverManagerImpl" internal="true" project="trunk" package="org.hornetq.core.client.impl">
		<reference type="org.hornetq.api.core.Interceptor"/>
		<reference type="org.hornetq.core.client.impl.FailoverManagerImpl$DelegatingBufferHandler"/>
		<reference type="org.hornetq.spi.core.remoting.ConnectorFactory"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="org.hornetq.utils.ExecutorFactory"/>
		<reference type="org.hornetq.core.protocol.core.Packet"/>
		<reference type="java.util.concurrent.TimeUnit"/>
		<reference type="org.hornetq.spi.core.protocol.ProtocolType"/>
		<reference type="org.hornetq.core.client.impl.FailoverManagerImpl$Channel0Handler"/>
		<reference type="org.hornetq.core.client.impl.FailoverManagerImpl$PingRunnable"/>
		<reference type="org.hornetq.api.core.client.ClientSession"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.core.version.Version"/>
		<reference type="java.util.concurrent.locks.Lock"/>
		<reference type="org.hornetq.utils.OrderedExecutorFactory"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.api.core.client.ClientSessionFactory"/>
		<reference type="org.hornetq.core.protocol.core.impl.RemotingConnectionImpl"/>
		<reference type="org.hornetq.utils.ConfigurationHelper"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.core.protocol.core.CoreRemotingConnection"/>
		<reference type="java.lang.ClassLoader"/>
		<reference type="java.util.concurrent.ExecutorService"/>
		<reference type="org.hornetq.spi.core.remoting.Connector"/>
		<reference type="org.hornetq.spi.core.remoting.ConnectionLifeCycleListener"/>
		<reference type="org.hornetq.core.remoting.FailureListener"/>
		<reference type="java.lang.InterruptedException"/>
		<reference type="org.hornetq.core.client.impl.ClientSessionImpl"/>
		<reference type="org.hornetq.core.protocol.core.ChannelHandler"/>
		<reference type="org.hornetq.core.client.impl.DelegatingSession"/>
		<reference type="org.hornetq.core.client.impl.FailoverManagerImpl$ActualScheduledPinger"/>
		<reference type="java.util.concurrent.Executor"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.CreateSessionMessage"/>
		<reference type="org.hornetq.core.protocol.core.Channel"/>
		<reference type="org.hornetq.api.core.client.SessionFailureListener"/>
		<reference type="java.security.AccessController"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.CreateSessionResponseMessage"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.TransportConfiguration"/>
		<reference type="org.hornetq.utils.UUIDGenerator"/>
		<reference type="org.hornetq.core.client.impl.FailoverManagerImpl$DelegatingFailureListener"/>
		<reference type="org.hornetq.core.client.impl.ClientSessionInternal"/>
		<reference type="org.hornetq.core.client.impl.FailoverManager"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="java.lang.Throwable"/>
		<reference type="java.util.concurrent.ScheduledExecutorService"/>
		<reference type="org.hornetq.utils.VersionLoader"/>
		<reference type="org.hornetq.core.client.impl.ClientSessionPacketHandler"/>
		<reference type="java.lang.Thread"/>
		<reference type="org.hornetq.spi.core.remoting.Connection"/>
	</type>
	<type name="org.hornetq.core.protocol.stomp.StompUtils" internal="true" project="trunk" package="org.hornetq.core.protocol.stomp">
		<reference type="org.hornetq.core.client.impl.ClientMessageImpl"/>
		<reference type="java.lang.Long"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.impl.ServerMessageImpl"/>
		<reference type="org.hornetq.core.protocol.stomp.Stomp$Headers$Send"/>
		<reference type="java.lang.Byte"/>
		<reference type="org.hornetq.core.protocol.stomp.Stomp$Headers$Message"/>
		<reference type="org.hornetq.core.protocol.stomp.StompFrame"/>
		<reference type="java.lang.String"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.Boolean"/>
		<reference type="org.hornetq.api.core.Message"/>
		<reference type="org.hornetq.core.message.impl.MessageInternal"/>
	</type>
	<type name="org.hornetq.core.remoting.impl.netty.NettyAcceptorFactory" internal="true" project="trunk" package="org.hornetq.core.remoting.impl.netty">
		<reference type="org.hornetq.core.remoting.impl.netty.TransportConstants"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.spi.core.remoting.BufferDecoder"/>
		<reference type="java.util.concurrent.ScheduledExecutorService"/>
		<reference type="org.hornetq.spi.core.remoting.AcceptorFactory"/>
		<reference type="org.hornetq.core.remoting.impl.netty.NettyAcceptor"/>
		<reference type="org.hornetq.spi.core.remoting.BufferHandler"/>
		<reference type="java.util.concurrent.Executor"/>
		<reference type="org.hornetq.spi.core.remoting.ConnectionLifeCycleListener"/>
		<reference type="org.hornetq.spi.core.remoting.Acceptor"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.utils.HQIterator" internal="true" project="trunk" package="org.hornetq.utils">
	</type>
	<type name="org.hornetq.core.journal.SequentialFileFactory" internal="true" project="trunk" package="org.hornetq.core.journal">
		<reference type="org.hornetq.core.journal.SequentialFile"/>
		<reference type="java.nio.ByteBuffer"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.paging.impl.PagingStoreImpl$MemoryFreedRunnablesExecutor" internal="true" project="trunk" package="org.hornetq.core.paging.impl">
		<reference type="org.hornetq.core.paging.impl.PagingStoreImpl"/>
		<reference type="java.lang.Runnable"/>
	</type>
	<type name="java.util.Date" internal="false" project="rt.jar" package="java.util">
	</type>
	<type name="org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory" internal="false" project="netty.jar" package="org.jboss.netty.channel.socket.nio">
	</type>
	<type name="org.hornetq.spi.core.protocol.ProtocolManager" internal="true" project="trunk" package="org.hornetq.spi.core.protocol">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.spi.core.protocol.RemotingConnection"/>
		<reference type="org.hornetq.spi.core.protocol.ConnectionEntry"/>
		<reference type="org.hornetq.spi.core.remoting.BufferDecoder"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.spi.core.remoting.Connection"/>
	</type>
	<type name="org.hornetq.core.cluster.DiscoveryListener" internal="true" project="trunk" package="org.hornetq.core.cluster">
	</type>
	<type name="java.lang.Exception" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.hornetq.api.core.client.ClientSession$BindingQuery" internal="true" project="trunk" package="org.hornetq.api.core.client">
	</type>
	<type name="org.hornetq.core.client.impl.FailoverManagerImpl$DelegatingFailureListener" internal="true" project="trunk" package="org.hornetq.core.client.impl">
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.core.remoting.FailureListener"/>
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.SessionXAJoinMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="org.hornetq.core.persistence.impl.nullpm.NullStorageLargeServerMessage" internal="true" project="trunk" package="org.hornetq.core.persistence.impl.nullpm">
		<reference type="org.hornetq.core.message.impl.MessageImpl"/>
		<reference type="org.hornetq.api.core.HornetQBuffers"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.LargeServerMessage"/>
		<reference type="org.hornetq.core.server.impl.ServerMessageImpl"/>
		<reference type="java.lang.Override"/>
	</type>
	<type name="org.hornetq.jms.bridge.impl.JNDIFactorySupport" internal="true" project="trunk" package="org.hornetq.jms.bridge.impl">
		<reference type="javax.naming.InitialContext"/>
		<reference type="java.lang.Object"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.util.Hashtable"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.journal.impl.JournalRecordProvider" internal="true" project="trunk" package="org.hornetq.core.journal.impl">
		<reference type="java.lang.Long"/>
		<reference type="org.hornetq.core.journal.impl.JournalRecord"/>
		<reference type="org.hornetq.core.journal.impl.JournalCompactor"/>
	</type>
	<type name="org.hornetq.core.persistence.impl.journal.JournalStorageManager$AddMessageRecord" internal="true" project="trunk" package="org.hornetq.core.persistence.impl.journal">
		<reference type="org.hornetq.core.server.ServerMessage"/>
	</type>
	<type name="org.hornetq.core.remoting.impl.netty.HttpAcceptorHandler" internal="true" project="trunk" package="org.hornetq.core.remoting.impl.netty">
		<reference type="org.hornetq.core.remoting.impl.netty.HttpAcceptorHandler$ResponseHolder"/>
		<reference type="org.hornetq.core.remoting.impl.netty.HttpKeepAliveRunnable"/>
		<reference type="org.jboss.netty.channel.ChannelStateEvent"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.jboss.netty.handler.codec.http.HttpResponseStatus"/>
		<reference type="org.hornetq.core.remoting.impl.netty.HttpAcceptorHandler$ResponseRunner"/>
		<reference type="java.util.concurrent.Executor"/>
		<reference type="java.util.concurrent.ThreadPoolExecutor"/>
		<reference type="org.jboss.netty.handler.codec.http.HttpVersion"/>
		<reference type="org.jboss.netty.channel.Channels"/>
		<reference type="java.lang.Runnable"/>
		<reference type="org.jboss.netty.channel.ChannelHandlerContext"/>
		<reference type="org.jboss.netty.handler.codec.http.HttpRequest"/>
		<reference type="org.jboss.netty.channel.SimpleChannelHandler"/>
		<reference type="org.jboss.netty.buffer.ChannelBuffer"/>
		<reference type="org.jboss.netty.channel.Channel"/>
		<reference type="java.lang.System"/>
		<reference type="org.jboss.netty.handler.codec.http.DefaultHttpResponse"/>
		<reference type="org.jboss.netty.handler.codec.http.HttpMethod"/>
		<reference type="org.jboss.netty.channel.MessageEvent"/>
		<reference type="org.jboss.netty.channel.UpstreamMessageEvent"/>
		<reference type="java.lang.Override"/>
		<reference type="java.util.concurrent.TimeUnit"/>
	</type>
	<type name="org.hornetq.api.core.SimpleString" internal="true" project="trunk" package="org.hornetq.api.core">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.utils.DataConstants"/>
		<reference type="java.lang.System"/>
		<reference type="java.io.Serializable"/>
		<reference type="java.lang.CharSequence"/>
		<reference type="java.lang.StringIndexOutOfBoundsException"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.IndexOutOfBoundsException"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.api.core.Pair" internal="true" project="trunk" package="org.hornetq.api.core">
		<reference type="java.lang.Object"/>
		<reference type="java.io.Serializable"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.api.core.client.ClientRequestor" internal="true" project="trunk" package="org.hornetq.api.core.client">
		<reference type="org.hornetq.api.core.client.ClientConsumer"/>
		<reference type="org.hornetq.core.client.impl.ClientMessageImpl"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.util.UUID"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.client.ClientProducer"/>
		<reference type="org.hornetq.api.core.client.ClientSession"/>
		<reference type="org.hornetq.api.core.client.ClientMessage"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.client.impl.ClientSessionFactoryImpl" internal="true" project="trunk" package="org.hornetq.core.client.impl">
		<reference type="java.lang.InterruptedException"/>
		<reference type="org.hornetq.api.core.Interceptor"/>
		<reference type="org.hornetq.utils.HornetQThreadFactory"/>
		<reference type="org.hornetq.core.cluster.impl.DiscoveryGroupImpl"/>
		<reference type="org.hornetq.core.client.impl.ClientSessionFactoryInternal"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="java.util.concurrent.ThreadFactory"/>
		<reference type="java.security.AccessController"/>
		<reference type="org.hornetq.core.client.impl.FailoverManagerImpl"/>
		<reference type="org.hornetq.core.cluster.DiscoveryGroup"/>
		<reference type="java.lang.Override"/>
		<reference type="java.util.concurrent.TimeUnit"/>
		<reference type="org.hornetq.api.core.client.HornetQClient"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.util.concurrent.Executors"/>
		<reference type="java.io.Serializable"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.client.ClientSession"/>
		<reference type="org.hornetq.api.core.client.loadbalance.ConnectionLoadBalancingPolicy"/>
		<reference type="org.hornetq.api.core.TransportConfiguration"/>
		<reference type="org.hornetq.core.cluster.DiscoveryListener"/>
		<reference type="org.hornetq.utils.UUIDGenerator"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.core.client.impl.FailoverManager"/>
		<reference type="org.hornetq.api.core.client.ClientSessionFactory"/>
		<reference type="java.net.InetAddress"/>
		<reference type="java.lang.Object"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="java.lang.ClassLoader"/>
		<reference type="java.lang.Throwable"/>
		<reference type="org.hornetq.core.cluster.DiscoveryEntry"/>
		<reference type="java.util.concurrent.ScheduledExecutorService"/>
		<reference type="java.lang.System"/>
		<reference type="java.util.concurrent.ExecutorService"/>
		<reference type="java.lang.Thread"/>
	</type>
	<type name="javax.management.ObjectName" internal="false" project="rt.jar" package="javax.management">
	</type>
	<type name="java.io.ObjectStreamClass" internal="false" project="rt.jar" package="java.io">
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.SessionXASetTimeoutMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="java.lang.Throwable" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="javax.jms.XAConnectionFactory" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.core.journal.TestableJournal" internal="true" project="trunk" package="org.hornetq.core.journal">
		<reference type="org.hornetq.core.journal.impl.JournalFile"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.journal.Journal"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="java.util.concurrent.locks.Lock" internal="false" project="rt.jar" package="java.util.concurrent.locks">
	</type>
	<type name="javax.management.StandardMBean" internal="false" project="rt.jar" package="javax.management">
	</type>
	<type name="org.hornetq.utils.UUID" internal="true" project="trunk" package="org.hornetq.utils">
		<reference type="java.lang.Object"/>
		<reference type="java.lang.StringBuffer"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="javax.jms.XAConnection" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.core.journal.impl.JournalCompactor" internal="true" project="trunk" package="org.hornetq.core.journal.impl">
		<reference type="org.hornetq.core.journal.impl.JournalImpl"/>
		<reference type="org.hornetq.core.journal.impl.dataformat.JournalAddRecordTX"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="org.hornetq.core.journal.impl.JournalCompactor$PendingTransaction"/>
		<reference type="java.lang.Long"/>
		<reference type="org.hornetq.core.journal.impl.JournalRecordProvider"/>
		<reference type="org.hornetq.core.journal.impl.JournalCompactor$DeleteCompactCommand"/>
		<reference type="org.hornetq.core.journal.impl.dataformat.ByteArrayEncoding"/>
		<reference type="org.hornetq.core.journal.impl.JournalCompactor$CompactCommand"/>
		<reference type="org.hornetq.core.journal.impl.JournalFile"/>
		<reference type="org.hornetq.core.journal.impl.dataformat.JournalCompleteRecordTX"/>
		<reference type="org.hornetq.core.journal.impl.JournalCompactor$CommitCompactCommand"/>
		<reference type="java.lang.Override"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.core.journal.impl.JournalCompactor$UpdateCompactCommand"/>
		<reference type="org.hornetq.core.journal.SequentialFile"/>
		<reference type="org.hornetq.core.journal.impl.dataformat.JournalDeleteRecordTX"/>
		<reference type="org.hornetq.core.journal.impl.dataformat.JournalInternalRecord"/>
		<reference type="org.hornetq.core.journal.impl.JournalFileImpl"/>
		<reference type="org.hornetq.core.journal.impl.dataformat.JournalRollbackRecordTX"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.journal.impl.AbstractJournalUpdateTask"/>
		<reference type="org.hornetq.core.journal.impl.JournalRecord"/>
		<reference type="org.hornetq.core.journal.impl.dataformat.JournalAddRecord"/>
		<reference type="org.hornetq.core.journal.SequentialFileFactory"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.api.core.HornetQBuffers"/>
		<reference type="org.hornetq.core.journal.RecordInfo"/>
		<reference type="org.hornetq.core.journal.impl.JournalTransaction"/>
		<reference type="org.hornetq.core.journal.impl.JournalCompactor$RollbackCompactCommand"/>
		<reference type="org.hornetq.core.journal.impl.JournalReaderCallbackAbstract"/>
	</type>
	<type name="org.hornetq.api.core.management.DayCounterInfo" internal="true" project="trunk" package="org.hornetq.api.core.management">
		<reference type="org.hornetq.utils.json.JSONArray"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.utils.json.JSONObject"/>
		<reference type="java.util.Arrays"/>
		<reference type="org.hornetq.utils.json.JSONException"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.SessionXASetTimeoutResponseMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="org.hornetq.core.postoffice.BindingsFactory" internal="true" project="trunk" package="org.hornetq.core.postoffice">
		<reference type="org.hornetq.core.postoffice.Bindings"/>
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.ReplicationDeleteTXMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="org.jboss.netty.channel.UpstreamMessageEvent" internal="false" project="netty.jar" package="org.jboss.netty.channel">
	</type>
	<type name="org.hornetq.core.remoting.impl.netty.NettyAcceptor$BatchFlusher" internal="true" project="trunk" package="org.hornetq.core.remoting.impl.netty">
		<reference type="org.hornetq.core.remoting.impl.netty.NettyAcceptor"/>
		<reference type="java.lang.Runnable"/>
		<reference type="org.hornetq.spi.core.remoting.Connection"/>
	</type>
	<type name="org.hornetq.jms.management.impl.JMSServerControlImpl$NotificationType" internal="true" project="trunk" package="org.hornetq.jms.management.impl">
	</type>
	<type name="org.hornetq.core.client.impl.ClientSessionFactoryInternal" internal="true" project="trunk" package="org.hornetq.core.client.impl">
		<reference type="org.hornetq.api.core.client.ClientSessionFactory"/>
	</type>
	<type name="org.hornetq.core.management.impl.DiscoveryGroupControlImpl" internal="true" project="trunk" package="org.hornetq.core.management.impl">
		<reference type="javax.management.MBeanOperationInfo"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.management.impl.MBeanInfoHelper"/>
		<reference type="org.hornetq.core.cluster.DiscoveryGroup"/>
		<reference type="org.hornetq.core.persistence.StorageManager"/>
		<reference type="org.hornetq.api.core.management.DiscoveryGroupControl"/>
		<reference type="java.lang.Override"/>
		<reference type="org.hornetq.core.management.impl.AbstractControl"/>
		<reference type="org.hornetq.core.config.DiscoveryGroupConfiguration"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.client.impl.LargeMessageBufferImpl" internal="true" project="trunk" package="org.hornetq.core.client.impl">
		<reference type="java.lang.InterruptedException"/>
		<reference type="org.hornetq.core.client.impl.LargeMessageBufferImpl$FileCache"/>
		<reference type="java.lang.Integer"/>
		<reference type="org.hornetq.utils.DataConstants"/>
		<reference type="java.lang.Double"/>
		<reference type="java.lang.IndexOutOfBoundsException"/>
		<reference type="org.hornetq.core.client.impl.ClientConsumerInternal"/>
		<reference type="java.lang.UnsupportedOperationException"/>
		<reference type="java.nio.ByteBuffer"/>
		<reference type="java.lang.Float"/>
		<reference type="java.io.InputStream"/>
		<reference type="java.lang.IllegalAccessError"/>
		<reference type="java.nio.channels.ScatteringByteChannel"/>
		<reference type="java.util.concurrent.TimeUnit"/>
		<reference type="java.io.File"/>
		<reference type="java.io.OutputStream"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.api.core.HornetQBuffers"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionReceiveContinuationMessage"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.nio.channels.GatheringByteChannel"/>
		<reference type="org.hornetq.utils.UTF8Util"/>
		<reference type="org.hornetq.core.client.impl.LargeMessageBufferInternal"/>
		<reference type="java.lang.System"/>
		<reference type="java.io.IOException"/>
		<reference type="java.lang.RuntimeException"/>
	</type>
	<type name="javax.management.ListenerNotFoundException" internal="false" project="rt.jar" package="javax.management">
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.SessionQueueQueryResponseMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="java.util.concurrent.Executors" internal="false" project="rt.jar" package="java.util.concurrent">
	</type>
	<type name="org.hornetq.jms.server.config.JMSQueueConfiguration" internal="true" project="trunk" package="org.hornetq.jms.server.config">
		<reference type="java.lang.String"/>
	</type>
	<type name="javax.jms.Message" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.core.asyncio.impl.AsynchronousFileImpl$ErrorCallback" internal="true" project="trunk" package="org.hornetq.core.asyncio.impl">
		<reference type="org.hornetq.core.asyncio.impl.AsynchronousFileImpl$CallbackHolder"/>
		<reference type="org.hornetq.core.asyncio.AIOCallback"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="java.io.IOException" internal="false" project="rt.jar" package="java.io">
	</type>
	<type name="javax.jms.ExceptionListener" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="javax.security.auth.Subject" internal="false" project="rt.jar" package="javax.security.auth">
	</type>
	<type name="java.util.concurrent.ScheduledExecutorService" internal="false" project="rt.jar" package="java.util.concurrent">
	</type>
	<type name="javax.management.NotificationEmitter" internal="false" project="rt.jar" package="javax.management">
	</type>
	<type name="javax.net.ssl.TrustManagerFactory" internal="false" project="rt.jar" package="javax.net.ssl">
	</type>
	<type name="org.hornetq.core.remoting.impl.invm.InVMRegistry" internal="true" project="trunk" package="org.hornetq.core.remoting.impl.invm">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="org.hornetq.core.remoting.impl.invm.InVMAcceptor"/>
		<reference type="java.lang.Integer"/>
	</type>
	<type name="org.hornetq.api.core.client.ClientConsumer" internal="true" project="trunk" package="org.hornetq.api.core.client">
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.client.MessageHandler"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.api.core.client.ClientMessage"/>
	</type>
	<type name="javax.jms.InvalidDestinationException" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.jms.bridge.JMSBridge" internal="true" project="trunk" package="org.hornetq.jms.bridge">
		<reference type="org.hornetq.jms.bridge.DestinationFactory"/>
		<reference type="javax.transaction.TransactionManager"/>
		<reference type="org.hornetq.jms.bridge.ConnectionFactoryFactory"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.HornetQComponent"/>
		<reference type="org.hornetq.jms.bridge.QualityOfServiceMode"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="javax.naming.NameNotFoundException" internal="false" project="rt.jar" package="javax.naming">
	</type>
	<type name="org.hornetq.core.journal.impl.AIOSequentialFileFactory" internal="true" project="trunk" package="org.hornetq.core.journal.impl">
		<reference type="java.lang.InterruptedException"/>
		<reference type="org.hornetq.utils.HornetQThreadFactory"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.core.journal.SequentialFile"/>
		<reference type="java.util.concurrent.Executors"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.asyncio.impl.AsynchronousFileImpl"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.core.journal.impl.AbstractSequentialFileFactory"/>
		<reference type="java.nio.ByteBuffer"/>
		<reference type="java.lang.System"/>
		<reference type="org.hornetq.core.config.impl.ConfigurationImpl"/>
		<reference type="java.util.concurrent.ExecutorService"/>
		<reference type="org.hornetq.core.journal.impl.AIOSequentialFileFactory$ReuseBuffersController"/>
		<reference type="java.lang.Override"/>
		<reference type="org.hornetq.core.journal.impl.AIOSequentialFile"/>
		<reference type="java.util.concurrent.TimeUnit"/>
	</type>
	<type name="org.jboss.netty.channel.ChannelHandler" internal="false" project="netty.jar" package="org.jboss.netty.channel">
	</type>
	<type name="org.hornetq.core.protocol.core.impl.CoreProtocolManager" internal="true" project="trunk" package="org.hornetq.core.protocol.core.impl">
		<reference type="org.hornetq.api.core.Interceptor"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.protocol.core.ChannelHandler"/>
		<reference type="org.hornetq.spi.core.protocol.RemotingConnection"/>
		<reference type="org.hornetq.core.protocol.core.ServerSessionPacketHandler"/>
		<reference type="org.hornetq.spi.core.protocol.ProtocolManager"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.core.protocol.core.Channel"/>
		<reference type="org.hornetq.core.config.Configuration"/>
		<reference type="org.hornetq.core.protocol.core.impl.RemotingConnectionImpl"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.spi.core.protocol.ConnectionEntry"/>
		<reference type="org.hornetq.core.protocol.core.CoreRemotingConnection"/>
		<reference type="org.hornetq.core.protocol.core.impl.PacketImpl"/>
		<reference type="java.lang.System"/>
		<reference type="org.hornetq.core.protocol.core.impl.HornetQPacketHandler"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.Ping"/>
		<reference type="org.hornetq.core.protocol.core.Packet"/>
		<reference type="org.hornetq.api.core.client.HornetQClient"/>
		<reference type="org.hornetq.core.server.HornetQServer"/>
		<reference type="org.hornetq.spi.core.remoting.Connection"/>
	</type>
	<type name="org.hornetq.api.core.management.AcceptorControl" internal="true" project="trunk" package="org.hornetq.api.core.management">
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.api.core.management.HornetQComponentControl"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.jboss.netty.channel.ChannelFuture" internal="false" project="netty.jar" package="org.jboss.netty.channel">
	</type>
	<type name="org.jboss.kernel.spi.deployment.KernelDeployment" internal="false" project="jboss-kernel.jar" package="org.jboss.kernel.spi.deployment">
	</type>
	<type name="org.hornetq.api.core.client.loadbalance.RoundRobinConnectionLoadBalancingPolicy" internal="true" project="trunk" package="org.hornetq.api.core.client.loadbalance">
		<reference type="org.hornetq.utils.Random"/>
		<reference type="org.hornetq.api.core.client.loadbalance.ConnectionLoadBalancingPolicy"/>
	</type>
	<type name="org.hornetq.core.journal.impl.JournalImpl" internal="true" project="trunk" package="org.hornetq.core.journal.impl">
		<reference type="java.util.concurrent.CountDownLatch"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="java.lang.Long"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.utils.DataConstants"/>
		<reference type="java.util.concurrent.locks.ReentrantLock"/>
		<reference type="org.hornetq.core.journal.impl.JournalRecordProvider"/>
		<reference type="org.hornetq.core.journal.impl.Reclaimer"/>
		<reference type="java.util.concurrent.locks.ReentrantReadWriteLock"/>
		<reference type="org.hornetq.core.journal.impl.JournalRecord"/>
		<reference type="org.hornetq.core.journal.SequentialFileFactory"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.core.journal.impl.JournalCompactor"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="java.util.concurrent.atomic.AtomicBoolean"/>
		<reference type="org.hornetq.core.journal.impl.JournalFile"/>
		<reference type="java.util.concurrent.locks.ReadWriteLock"/>
		<reference type="java.util.concurrent.ExecutorService"/>
		<reference type="org.hornetq.core.journal.TestableJournal"/>
		<reference type="org.hornetq.core.journal.impl.JournalTransaction"/>
		<reference type="java.util.concurrent.atomic.AtomicLong"/>
		<reference type="java.lang.NullPointerException"/>
	</type>
	<type name="org.jboss.security.SecurityContext" internal="false" project="jboss-security-spi.jar" package="org.jboss.security">
	</type>
	<type name="org.hornetq.api.core.management.ManagementHelper" internal="true" project="trunk" package="org.hornetq.api.core.management">
		<reference type="java.lang.Short"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.utils.json.JSONObject"/>
		<reference type="java.lang.Long"/>
		<reference type="java.lang.Integer"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.lang.Double"/>
		<reference type="java.lang.Byte"/>
		<reference type="java.util.Iterator"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.utils.json.JSONArray"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="java.lang.Boolean"/>
		<reference type="java.util.Map"/>
		<reference type="java.util.Collections"/>
		<reference type="org.hornetq.api.core.Message"/>
		<reference type="java.lang.Class"/>
	</type>
	<type name="org.hornetq.core.config.impl.ConfigurationImpl" internal="true" project="trunk" package="org.hornetq.core.config.impl">
		<reference type="org.hornetq.core.logging.impl.JULLogDelegateFactory"/>
		<reference type="org.hornetq.core.config.BridgeConfiguration"/>
		<reference type="org.hornetq.core.config.Configuration"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.config.ClusterConnectionConfiguration"/>
		<reference type="org.hornetq.core.server.group.impl.GroupingHandlerConfiguration"/>
		<reference type="org.hornetq.api.core.TransportConfiguration"/>
		<reference type="org.hornetq.core.config.BroadcastGroupConfiguration"/>
		<reference type="org.hornetq.core.config.DivertConfiguration"/>
		<reference type="org.hornetq.core.settings.impl.AddressSettings"/>
		<reference type="org.hornetq.core.security.Role"/>
		<reference type="java.lang.Override"/>
		<reference type="org.hornetq.core.config.DiscoveryGroupConfiguration"/>
		<reference type="org.hornetq.core.config.CoreQueueConfiguration"/>
		<reference type="org.hornetq.core.config.ConnectorServiceConfiguration"/>
		<reference type="org.hornetq.core.server.JournalType"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="java.lang.NoSuchMethodException" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="javax.net.ssl.SSLEngine" internal="false" project="rt.jar" package="javax.net.ssl">
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.SessionXAGetInDoubtXidsResponseMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="org.hornetq.api.core.management.RoleInfo" internal="true" project="trunk" package="org.hornetq.api.core.management">
		<reference type="org.hornetq.utils.json.JSONArray"/>
		<reference type="org.hornetq.utils.json.JSONObject"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.client.impl.DelegatingSession" internal="true" project="trunk" package="org.hornetq.core.client.impl">
		<reference type="org.hornetq.api.core.client.SendAcknowledgementHandler"/>
		<reference type="org.hornetq.core.client.impl.ClientProducerCredits"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionReceiveMessage"/>
		<reference type="javax.transaction.xa.XAResource"/>
		<reference type="org.hornetq.api.core.client.ClientSession$BindingQuery"/>
		<reference type="org.hornetq.api.core.client.SessionFailureListener"/>
		<reference type="org.hornetq.api.core.client.ClientSession$QueueQuery"/>
		<reference type="org.hornetq.core.client.impl.ClientConsumerInternal"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionReceiveLargeMessage"/>
		<reference type="org.hornetq.core.client.impl.ClientProducerCreditManager"/>
		<reference type="java.lang.Override"/>
		<reference type="org.hornetq.api.core.client.ClientConsumer"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.spi.core.protocol.RemotingConnection"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.client.ClientProducer"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.core.client.impl.ClientSessionInternal"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.core.client.impl.FailoverManager"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionReceiveContinuationMessage"/>
		<reference type="org.hornetq.core.client.impl.ClientProducerInternal"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.protocol.core.CoreRemotingConnection"/>
		<reference type="java.lang.Throwable"/>
		<reference type="java.lang.System"/>
		<reference type="org.hornetq.api.core.Message"/>
		<reference type="javax.transaction.xa.XAException"/>
		<reference type="javax.transaction.xa.Xid"/>
		<reference type="org.hornetq.api.core.client.ClientMessage"/>
	</type>
	<type name="java.lang.System" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.hornetq.core.settings.impl.AddressFullMessagePolicy" internal="true" project="trunk" package="org.hornetq.core.settings.impl">
	</type>
	<type name="javax.xml.validation.Validator" internal="false" project="rt.jar" package="javax.xml.validation">
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.SessionBindingQueryResponseMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="org.hornetq.ra.HornetQRATextMessage" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.ra.HornetQRAMessage"/>
		<reference type="org.hornetq.ra.HornetQRASession"/>
		<reference type="javax.jms.TextMessage"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="java.util.Vector" internal="false" project="rt.jar" package="java.util">
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.Ping" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="javax.resource.spi.BootstrapContext" internal="false" project="jboss-jca-api.jar" package="javax.resource.spi">
	</type>
	<type name="org.hornetq.core.journal.JournalLoadInformation" internal="true" project="trunk" package="org.hornetq.core.journal">
		<reference type="java.lang.Object"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.integration.twitter.impl.IncomingTweetsHandler$TweetsRunnable" internal="true" project="trunk" package="org.hornetq.integration.twitter.impl">
		<reference type="org.hornetq.integration.twitter.impl.IncomingTweetsHandler"/>
		<reference type="java.lang.Throwable"/>
		<reference type="java.lang.Runnable"/>
	</type>
	<type name="org.jboss.netty.channel.ChannelFutureListener" internal="false" project="netty.jar" package="org.jboss.netty.channel">
	</type>
	<type name="javax.naming.InitialContext" internal="false" project="rt.jar" package="javax.naming">
	</type>
	<type name="org.hornetq.core.deployers.impl.SecurityDeployer" internal="true" project="trunk" package="org.hornetq.core.deployers.impl">
		<reference type="org.w3c.dom.Node"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.utils.XMLUtil"/>
		<reference type="org.hornetq.core.deployers.DeploymentManager"/>
		<reference type="org.hornetq.core.deployers.impl.FileConfigurationParser"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.deployers.impl.XmlDeployer"/>
		<reference type="org.hornetq.core.security.Role"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="javax.naming.Referenceable" internal="false" project="rt.jar" package="javax.naming">
	</type>
	<type name="org.hornetq.service.HornetQStarterService" internal="true" project="trunk" package="org.hornetq.service">
		<reference type="org.hornetq.core.server.impl.HornetQServerImpl"/>
		<reference type="javax.management.MBeanServer"/>
		<reference type="org.hornetq.service.HornetQFileConfigurationServiceMBean"/>
		<reference type="javax.management.ObjectName"/>
		<reference type="org.hornetq.core.config.Configuration"/>
		<reference type="javax.management.MBeanRegistration"/>
		<reference type="java.lang.Boolean"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.config.impl.ConfigurationImpl"/>
		<reference type="org.hornetq.service.JBossASSecurityManagerServiceMBean"/>
		<reference type="org.hornetq.service.HornetQStarterServiceMBean"/>
		<reference type="org.hornetq.spi.core.security.HornetQSecurityManager"/>
		<reference type="org.hornetq.core.server.HornetQServer"/>
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.SessionCommitMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="org.hornetq.core.protocol.core.CoreRemotingConnection" internal="true" project="trunk" package="org.hornetq.core.protocol.core">
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.spi.core.protocol.RemotingConnection"/>
		<reference type="org.hornetq.core.protocol.core.Channel"/>
	</type>
	<type name="javax.management.NotCompliantMBeanException" internal="false" project="rt.jar" package="javax.management">
	</type>
	<type name="org.hornetq.jms.management.impl.JMSTopicControlImpl" internal="true" project="trunk" package="org.hornetq.jms.management.impl">
		<reference type="org.hornetq.api.jms.management.TopicControl"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.utils.json.JSONObject"/>
		<reference type="org.hornetq.api.core.management.QueueControl"/>
		<reference type="javax.management.MBeanInfo"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.management.impl.MBeanInfoHelper"/>
		<reference type="org.hornetq.jms.client.HornetQMessage"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.jms.server.JMSServerManager"/>
		<reference type="org.hornetq.api.core.management.AddressControl"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.utils.json.JSONArray"/>
		<reference type="org.hornetq.jms.client.SelectorTranslator"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.jms.client.HornetQDestination"/>
		<reference type="java.util.Map"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="org.hornetq.api.core.management.ResourceNames"/>
		<reference type="java.util.Collections"/>
		<reference type="org.hornetq.core.server.management.ManagementService"/>
		<reference type="javax.management.StandardMBean"/>
		<reference type="org.hornetq.jms.management.impl.JMSTopicControlImpl$DurabilityType"/>
		<reference type="java.lang.Override"/>
		<reference type="org.hornetq.api.core.management.HornetQServerControl"/>
		<reference type="org.hornetq.jms.management.impl.JMSQueueControlImpl"/>
	</type>
	<type name="org.hornetq.api.core.client.ClientMessage" internal="true" project="trunk" package="org.hornetq.api.core.client">
		<reference type="org.hornetq.api.core.Message"/>
		<reference type="java.io.InputStream"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="java.io.OutputStream"/>
	</type>
	<type name="java.util.concurrent.atomic.AtomicLong" internal="false" project="rt.jar" package="java.util.concurrent.atomic">
	</type>
	<type name="javax.jms.ConnectionFactory" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.core.deployers.impl.XmlDeployer" internal="true" project="trunk" package="org.hornetq.core.deployers.impl">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.net.URL"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.w3c.dom.NodeList"/>
		<reference type="java.lang.StringBuilder"/>
		<reference type="java.io.Reader"/>
		<reference type="java.lang.String"/>
		<reference type="org.w3c.dom.Node"/>
		<reference type="org.w3c.dom.Element"/>
		<reference type="org.hornetq.utils.XMLUtil"/>
		<reference type="org.hornetq.core.deployers.DeploymentManager"/>
		<reference type="org.hornetq.core.server.HornetQComponent"/>
		<reference type="org.hornetq.core.deployers.Deployer"/>
		<reference type="java.io.InputStreamReader"/>
	</type>
	<type name="org.hornetq.core.protocol.stomp.WebSocketServerHandler" internal="true" project="trunk" package="org.hornetq.core.protocol.stomp">
		<reference type="org.jboss.netty.channel.ExceptionEvent"/>
		<reference type="org.jboss.netty.channel.ChannelFuture"/>
		<reference type="java.security.MessageDigest"/>
		<reference type="java.lang.Long"/>
		<reference type="org.jboss.netty.channel.Channels"/>
		<reference type="org.jboss.netty.channel.ChannelHandlerContext"/>
		<reference type="org.jboss.netty.channel.ChannelPipeline"/>
		<reference type="org.hornetq.core.protocol.stomp.WebSocketStompFrameEncoder"/>
		<reference type="org.jboss.netty.handler.codec.http.HttpHeaders$Values"/>
		<reference type="org.jboss.netty.buffer.ChannelBuffers"/>
		<reference type="org.jboss.netty.handler.codec.http.DefaultHttpResponse"/>
		<reference type="org.jboss.netty.handler.codec.http.HttpMethod"/>
		<reference type="org.jboss.netty.channel.ChannelFutureListener"/>
		<reference type="org.jboss.netty.channel.SimpleChannelUpstreamHandler"/>
		<reference type="org.jboss.netty.handler.codec.http.HttpHeaders"/>
		<reference type="java.lang.Override"/>
		<reference type="org.jboss.netty.handler.codec.http.HttpResponse"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.jboss.netty.handler.codec.http.HttpResponseStatus"/>
		<reference type="org.jboss.netty.handler.codec.http.websocket.WebSocketFrameDecoder"/>
		<reference type="org.jboss.netty.handler.codec.http.HttpVersion"/>
		<reference type="java.lang.String"/>
		<reference type="org.jboss.netty.handler.codec.http.HttpRequest"/>
		<reference type="java.lang.Object"/>
		<reference type="org.jboss.netty.buffer.ChannelBuffer"/>
		<reference type="org.jboss.netty.channel.MessageEvent"/>
		<reference type="org.jboss.netty.handler.codec.http.websocket.WebSocketFrame"/>
		<reference type="org.jboss.netty.util.CharsetUtil"/>
		<reference type="org.jboss.netty.handler.codec.http.HttpHeaders$Names"/>
	</type>
	<type name="org.hornetq.utils.concurrent.ConcurrentPriorityLinkedListImpl" internal="true" project="trunk" package="org.hornetq.utils.concurrent">
		<reference type="java.lang.reflect.Array"/>
		<reference type="org.hornetq.utils.HQDeque"/>
	</type>
	<type name="java.io.File" internal="false" project="rt.jar" package="java.io">
	</type>
	<type name="org.hornetq.core.server.impl.ServerInfo" internal="true" project="trunk" package="org.hornetq.core.server.impl">
		<reference type="org.hornetq.core.paging.PagingManager"/>
		<reference type="java.lang.Runtime"/>
		<reference type="org.hornetq.utils.SizeFormatterUtil"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.util.Date"/>
		<reference type="org.hornetq.core.paging.PagingStore"/>
		<reference type="java.lang.management.ThreadMXBean"/>
		<reference type="java.lang.management.ManagementFactory"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.core.server.HornetQServer"/>
	</type>
	<type name="javax.jms.MessageNotWriteableException" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="java.util.Arrays" internal="false" project="rt.jar" package="java.util">
	</type>
	<type name="java.security.PrivilegedAction" internal="false" project="rt.jar" package="java.security">
	</type>
	<type name="java.io.Reader" internal="false" project="rt.jar" package="java.io">
	</type>
	<type name="org.jboss.netty.channel.socket.nio.NioClientSocketChannelFactory" internal="false" project="netty.jar" package="org.jboss.netty.channel.socket.nio">
	</type>
	<type name="org.hornetq.core.paging.PagingStore" internal="true" project="trunk" package="org.hornetq.core.paging">
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.HornetQComponent"/>
		<reference type="org.hornetq.core.settings.impl.AddressFullMessagePolicy"/>
		<reference type="java.lang.Runnable"/>
		<reference type="org.hornetq.core.paging.Page"/>
	</type>
	<type name="javax.resource.spi.InvalidPropertyException" internal="false" project="jboss-jca-api.jar" package="javax.resource.spi">
	</type>
	<type name="org.hornetq.core.settings.impl.HierarchicalObjectRepository$MatchComparator" internal="true" project="trunk" package="org.hornetq.core.settings.impl">
		<reference type="org.hornetq.core.settings.impl.Match"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="twitter4j.StatusUpdate" internal="false" project="twitter4j-core.jar" package="twitter4j">
	</type>
	<type name="org.hornetq.core.postoffice.impl.PostOfficeImpl$PageMessageOperation" internal="true" project="trunk" package="org.hornetq.core.postoffice.impl">
		<reference type="org.hornetq.core.paging.PageTransactionInfo"/>
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="org.hornetq.core.transaction.TransactionOperation"/>
		<reference type="org.hornetq.core.transaction.TransactionPropertyIndexes"/>
		<reference type="org.hornetq.core.postoffice.impl.PostOfficeImpl"/>
		<reference type="org.hornetq.core.paging.impl.PageTransactionInfoImpl"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.paging.PagingStore"/>
		<reference type="org.hornetq.core.transaction.Transaction"/>
		<reference type="org.hornetq.core.transaction.Transaction$State"/>
	</type>
	<type name="java.io.BufferedWriter" internal="false" project="rt.jar" package="java.io">
	</type>
	<type name="org.jboss.netty.channel.group.ChannelGroupFuture" internal="false" project="netty.jar" package="org.jboss.netty.channel.group">
	</type>
	<type name="org.hornetq.core.server.QueueFactory" internal="true" project="trunk" package="org.hornetq.core.server">
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.server.Queue"/>
		<reference type="org.hornetq.core.filter.Filter"/>
		<reference type="org.hornetq.core.postoffice.PostOffice"/>
	</type>
	<type name="java.nio.channels.FileChannel" internal="false" project="rt.jar" package="java.nio.channels">
	</type>
	<type name="org.hornetq.core.journal.impl.AIOSequentialFile" internal="true" project="trunk" package="org.hornetq.core.journal.impl">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.core.journal.SequentialFile"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="org.hornetq.core.journal.impl.SimpleWaitIOCallback"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.asyncio.impl.AsynchronousFileImpl"/>
		<reference type="org.hornetq.core.asyncio.AsynchronousFile"/>
		<reference type="java.util.concurrent.Executor"/>
		<reference type="org.hornetq.core.journal.SequentialFileFactory"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.core.asyncio.BufferCallback"/>
		<reference type="org.hornetq.core.journal.impl.DummyCallback"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="java.nio.ByteBuffer"/>
		<reference type="org.hornetq.core.journal.IOAsyncTask"/>
		<reference type="java.lang.Override"/>
		<reference type="java.io.File"/>
		<reference type="org.hornetq.core.journal.impl.AbstractSequentialFile"/>
	</type>
	<type name="java.util.Random" internal="false" project="rt.jar" package="java.util">
	</type>
	<type name="org.jboss.netty.handler.ssl.SslHandler" internal="false" project="netty.jar" package="org.jboss.netty.handler.ssl">
	</type>
	<type name="org.hornetq.core.journal.impl.NIOSequentialFileFactory" internal="true" project="trunk" package="org.hornetq.core.journal.impl">
		<reference type="org.hornetq.core.journal.impl.AbstractSequentialFileFactory"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.core.journal.SequentialFile"/>
		<reference type="java.nio.ByteBuffer"/>
		<reference type="org.hornetq.core.config.impl.ConfigurationImpl"/>
		<reference type="org.hornetq.core.journal.impl.NIOSequentialFile"/>
		<reference type="org.hornetq.core.journal.SequentialFileFactory"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="javax.resource.spi.ActivationSpec" internal="false" project="jboss-jca-api.jar" package="javax.resource.spi">
	</type>
	<type name="org.hornetq.core.server.cluster.ClusterConnection" internal="true" project="trunk" package="org.hornetq.core.server.cluster">
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.HornetQComponent"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.asyncio.AsynchronousFile" internal="true" project="trunk" package="org.hornetq.core.asyncio">
		<reference type="org.hornetq.core.asyncio.BufferCallback"/>
		<reference type="java.nio.ByteBuffer"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.asyncio.AIOCallback"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.api.core.client.ClientSession$QueueQuery" internal="true" project="trunk" package="org.hornetq.api.core.client">
	</type>
	<type name="org.hornetq.ra.HornetQRAMCFProperties" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="javax.jms.Topic"/>
		<reference type="org.hornetq.ra.Util"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Integer"/>
		<reference type="javax.jms.Queue"/>
		<reference type="java.io.Serializable"/>
		<reference type="org.hornetq.ra.HornetQRAConnectionFactory"/>
		<reference type="org.hornetq.ra.ConnectionFactoryProperties"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.client.impl.ClientMessageImpl$DecodingContext" internal="true" project="trunk" package="org.hornetq.core.client.impl">
		<reference type="org.hornetq.core.message.impl.MessageImpl"/>
		<reference type="org.hornetq.api.core.HornetQBuffers"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.message.BodyEncoder"/>
		<reference type="java.nio.ByteBuffer"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
	</type>
	<type name="org.hornetq.ra.HornetQRAQueueSender" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="javax.jms.Message"/>
		<reference type="org.hornetq.ra.HornetQRASession"/>
		<reference type="org.hornetq.ra.HornetQRAMessageProducer"/>
		<reference type="javax.jms.Queue"/>
		<reference type="javax.jms.QueueSender"/>
		<reference type="javax.jms.JMSException"/>
	</type>
	<type name="org.hornetq.core.protocol.stomp.StompSubscription" internal="true" project="trunk" package="org.hornetq.core.protocol.stomp">
		<reference type="java.lang.Override"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.persistence.impl.journal.JournalStorageManager$DeliveryCountUpdateEncoding" internal="true" project="trunk" package="org.hornetq.core.persistence.impl.journal">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.journal.EncodingSupport"/>
	</type>
	<type name="org.hornetq.core.deployers.Deployer" internal="true" project="trunk" package="org.hornetq.core.deployers">
		<reference type="java.lang.Exception"/>
		<reference type="java.net.URL"/>
		<reference type="org.hornetq.core.server.HornetQComponent"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="java.lang.ClassLoader" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.hornetq.core.postoffice.Address" internal="true" project="trunk" package="org.hornetq.core.postoffice">
		<reference type="org.hornetq.api.core.SimpleString"/>
	</type>
	<type name="org.hornetq.core.version.impl.VersionImpl" internal="true" project="trunk" package="org.hornetq.core.version.impl">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Object"/>
		<reference type="java.io.Serializable"/>
		<reference type="org.hornetq.core.version.Version"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.jms.client.JMSExceptionHelper" internal="true" project="trunk" package="org.hornetq.jms.client">
		<reference type="javax.jms.JMSSecurityException"/>
		<reference type="javax.jms.IllegalStateException"/>
		<reference type="javax.jms.InvalidSelectorException"/>
		<reference type="javax.jms.InvalidDestinationException"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="javax.jms.TransactionRolledBackException"/>
	</type>
	<type name="org.hornetq.api.core.management.DiscoveryGroupControl" internal="true" project="trunk" package="org.hornetq.api.core.management">
		<reference type="org.hornetq.api.core.management.HornetQComponentControl"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.postoffice.Binding" internal="true" project="trunk" package="org.hornetq.core.postoffice">
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="org.hornetq.core.postoffice.BindingType"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.Bindable"/>
		<reference type="org.hornetq.core.server.RoutingContext"/>
		<reference type="org.hornetq.core.filter.Filter"/>
	</type>
	<type name="java.nio.channels.GatheringByteChannel" internal="false" project="rt.jar" package="java.nio.channels">
	</type>
	<type name="org.hornetq.core.buffers.impl.ChannelBufferWrapper" internal="true" project="trunk" package="org.hornetq.core.buffers.impl">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.jboss.netty.buffer.ChannelBuffer"/>
		<reference type="java.nio.ByteBuffer"/>
		<reference type="org.hornetq.utils.UTF8Util"/>
		<reference type="org.hornetq.utils.DataConstants"/>
		<reference type="java.lang.Float"/>
		<reference type="java.lang.Double"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.jms.client.HornetQMapMessage" internal="true" project="trunk" package="org.hornetq.jms.client">
		<reference type="java.lang.Short"/>
		<reference type="java.lang.Integer"/>
		<reference type="java.lang.Long"/>
		<reference type="java.lang.Character"/>
		<reference type="java.lang.Double"/>
		<reference type="java.lang.Byte"/>
		<reference type="org.hornetq.api.core.PropertyConversionException"/>
		<reference type="java.util.Collections"/>
		<reference type="java.lang.Float"/>
		<reference type="java.util.Enumeration"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="java.lang.Override"/>
		<reference type="javax.jms.MapMessage"/>
		<reference type="javax.jms.MessageFormatException"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.client.ClientSession"/>
		<reference type="org.hornetq.utils.TypedProperties"/>
		<reference type="java.util.Set"/>
		<reference type="org.hornetq.jms.client.HornetQMessage"/>
		<reference type="java.lang.String"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="java.lang.Boolean"/>
		<reference type="java.lang.System"/>
		<reference type="org.hornetq.api.core.Message"/>
		<reference type="org.hornetq.api.core.client.ClientMessage"/>
	</type>
	<type name="org.hornetq.utils.DataConstants" internal="true" project="trunk" package="org.hornetq.utils">
	</type>
	<type name="javax.jms.QueueSession" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.jboss.netty.util.Version" internal="false" project="netty.jar" package="org.jboss.netty.util">
	</type>
	<type name="java.util.concurrent.ScheduledFuture" internal="false" project="rt.jar" package="java.util.concurrent">
	</type>
	<type name="org.hornetq.api.core.client.ClientSession" internal="true" project="trunk" package="org.hornetq.api.core.client">
	</type>
	<type name="org.hornetq.core.persistence.impl.journal.JournalStorageManager$PersistentQueueBindingEncoding" internal="true" project="trunk" package="org.hornetq.core.persistence.impl.journal">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.persistence.QueueBindingInfo"/>
		<reference type="org.hornetq.core.journal.EncodingSupport"/>
	</type>
	<type name="org.hornetq.core.protocol.stomp.Stomp$Headers$Subscribe" internal="true" project="trunk" package="org.hornetq.core.protocol.stomp">
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.server.impl.ConnectorsService" internal="true" project="trunk" package="org.hornetq.core.server.impl">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.persistence.StorageManager"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.core.config.Configuration"/>
		<reference type="org.hornetq.utils.ConfigurationHelper"/>
		<reference type="java.lang.Throwable"/>
		<reference type="java.lang.ClassLoader"/>
		<reference type="org.hornetq.core.server.HornetQComponent"/>
		<reference type="java.util.concurrent.ScheduledExecutorService"/>
		<reference type="org.hornetq.core.server.ConnectorServiceFactory"/>
		<reference type="org.hornetq.core.server.ConnectorService"/>
		<reference type="java.lang.Thread"/>
		<reference type="org.hornetq.core.config.ConnectorServiceConfiguration"/>
		<reference type="org.hornetq.core.postoffice.PostOffice"/>
	</type>
	<type name="org.hornetq.core.protocol.core.impl.PacketImpl" internal="true" project="trunk" package="org.hornetq.core.protocol.core.impl">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Object"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="org.hornetq.spi.core.protocol.RemotingConnection"/>
		<reference type="org.hornetq.utils.DataConstants"/>
		<reference type="java.lang.Override"/>
		<reference type="org.hornetq.core.protocol.core.Packet"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.api.core.client.SendAcknowledgementHandler" internal="true" project="trunk" package="org.hornetq.api.core.client">
		<reference type="org.hornetq.api.core.Message"/>
	</type>
	<type name="javax.jms.XATopicConnectionFactory" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.utils.ConcurrentHashSet" internal="true" project="trunk" package="org.hornetq.utils">
		<reference type="java.lang.Object"/>
		<reference type="java.lang.Override"/>
	</type>
	<type name="java.security.GeneralSecurityException" internal="false" project="rt.jar" package="java.security">
	</type>
	<type name="org.hornetq.ra.HornetQRALocalTransaction" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="javax.resource.spi.LocalTransaction"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="javax.resource.ResourceException"/>
		<reference type="org.hornetq.ra.HornetQRAManagedConnection"/>
	</type>
	<type name="org.jboss.security.SecurityAssociation" internal="false" project="jbosssx.jar" package="org.jboss.security">
	</type>
	<type name="org.hornetq.api.core.client.SessionFailureListener" internal="true" project="trunk" package="org.hornetq.api.core.client">
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.core.remoting.FailureListener"/>
	</type>
	<type name="org.hornetq.core.persistence.impl.journal.BatchingIDGenerator" internal="true" project="trunk" package="org.hornetq.core.persistence.impl.journal">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.persistence.impl.journal.JournalStorageManager"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.persistence.impl.journal.BatchingIDGenerator$IDCounterEncoding"/>
		<reference type="java.util.concurrent.atomic.AtomicLong"/>
		<reference type="org.hornetq.utils.IDGenerator"/>
		<reference type="org.hornetq.core.journal.Journal"/>
	</type>
	<type name="org.jboss.security.SecurityContextFactory" internal="false" project="jboss-security-spi.jar" package="org.jboss.security">
	</type>
	<type name="org.hornetq.core.protocol.stomp.Stomp$Headers$Connected" internal="true" project="trunk" package="org.hornetq.core.protocol.stomp">
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.messagecounter.impl.MessageCounterHelper" internal="true" project="trunk" package="org.hornetq.core.messagecounter.impl">
		<reference type="java.util.GregorianCalendar"/>
		<reference type="java.text.DateFormat"/>
		<reference type="java.lang.Long"/>
		<reference type="java.lang.Integer"/>
		<reference type="java.lang.Boolean"/>
		<reference type="java.util.Date"/>
		<reference type="org.hornetq.core.messagecounter.MessageCounter$DayCounter"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.messagecounter.MessageCounter"/>
		<reference type="java.util.StringTokenizer"/>
		<reference type="org.hornetq.api.core.management.DayCounterInfo"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.server.impl.MemoryManagerImpl" internal="true" project="trunk" package="org.hornetq.core.server.impl">
		<reference type="java.lang.InterruptedException"/>
		<reference type="java.lang.Runtime"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.core.server.impl.MemoryManagerImpl$MemoryRunnable"/>
		<reference type="java.lang.Thread"/>
		<reference type="org.hornetq.core.server.MemoryManager"/>
	</type>
	<type name="org.jboss.netty.handler.codec.http.HttpHeaders$Values" internal="false" project="netty.jar" package="org.jboss.netty.handler.codec.http">
	</type>
	<type name="org.hornetq.core.server.cluster.Bridge" internal="true" project="trunk" package="org.hornetq.core.server.cluster">
		<reference type="org.hornetq.spi.core.protocol.RemotingConnection"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.server.HornetQComponent"/>
		<reference type="org.hornetq.core.server.Queue"/>
		<reference type="org.hornetq.core.server.cluster.Transformer"/>
		<reference type="org.hornetq.core.server.Consumer"/>
		<reference type="org.hornetq.core.server.management.NotificationService"/>
	</type>
	<type name="org.hornetq.core.messagecounter.MessageCounter" internal="true" project="trunk" package="org.hornetq.core.messagecounter">
		<reference type="java.util.GregorianCalendar"/>
		<reference type="java.util.Calendar"/>
		<reference type="org.hornetq.api.core.management.QueueControl"/>
		<reference type="java.lang.System"/>
		<reference type="org.hornetq.core.messagecounter.MessageCounter$DayCounter"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.management.impl.HornetQServerControlImpl" internal="true" project="trunk" package="org.hornetq.core.management.impl">
		<reference type="org.hornetq.core.security.CheckType"/>
		<reference type="org.hornetq.core.transaction.ResourceManager"/>
		<reference type="org.hornetq.core.config.BridgeConfiguration"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="javax.management.NotificationFilter"/>
		<reference type="org.hornetq.core.persistence.StorageManager"/>
		<reference type="org.hornetq.core.management.impl.AbstractControl"/>
		<reference type="org.hornetq.core.persistence.config.PersistedAddressSetting"/>
		<reference type="java.util.Collections"/>
		<reference type="org.hornetq.core.server.ServerSession"/>
		<reference type="org.hornetq.core.security.Role"/>
		<reference type="java.lang.Override"/>
		<reference type="org.hornetq.core.remoting.server.RemotingService"/>
		<reference type="org.hornetq.api.core.management.HornetQServerControl"/>
		<reference type="org.hornetq.api.core.management.DivertControl"/>
		<reference type="javax.management.NotificationEmitter"/>
		<reference type="org.hornetq.core.transaction.impl.XidImpl"/>
		<reference type="javax.management.NotificationListener"/>
		<reference type="org.hornetq.core.management.impl.MBeanInfoHelper"/>
		<reference type="org.hornetq.core.settings.impl.AddressFullMessagePolicy"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.core.messagecounter.impl.MessageCounterManagerImpl"/>
		<reference type="javax.management.ListenerNotFoundException"/>
		<reference type="java.lang.String"/>
		<reference type="javax.management.MBeanOperationInfo"/>
		<reference type="org.hornetq.core.config.Configuration"/>
		<reference type="org.hornetq.utils.json.JSONArray"/>
		<reference type="java.lang.Object"/>
		<reference type="javax.management.NotificationBroadcasterSupport"/>
		<reference type="javax.transaction.xa.Xid"/>
		<reference type="javax.management.MBeanNotificationInfo"/>
		<reference type="org.hornetq.api.core.management.NotificationType"/>
		<reference type="java.text.DateFormat"/>
		<reference type="org.hornetq.utils.json.JSONObject"/>
		<reference type="org.hornetq.api.core.management.QueueControl"/>
		<reference type="java.lang.Long"/>
		<reference type="java.util.Date"/>
		<reference type="org.hornetq.core.config.DivertConfiguration"/>
		<reference type="org.hornetq.core.settings.impl.AddressSettings"/>
		<reference type="org.hornetq.core.transaction.Transaction"/>
		<reference type="org.hornetq.core.postoffice.PostOffice"/>
		<reference type="org.hornetq.core.server.HornetQServer"/>
		<reference type="org.hornetq.core.messagecounter.MessageCounterManager"/>
		<reference type="org.hornetq.api.core.management.BridgeControl"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.spi.core.protocol.RemotingConnection"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.TransportConfiguration"/>
		<reference type="org.hornetq.api.core.management.AddressControl"/>
		<reference type="org.hornetq.core.persistence.config.PersistedRoles"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="org.hornetq.utils.SecurityFormatter"/>
		<reference type="org.hornetq.core.server.JournalType"/>
	</type>
	<type name="java.security.Principal" internal="false" project="rt.jar" package="java.security">
	</type>
	<type name="org.hornetq.core.replication.impl.ReplicatedJournal" internal="true" project="trunk" package="org.hornetq.core.replication.impl">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.journal.JournalLoadInformation"/>
		<reference type="org.hornetq.core.journal.Journal"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.core.journal.LoaderCallback"/>
		<reference type="org.hornetq.core.journal.impl.dataformat.ByteArrayEncoding"/>
		<reference type="org.hornetq.core.journal.PreparedTransactionInfo"/>
		<reference type="org.hornetq.core.replication.ReplicationManager"/>
		<reference type="java.lang.System"/>
		<reference type="org.hornetq.core.journal.EncodingSupport"/>
		<reference type="org.hornetq.core.journal.RecordInfo"/>
		<reference type="org.hornetq.core.journal.IOCompletion"/>
		<reference type="org.hornetq.core.journal.TransactionFailureCallback"/>
	</type>
	<type name="org.hornetq.core.journal.RecordInfo" internal="true" project="trunk" package="org.hornetq.core.journal">
		<reference type="java.lang.Object"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.integration.twitter.TwitterOutgoingConnectorServiceFactory" internal="true" project="trunk" package="org.hornetq.integration.twitter">
		<reference type="org.hornetq.integration.twitter.impl.OutgoingTweetsHandler"/>
		<reference type="org.hornetq.integration.twitter.TwitterConstants"/>
		<reference type="java.lang.Object"/>
		<reference type="java.util.concurrent.ScheduledExecutorService"/>
		<reference type="org.hornetq.core.server.ConnectorServiceFactory"/>
		<reference type="org.hornetq.core.persistence.StorageManager"/>
		<reference type="org.hornetq.core.server.ConnectorService"/>
		<reference type="org.hornetq.core.postoffice.PostOffice"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.remoting.impl.netty.NettyAcceptor" internal="true" project="trunk" package="org.hornetq.core.remoting.impl.netty">
		<reference type="org.jboss.netty.channel.local.DefaultLocalServerChannelFactory"/>
		<reference type="org.hornetq.core.remoting.impl.netty.HttpKeepAliveRunnable"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="org.jboss.netty.util.VirtualExecutorService"/>
		<reference type="org.jboss.netty.channel.group.DefaultChannelGroup"/>
		<reference type="org.jboss.netty.channel.ChannelPipeline"/>
		<reference type="org.jboss.netty.channel.Channel"/>
		<reference type="org.hornetq.core.remoting.impl.netty.HttpAcceptorHandler"/>
		<reference type="org.hornetq.core.remoting.impl.netty.HornetQFrameDecoder"/>
		<reference type="org.hornetq.core.remoting.impl.netty.NettyAcceptor$Listener"/>
		<reference type="java.util.concurrent.TimeUnit"/>
		<reference type="org.hornetq.core.remoting.impl.netty.TransportConstants"/>
		<reference type="org.hornetq.spi.core.protocol.ProtocolType"/>
		<reference type="org.jboss.netty.channel.group.ChannelGroup"/>
		<reference type="org.jboss.netty.channel.ChannelPipelineFactory"/>
		<reference type="org.jboss.netty.handler.ssl.SslHandler"/>
		<reference type="java.lang.String"/>
		<reference type="org.jboss.netty.channel.group.ChannelGroupFuture"/>
		<reference type="org.hornetq.utils.ConfigurationHelper"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.core.remoting.impl.ssl.SSLSupport"/>
		<reference type="org.hornetq.spi.core.remoting.BufferDecoder"/>
		<reference type="org.hornetq.spi.core.remoting.ConnectionLifeCycleListener"/>
		<reference type="org.hornetq.core.remoting.impl.netty.HornetQFrameDecoder2"/>
		<reference type="org.hornetq.spi.core.remoting.Acceptor"/>
		<reference type="org.jboss.netty.util.Version"/>
		<reference type="org.hornetq.core.remoting.impl.netty.NettyAcceptor$BatchFlusher"/>
		<reference type="org.jboss.netty.channel.ChannelFactory"/>
		<reference type="java.lang.InterruptedException"/>
		<reference type="org.jboss.netty.channel.socket.nio.NioServerSocketChannelFactory"/>
		<reference type="org.hornetq.api.core.management.NotificationType"/>
		<reference type="java.lang.Runtime"/>
		<reference type="org.hornetq.core.remoting.impl.netty.NettyAcceptor$HornetQServerChannelHandler"/>
		<reference type="org.hornetq.core.remoting.impl.netty.NettyAcceptorFactory"/>
		<reference type="org.hornetq.core.server.management.Notification"/>
		<reference type="java.util.concurrent.Executor"/>
		<reference type="org.jboss.netty.handler.codec.http.HttpResponseEncoder"/>
		<reference type="org.jboss.netty.channel.StaticChannelPipeline"/>
		<reference type="org.hornetq.core.server.management.NotificationService"/>
		<reference type="org.jboss.netty.channel.DefaultChannelPipeline"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.TransportConfiguration"/>
		<reference type="org.jboss.netty.handler.codec.http.HttpRequestDecoder"/>
		<reference type="org.hornetq.utils.TypedProperties"/>
		<reference type="java.net.InetSocketAddress"/>
		<reference type="org.hornetq.spi.core.remoting.BufferHandler"/>
		<reference type="java.net.SocketAddress"/>
		<reference type="org.jboss.netty.channel.socket.oio.OioServerSocketChannelFactory"/>
		<reference type="org.jboss.netty.handler.codec.http.HttpChunkAggregator"/>
		<reference type="javax.net.ssl.SSLContext"/>
		<reference type="org.jboss.netty.channel.local.LocalAddress"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.util.concurrent.ScheduledExecutorService"/>
		<reference type="org.jboss.netty.bootstrap.ServerBootstrap"/>
		<reference type="org.jboss.netty.channel.ChannelHandler"/>
		<reference type="org.hornetq.core.protocol.stomp.WebSocketServerHandler"/>
		<reference type="org.hornetq.utils.VersionLoader"/>
		<reference type="javax.net.ssl.SSLEngine"/>
		<reference type="org.hornetq.spi.core.remoting.Connection"/>
	</type>
	<type name="java.util.Enumeration" internal="false" project="rt.jar" package="java.util">
	</type>
	<type name="org.hornetq.core.persistence.QueueBindingInfo" internal="true" project="trunk" package="org.hornetq.core.persistence">
		<reference type="org.hornetq.api.core.SimpleString"/>
	</type>
	<type name="java.lang.Runnable" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.hornetq.core.postoffice.impl.LocalQueueBinding" internal="true" project="trunk" package="org.hornetq.core.postoffice.impl">
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.core.postoffice.BindingType"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.Bindable"/>
		<reference type="org.hornetq.core.server.Queue"/>
		<reference type="org.hornetq.core.server.RoutingContext"/>
		<reference type="java.lang.Override"/>
		<reference type="org.hornetq.core.filter.Filter"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.core.postoffice.QueueBinding"/>
	</type>
	<type name="javax.jms.MessageListener" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.core.replication.impl.ReplicationManagerImpl$NullEncoding" internal="true" project="trunk" package="org.hornetq.core.replication.impl">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.journal.EncodingSupport"/>
	</type>
	<type name="org.hornetq.core.server.Bindable" internal="true" project="trunk" package="org.hornetq.core.server">
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.RoutingContext"/>
	</type>
	<type name="org.hornetq.core.config.DiscoveryGroupConfiguration" internal="true" project="trunk" package="org.hornetq.core.config">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.io.Serializable"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.spi.core.remoting.ConnectorFactory" internal="true" project="trunk" package="org.hornetq.spi.core.remoting">
		<reference type="java.lang.Object"/>
		<reference type="java.util.concurrent.ScheduledExecutorService"/>
		<reference type="org.hornetq.spi.core.remoting.BufferHandler"/>
		<reference type="org.hornetq.spi.core.remoting.Connector"/>
		<reference type="java.util.concurrent.Executor"/>
		<reference type="org.hornetq.spi.core.remoting.ConnectionLifeCycleListener"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.filter.impl.RegExp" internal="true" project="trunk" package="org.hornetq.core.filter.impl">
		<reference type="java.lang.Object"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.lang.Character"/>
		<reference type="java.lang.StringBuffer"/>
		<reference type="java.util.regex.Pattern"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.journal.impl.JournalCompactor$CommitCompactCommand" internal="true" project="trunk" package="org.hornetq.core.journal.impl">
		<reference type="org.hornetq.core.journal.impl.JournalCompactor$CompactCommand"/>
		<reference type="org.hornetq.core.journal.impl.JournalFile"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.journal.impl.JournalTransaction"/>
		<reference type="java.lang.Override"/>
		<reference type="org.hornetq.core.journal.impl.JournalCompactor"/>
	</type>
	<type name="org.hornetq.core.protocol.core.Packet" internal="true" project="trunk" package="org.hornetq.core.protocol.core">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.spi.core.protocol.RemotingConnection"/>
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.SessionIndividualAcknowledgeMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="org.hornetq.core.persistence.impl.journal.JournalStorageManager$PersistentIDEncoding" internal="true" project="trunk" package="org.hornetq.core.persistence.impl.journal">
		<reference type="org.hornetq.utils.UUID"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.journal.EncodingSupport"/>
	</type>
	<type name="org.hornetq.core.journal.impl.dataformat.JournalDeleteRecordTX" internal="true" project="trunk" package="org.hornetq.core.journal.impl.dataformat">
		<reference type="org.hornetq.core.journal.impl.JournalImpl"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.journal.impl.dataformat.JournalInternalRecord"/>
		<reference type="org.hornetq.core.journal.EncodingSupport"/>
		<reference type="java.lang.Override"/>
	</type>
	<type name="org.hornetq.jms.client.HornetQQueueBrowser" internal="true" project="trunk" package="org.hornetq.jms.client">
	</type>
	<type name="org.hornetq.core.message.impl.MessageImpl" internal="true" project="trunk" package="org.hornetq.core.message.impl">
		<reference type="java.lang.Short"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Long"/>
		<reference type="java.lang.Integer"/>
		<reference type="org.hornetq.utils.DataConstants"/>
		<reference type="org.hornetq.utils.TypedProperties"/>
		<reference type="java.lang.Double"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="java.lang.Byte"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.utils.UUID"/>
		<reference type="org.hornetq.api.core.HornetQBuffers"/>
		<reference type="org.hornetq.core.message.BodyEncoder"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.buffers.impl.ResetLimitWrappedHornetQBuffer"/>
		<reference type="org.hornetq.core.message.impl.MessageImpl$DecodingContext"/>
		<reference type="java.lang.Boolean"/>
		<reference type="org.hornetq.api.core.PropertyConversionException"/>
		<reference type="org.hornetq.core.protocol.core.impl.PacketImpl"/>
		<reference type="org.hornetq.core.client.impl.LargeMessageBufferInternal"/>
		<reference type="java.lang.System"/>
		<reference type="java.lang.Float"/>
		<reference type="org.hornetq.core.message.impl.MessageInternal"/>
	</type>
	<type name="org.hornetq.core.journal.impl.dataformat.JournalRollbackRecordTX" internal="true" project="trunk" package="org.hornetq.core.journal.impl.dataformat">
		<reference type="org.hornetq.core.journal.impl.JournalImpl"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.journal.impl.dataformat.JournalInternalRecord"/>
		<reference type="java.lang.Override"/>
	</type>
	<type name="org.hornetq.utils.concurrent.LinkedBlockingDeque$Itr" internal="true" project="trunk" package="org.hornetq.utils.concurrent">
		<reference type="org.hornetq.utils.concurrent.LinkedBlockingDeque"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="java.util.concurrent.locks.ReentrantLock"/>
		<reference type="java.util.NoSuchElementException"/>
	</type>
	<type name="org.hornetq.ra.inflow.HornetQMessageHandler" internal="true" project="trunk" package="org.hornetq.ra.inflow">
		<reference type="org.hornetq.api.core.client.ClientConsumer"/>
		<reference type="javax.jms.MessageListener"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.util.UUID"/>
		<reference type="javax.transaction.TransactionManager"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.client.ClientSession"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.jms.client.HornetQMessage"/>
		<reference type="javax.resource.ResourceException"/>
		<reference type="org.hornetq.ra.inflow.HornetQActivation"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.api.core.client.ClientSession$QueueQuery"/>
		<reference type="javax.jms.IllegalStateException"/>
		<reference type="javax.resource.spi.endpoint.MessageEndpoint"/>
		<reference type="org.hornetq.jms.client.HornetQDestination"/>
		<reference type="org.hornetq.ra.inflow.HornetQActivationSpec"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.Throwable"/>
		<reference type="javax.jms.InvalidClientIDException"/>
		<reference type="org.hornetq.api.core.client.MessageHandler"/>
		<reference type="org.hornetq.api.core.client.ClientMessage"/>
		<reference type="javax.resource.spi.endpoint.MessageEndpointFactory"/>
	</type>
	<type name="org.hornetq.core.client.impl.ClientMessageImpl" internal="true" project="trunk" package="org.hornetq.core.client.impl">
		<reference type="org.hornetq.core.message.impl.MessageImpl"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="org.hornetq.core.client.impl.ClientMessageInternal"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.core.client.impl.ClientConsumerInternal"/>
		<reference type="org.hornetq.core.client.impl.ClientMessageImpl$DecodingContext"/>
		<reference type="org.hornetq.core.message.BodyEncoder"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.client.impl.LargeMessageBufferInternal"/>
		<reference type="java.io.InputStream"/>
		<reference type="java.io.IOException"/>
		<reference type="java.lang.Override"/>
		<reference type="java.io.OutputStream"/>
	</type>
	<type name="org.hornetq.core.persistence.impl.journal.JournalStorageManager$DuplicateIDEncoding" internal="true" project="trunk" package="org.hornetq.core.persistence.impl.journal">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.utils.DataConstants"/>
		<reference type="org.hornetq.core.journal.EncodingSupport"/>
	</type>
	<type name="java.io.FileOutputStream" internal="false" project="rt.jar" package="java.io">
	</type>
	<type name="org.hornetq.utils.SecurityFormatter" internal="true" project="trunk" package="org.hornetq.utils">
		<reference type="org.hornetq.core.security.Role"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.persistence.impl.journal.JournalStorageManager$XidEncoding" internal="true" project="trunk" package="org.hornetq.core.persistence.impl.journal">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.api.core.HornetQBuffers"/>
		<reference type="org.hornetq.utils.XidCodecSupport"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="org.hornetq.core.journal.EncodingSupport"/>
		<reference type="javax.transaction.xa.Xid"/>
	</type>
	<type name="java.util.concurrent.Semaphore" internal="false" project="rt.jar" package="java.util.concurrent">
	</type>
	<type name="org.jboss.netty.handler.codec.http.HttpVersion" internal="false" project="netty.jar" package="org.jboss.netty.handler.codec.http">
	</type>
	<type name="org.hornetq.core.journal.impl.JournalTransaction" internal="true" project="trunk" package="org.hornetq.core.journal.impl">
		<reference type="org.hornetq.core.journal.impl.dataformat.JournalInternalRecord"/>
		<reference type="java.util.concurrent.atomic.AtomicInteger"/>
		<reference type="org.hornetq.core.journal.impl.JournalFile"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.journal.impl.TransactionCallback"/>
		<reference type="org.hornetq.core.journal.impl.JournalRecordProvider"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.core.journal.impl.JournalRecord"/>
		<reference type="org.hornetq.core.journal.impl.JournalTransaction$JournalUpdate"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.core.journal.impl.JournalCompactor"/>
	</type>
	<type name="org.hornetq.ra.HornetQRAConnectionMetaData" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Object"/>
		<reference type="javax.jms.ConnectionMetaData"/>
		<reference type="java.util.Vector"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.ReplicationResponseMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="org.hornetq.jms.server.recovery.HornetQXAResourceWrapper" internal="true" project="trunk" package="org.hornetq.jms.server.recovery">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.client.ClientSession"/>
		<reference type="org.hornetq.api.core.TransportConfiguration"/>
		<reference type="javax.transaction.xa.XAResource"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.api.core.client.SessionFailureListener"/>
		<reference type="org.hornetq.api.core.client.ClientSessionFactory"/>
		<reference type="java.lang.Object"/>
		<reference type="java.lang.Throwable"/>
		<reference type="javax.transaction.xa.XAException"/>
		<reference type="java.lang.Override"/>
		<reference type="javax.transaction.xa.Xid"/>
		<reference type="org.hornetq.api.core.client.HornetQClient"/>
	</type>
	<type name="org.hornetq.core.config.impl.Validators" internal="true" project="trunk" package="org.hornetq.core.config.impl">
	</type>
	<type name="java.lang.ClassNotFoundException" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.hornetq.spi.core.remoting.ConnectionLifeCycleListener" internal="true" project="trunk" package="org.hornetq.spi.core.remoting">
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.spi.core.protocol.ProtocolType"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.spi.core.remoting.Connection"/>
	</type>
	<type name="org.hornetq.core.server.impl.ServerSessionImpl$TempQueueCleanerUpper" internal="true" project="trunk" package="org.hornetq.core.server.impl">
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.core.remoting.FailureListener"/>
		<reference type="org.hornetq.core.server.impl.ServerSessionImpl"/>
		<reference type="org.hornetq.core.remoting.CloseListener"/>
		<reference type="org.hornetq.core.postoffice.PostOffice"/>
	</type>
	<type name="org.hornetq.core.deployers.impl.FileConfigurationParser" internal="true" project="trunk" package="org.hornetq.core.deployers.impl">
		<reference type="org.hornetq.core.config.BridgeConfiguration"/>
		<reference type="org.hornetq.core.config.impl.Validators"/>
		<reference type="java.lang.Integer"/>
		<reference type="java.lang.Long"/>
		<reference type="java.io.Reader"/>
		<reference type="org.hornetq.core.config.DivertConfiguration"/>
		<reference type="org.hornetq.core.config.BroadcastGroupConfiguration"/>
		<reference type="org.hornetq.core.settings.impl.AddressSettings"/>
		<reference type="org.hornetq.core.config.CoreQueueConfiguration"/>
		<reference type="org.hornetq.core.journal.impl.AIOSequentialFileFactory"/>
		<reference type="org.hornetq.utils.XMLUtil"/>
		<reference type="org.hornetq.core.config.impl.ConfigurationImpl"/>
		<reference type="java.io.InputStream"/>
		<reference type="org.hornetq.core.config.impl.FileConfiguration"/>
		<reference type="org.hornetq.core.security.Role"/>
		<reference type="org.hornetq.api.core.client.HornetQClient"/>
		<reference type="org.hornetq.utils.XMLConfigurationUtil"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.w3c.dom.NamedNodeMap"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.w3c.dom.NodeList"/>
		<reference type="org.hornetq.api.core.TransportConfiguration"/>
		<reference type="org.hornetq.core.server.group.impl.GroupingHandlerConfiguration$TYPE"/>
		<reference type="org.hornetq.core.settings.impl.AddressFullMessagePolicy"/>
		<reference type="java.lang.String"/>
		<reference type="org.w3c.dom.Element"/>
		<reference type="org.w3c.dom.Node"/>
		<reference type="org.hornetq.core.config.Configuration"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.config.ClusterConnectionConfiguration"/>
		<reference type="java.lang.Boolean"/>
		<reference type="org.hornetq.core.server.group.impl.GroupingHandlerConfiguration"/>
		<reference type="java.io.InputStreamReader"/>
		<reference type="org.hornetq.core.config.DiscoveryGroupConfiguration"/>
		<reference type="org.hornetq.core.config.ConnectorServiceConfiguration"/>
		<reference type="org.hornetq.core.server.JournalType"/>
	</type>
	<type name="org.hornetq.integration.bootstrap.HornetQBootstrapServer$Shutdown" internal="true" project="trunk" package="org.hornetq.integration.bootstrap">
		<reference type="java.lang.Override"/>
		<reference type="java.lang.Thread"/>
	</type>
	<type name="org.hornetq.core.asyncio.BufferCallback" internal="true" project="trunk" package="org.hornetq.core.asyncio">
		<reference type="java.nio.ByteBuffer"/>
	</type>
	<type name="org.hornetq.core.server.cluster.MessageFlowRecord" internal="true" project="trunk" package="org.hornetq.core.server.cluster">
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.client.MessageHandler"/>
		<reference type="org.hornetq.core.server.cluster.Bridge"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.utils.XMLConfigurationUtil" internal="true" project="trunk" package="org.hornetq.utils">
		<reference type="org.w3c.dom.Element"/>
		<reference type="org.hornetq.utils.XMLUtil"/>
		<reference type="java.lang.Boolean"/>
		<reference type="java.lang.Integer"/>
		<reference type="java.lang.Long"/>
		<reference type="org.hornetq.core.config.impl.Validators$Validator"/>
		<reference type="org.w3c.dom.NodeList"/>
		<reference type="java.lang.Double"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.asyncio.AIOCallback" internal="true" project="trunk" package="org.hornetq.core.asyncio">
		<reference type="java.lang.String"/>
	</type>
	<type name="twitter4j.Place" internal="false" project="twitter4j-core.jar" package="twitter4j">
	</type>
	<type name="org.hornetq.core.client.impl.ClientProducerInternal" internal="true" project="trunk" package="org.hornetq.core.client.impl">
		<reference type="org.hornetq.core.client.impl.ClientProducerCredits"/>
		<reference type="org.hornetq.api.core.client.ClientProducer"/>
	</type>
	<type name="org.hornetq.core.journal.impl.JournalImpl$MyIOAsyncTask" internal="true" project="trunk" package="org.hornetq.core.journal.impl">
		<reference type="org.hornetq.core.journal.IOCompletion"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.server.management.impl.ManagementServiceImpl" internal="true" project="trunk" package="org.hornetq.core.server.management.impl">
		<reference type="org.hornetq.core.paging.PagingManager"/>
		<reference type="org.hornetq.core.config.BridgeConfiguration"/>
		<reference type="org.hornetq.core.transaction.ResourceManager"/>
		<reference type="javax.management.ObjectName"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="org.hornetq.core.server.management.NotificationListener"/>
		<reference type="org.hornetq.core.messagecounter.MessageCounter"/>
		<reference type="org.hornetq.core.management.impl.DivertControlImpl"/>
		<reference type="org.hornetq.core.management.impl.DiscoveryGroupControlImpl"/>
		<reference type="org.hornetq.core.persistence.StorageManager"/>
		<reference type="org.hornetq.core.management.impl.AcceptorControlImpl"/>
		<reference type="java.lang.reflect.InvocationTargetException"/>
		<reference type="org.hornetq.core.security.Role"/>
		<reference type="org.hornetq.api.core.management.DiscoveryGroupControl"/>
		<reference type="org.hornetq.core.remoting.server.RemotingService"/>
		<reference type="org.hornetq.api.core.management.BroadcastGroupControl"/>
		<reference type="org.hornetq.api.core.management.DivertControl"/>
		<reference type="java.lang.reflect.Method"/>
		<reference type="org.hornetq.core.management.impl.BroadcastGroupControlImpl"/>
		<reference type="java.lang.NoSuchMethodException"/>
		<reference type="org.hornetq.core.messagecounter.impl.MessageCounterManagerImpl"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.core.config.Configuration"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.core.management.impl.BridgeControlImpl"/>
		<reference type="org.hornetq.core.config.ClusterConnectionConfiguration"/>
		<reference type="javax.management.NotificationBroadcasterSupport"/>
		<reference type="org.hornetq.core.server.management.ManagementService"/>
		<reference type="org.hornetq.core.server.Queue"/>
		<reference type="org.hornetq.spi.core.remoting.Acceptor"/>
		<reference type="org.hornetq.core.config.DiscoveryGroupConfiguration"/>
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="org.hornetq.core.server.cluster.BroadcastGroup"/>
		<reference type="org.hornetq.api.core.management.ObjectNameBuilder"/>
		<reference type="java.lang.Integer"/>
		<reference type="java.lang.Long"/>
		<reference type="org.hornetq.core.server.Divert"/>
		<reference type="java.lang.Double"/>
		<reference type="org.hornetq.core.config.DivertConfiguration"/>
		<reference type="org.hornetq.core.config.BroadcastGroupConfiguration"/>
		<reference type="org.hornetq.core.server.management.Notification"/>
		<reference type="org.hornetq.core.settings.impl.AddressSettings"/>
		<reference type="org.hornetq.core.management.impl.QueueControlImpl"/>
		<reference type="javax.management.MBeanServer"/>
		<reference type="org.hornetq.core.management.impl.AddressControlImpl"/>
		<reference type="java.lang.Class"/>
		<reference type="org.hornetq.core.cluster.DiscoveryGroup"/>
		<reference type="org.hornetq.core.server.cluster.ClusterConnection"/>
		<reference type="org.hornetq.core.server.cluster.Bridge"/>
		<reference type="org.hornetq.core.management.impl.ClusterConnectionControlImpl"/>
		<reference type="org.hornetq.api.core.management.AcceptorControl"/>
		<reference type="org.hornetq.core.messagecounter.MessageCounterManager"/>
		<reference type="org.hornetq.core.postoffice.PostOffice"/>
		<reference type="org.hornetq.core.server.HornetQServer"/>
		<reference type="org.hornetq.api.core.management.BridgeControl"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.core.server.QueueFactory"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.TransportConfiguration"/>
		<reference type="org.hornetq.utils.TypedProperties"/>
		<reference type="org.hornetq.core.server.impl.ServerMessageImpl"/>
		<reference type="org.hornetq.core.management.impl.HornetQServerControlImpl"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.Boolean"/>
		<reference type="java.lang.Throwable"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="java.lang.System"/>
		<reference type="java.util.concurrent.ScheduledExecutorService"/>
		<reference type="org.hornetq.api.core.management.ResourceNames"/>
		<reference type="org.hornetq.api.core.management.ManagementHelper"/>
		<reference type="javax.management.StandardMBean"/>
		<reference type="org.hornetq.api.core.management.ClusterConnectionControl"/>
	</type>
	<type name="org.hornetq.core.journal.impl.SyncSpeedTest$MyIOAsyncTask" internal="true" project="trunk" package="org.hornetq.core.journal.impl">
		<reference type="org.hornetq.core.journal.IOAsyncTask"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.journal.impl.dataformat.JournalInternalRecord" internal="true" project="trunk" package="org.hornetq.core.journal.impl.dataformat">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.journal.EncodingSupport"/>
	</type>
	<type name="org.hornetq.core.replication.impl.ReplicationEndpointImpl" internal="true" project="trunk" package="org.hornetq.core.replication.impl">
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="org.hornetq.core.paging.PagingManager"/>
		<reference type="java.lang.Integer"/>
		<reference type="java.lang.Long"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.ReplicationPrepareMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.ReplicationAddTXMessage"/>
		<reference type="org.hornetq.core.paging.PagedMessage"/>
		<reference type="org.hornetq.core.journal.JournalLoadInformation"/>
		<reference type="org.hornetq.core.protocol.core.Channel"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.ReplicationCommitMessage"/>
		<reference type="org.hornetq.core.persistence.impl.journal.JournalStorageManager"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.ReplicationResponseMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.ReplicationLargemessageEndMessage"/>
		<reference type="org.hornetq.core.replication.ReplicationEndpoint"/>
		<reference type="org.hornetq.core.protocol.core.impl.PacketImpl"/>
		<reference type="org.hornetq.core.server.LargeServerMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.ReplicationCompareDataMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.ReplicationLargeMessageBeingMessage"/>
		<reference type="org.hornetq.core.protocol.core.Packet"/>
		<reference type="org.hornetq.core.server.HornetQServer"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.ReplicationPageEventMessage"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.ReplicationLargeMessageWriteMessage"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.NullResponseMessage"/>
		<reference type="org.hornetq.core.journal.Journal"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.ReplicationAddMessage"/>
		<reference type="org.hornetq.core.paging.Page"/>
		<reference type="org.hornetq.core.paging.impl.PagingManagerImpl"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.core.config.Configuration"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.paging.impl.PagingStoreFactoryNIO"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.ReplicationDeleteMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.ReplicationPageWriteMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.ReplicationDeleteTXMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.HornetQExceptionMessage"/>
	</type>
	<type name="org.hornetq.api.core.management.DivertControl" internal="true" project="trunk" package="org.hornetq.api.core.management">
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.spi.core.logging.LogDelegate" internal="true" project="trunk" package="org.hornetq.spi.core.logging">
		<reference type="java.lang.Object"/>
		<reference type="java.lang.Throwable"/>
	</type>
	<type name="org.hornetq.utils.BufferHelper" internal="true" project="trunk" package="org.hornetq.utils">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.Integer"/>
		<reference type="java.lang.Long"/>
		<reference type="java.lang.Boolean"/>
		<reference type="org.hornetq.utils.DataConstants"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.jboss.netty.channel.MessageEvent" internal="false" project="netty.jar" package="org.jboss.netty.channel">
	</type>
	<type name="org.hornetq.spi.core.remoting.BufferHandler" internal="true" project="trunk" package="org.hornetq.spi.core.remoting">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="java.lang.Object"/>
	</type>
	<type name="org.hornetq.core.persistence.impl.journal.OperationContextImpl$TaskHolder" internal="true" project="trunk" package="org.hornetq.core.persistence.impl.journal">
		<reference type="org.hornetq.core.journal.IOAsyncTask"/>
		<reference type="org.hornetq.core.persistence.impl.journal.OperationContextImpl"/>
	</type>
	<type name="org.hornetq.api.core.client.HornetQClient" internal="true" project="trunk" package="org.hornetq.api.core.client">
		<reference type="org.hornetq.api.core.client.ClientSessionFactory"/>
		<reference type="org.hornetq.api.core.TransportConfiguration"/>
		<reference type="org.hornetq.core.client.impl.ClientSessionFactoryImpl"/>
		<reference type="org.hornetq.api.core.client.loadbalance.RoundRobinConnectionLoadBalancingPolicy"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.ReplicationLargeMessageBeingMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.SessionXAResumeMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="org.hornetq.core.protocol.stomp.StompProtocolManagerFactory" internal="true" project="trunk" package="org.hornetq.core.protocol.stomp">
		<reference type="org.hornetq.api.core.Interceptor"/>
		<reference type="org.hornetq.spi.core.protocol.ProtocolManager"/>
		<reference type="org.hornetq.spi.core.protocol.ProtocolManagerFactory"/>
		<reference type="org.hornetq.core.protocol.stomp.StompProtocolManager"/>
		<reference type="org.hornetq.core.server.HornetQServer"/>
	</type>
	<type name="org.hornetq.core.remoting.server.impl.RemotingServiceImpl$DelegatingBufferHandler" internal="true" project="trunk" package="org.hornetq.core.remoting.server.impl">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.spi.core.protocol.ConnectionEntry"/>
		<reference type="org.hornetq.core.remoting.server.impl.RemotingServiceImpl"/>
		<reference type="org.hornetq.spi.core.remoting.BufferHandler"/>
		<reference type="org.hornetq.spi.core.protocol.ProtocolManager"/>
	</type>
	<type name="org.jboss.netty.channel.ChannelFactory" internal="false" project="netty.jar" package="org.jboss.netty.channel">
	</type>
	<type name="java.lang.Byte" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="java.util.NoSuchElementException" internal="false" project="rt.jar" package="java.util">
	</type>
	<type name="org.hornetq.core.paging.impl.PageTransactionInfoImpl" internal="true" project="trunk" package="org.hornetq.core.paging.impl">
		<reference type="java.lang.InterruptedException"/>
		<reference type="org.hornetq.core.paging.PageTransactionInfo"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="java.util.concurrent.CountDownLatch"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="java.util.concurrent.atomic.AtomicInteger"/>
		<reference type="org.hornetq.utils.DataConstants"/>
		<reference type="java.util.concurrent.TimeUnit"/>
	</type>
	<type name="org.hornetq.core.protocol.core.impl.PacketDecoder" internal="true" project="trunk" package="org.hornetq.core.protocol.core.impl">
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionXAGetTimeoutResponseMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.ReplicationPrepareMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.RollbackMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.ReattachSessionResponseMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.ReplicationCommitMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionExpireMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.CreateReplicationSessionMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionXAStartMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionReceiveLargeMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionCloseMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.ReplicationLargemessageEndMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.PacketsConfirmedMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.ReplicationCompareDataMessage"/>
		<reference type="org.hornetq.core.protocol.core.Packet"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionXAGetInDoubtXidsResponseMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionConsumerFlowCreditMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionXARollbackMessage"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.ReplicationLargeMessageWriteMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionXAEndMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionXAPrepareMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.ReplicationAddMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionXASetTimeoutResponseMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionReceiveContinuationMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionForceConsumerDelivery"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.ReplicationPageWriteMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionXAJoinMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.ReplicationDeleteTXMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionBindingQueryResponseMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.HornetQExceptionMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionQueueQueryMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionXAResponseMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionDeleteQueueMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionReceiveMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.ReplicationAddTXMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionXAForgetMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionProducerCreditsMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionIndividualAcknowledgeMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.CreateSessionMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionXAResumeMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionRequestProducerCreditsMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.CreateQueueMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.ReplicationResponseMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.PacketImpl"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.ReattachSessionMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionXACommitMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionBindingQueryMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.ReplicationLargeMessageBeingMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.ReplicationPageEventMessage"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionCommitMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.CreateSessionResponseMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionSendMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionXASetTimeoutMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionConsumerCloseMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionSendContinuationMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionAcknowledgeMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.NullResponseMessage"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionSendLargeMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.ReplicationDeleteMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.Ping"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionCreateConsumerMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionQueueQueryResponseMessage"/>
	</type>
	<type name="java.lang.Math" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.hornetq.jms.client.HornetQConnectionFactory" internal="true" project="trunk" package="org.hornetq.jms.client">
		<reference type="javax.jms.XATopicConnection"/>
		<reference type="javax.jms.TopicConnection"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="javax.jms.QueueConnection"/>
		<reference type="javax.jms.XAQueueConnection"/>
		<reference type="javax.jms.XAQueueConnectionFactory"/>
		<reference type="javax.jms.XATopicConnectionFactory"/>
		<reference type="javax.naming.Reference"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="javax.jms.XAConnection"/>
		<reference type="org.hornetq.api.core.client.HornetQClient"/>
		<reference type="org.hornetq.jms.referenceable.ConnectionFactoryObjectFactory"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="javax.jms.QueueConnectionFactory"/>
		<reference type="javax.naming.Referenceable"/>
		<reference type="java.io.Serializable"/>
		<reference type="javax.jms.ConnectionFactory"/>
		<reference type="org.hornetq.api.core.TransportConfiguration"/>
		<reference type="javax.jms.Connection"/>
		<reference type="org.hornetq.jms.referenceable.SerializableObjectRefAddr"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.api.core.client.ClientSessionFactory"/>
		<reference type="org.hornetq.jms.client.HornetQConnection"/>
		<reference type="javax.naming.NamingException"/>
		<reference type="javax.jms.XAConnectionFactory"/>
		<reference type="javax.jms.TopicConnectionFactory"/>
	</type>
	<type name="org.hornetq.api.core.management.AddressSettingsInfo" internal="true" project="trunk" package="org.hornetq.api.core.management">
		<reference type="org.hornetq.utils.json.JSONObject"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.jms.server.recovery.HornetQXAResourceRecovery" internal="true" project="trunk" package="org.hornetq.jms.server.recovery">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.jms.server.recovery.HornetQXAResourceWrapper"/>
		<reference type="javax.transaction.xa.XAResource"/>
		<reference type="com.arjuna.ats.jta.recovery.XAResourceRecovery"/>
		<reference type="org.hornetq.jms.server.recovery.HornetQXAResourceRecovery$ConfigParser"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.server.HornetQServers" internal="true" project="trunk" package="org.hornetq.core.server">
		<reference type="org.hornetq.core.server.impl.HornetQServerImpl"/>
		<reference type="javax.management.MBeanServer"/>
		<reference type="org.hornetq.core.config.Configuration"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.spi.core.security.HornetQSecurityManagerImpl"/>
		<reference type="org.hornetq.spi.core.security.HornetQSecurityManager"/>
		<reference type="java.lang.management.ManagementFactory"/>
		<reference type="org.hornetq.core.server.HornetQServer"/>
	</type>
	<type name="org.hornetq.core.transaction.impl.TransactionImpl" internal="true" project="trunk" package="org.hornetq.core.transaction.impl">
		<reference type="org.hornetq.core.transaction.TransactionOperation"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.persistence.StorageManager"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="java.lang.String"/>
		<reference type="java.lang.Object"/>
		<reference type="java.lang.System"/>
		<reference type="org.hornetq.core.journal.IOAsyncTask"/>
		<reference type="org.hornetq.core.transaction.Transaction"/>
		<reference type="javax.transaction.xa.Xid"/>
		<reference type="org.hornetq.core.transaction.Transaction$State"/>
	</type>
	<type name="org.hornetq.core.journal.impl.JournalFileImpl" internal="true" project="trunk" package="org.hornetq.core.journal.impl">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.core.journal.SequentialFile"/>
		<reference type="java.util.concurrent.atomic.AtomicInteger"/>
		<reference type="java.lang.Integer"/>
		<reference type="org.hornetq.core.journal.impl.JournalFile"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.lang.StringBuilder"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.management.impl.AbstractControl" internal="true" project="trunk" package="org.hornetq.core.management.impl">
		<reference type="javax.management.MBeanOperationInfo"/>
		<reference type="javax.management.MBeanInfo"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.persistence.StorageManager"/>
		<reference type="javax.management.StandardMBean"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.RuntimeException"/>
		<reference type="javax.management.NotCompliantMBeanException"/>
	</type>
	<type name="org.hornetq.api.core.management.QueueControl" internal="true" project="trunk" package="org.hornetq.api.core.management">
		<reference type="javax.management.MBeanOperationInfo"/>
		<reference type="java.lang.Object"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.management.Parameter"/>
		<reference type="org.hornetq.api.core.management.Operation"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="javax.transaction.Status" internal="false" project="jboss-transaction-api.jar" package="javax.transaction">
	</type>
	<type name="java.io.PrintStream" internal="false" project="rt.jar" package="java.io">
	</type>
	<type name="org.hornetq.core.server.cluster.impl.BridgeImpl$CreateObjectsRunnable" internal="true" project="trunk" package="org.hornetq.core.server.cluster.impl">
		<reference type="org.hornetq.core.server.cluster.impl.BridgeImpl"/>
		<reference type="java.lang.Runnable"/>
	</type>
	<type name="org.hornetq.core.asyncio.impl.AsynchronousFileImpl" internal="true" project="trunk" package="org.hornetq.core.asyncio.impl">
		<reference type="java.lang.InterruptedException"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="java.util.concurrent.locks.ReentrantLock"/>
		<reference type="java.util.concurrent.locks.ReentrantReadWriteLock"/>
		<reference type="java.util.concurrent.Executor"/>
		<reference type="org.hornetq.core.asyncio.BufferCallback"/>
		<reference type="java.nio.ByteBuffer"/>
		<reference type="org.hornetq.core.asyncio.impl.AsynchronousFileImpl$PollerRunnable"/>
		<reference type="org.hornetq.core.asyncio.AIOCallback"/>
		<reference type="java.lang.Override"/>
		<reference type="java.util.concurrent.TimeUnit"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.utils.ReusableLatch"/>
		<reference type="java.util.concurrent.atomic.AtomicInteger"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.asyncio.AsynchronousFile"/>
		<reference type="org.hornetq.core.asyncio.impl.AsynchronousFileImpl$ErrorCallback"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="java.util.concurrent.locks.Lock"/>
		<reference type="java.lang.Runnable"/>
		<reference type="java.lang.String"/>
		<reference type="java.lang.Object"/>
		<reference type="java.lang.Throwable"/>
		<reference type="java.lang.System"/>
		<reference type="org.hornetq.core.asyncio.impl.AsynchronousFileImpl$CallbackHolder"/>
		<reference type="java.util.concurrent.Semaphore"/>
		<reference type="java.util.concurrent.atomic.AtomicLong"/>
		<reference type="java.lang.RuntimeException"/>
		<reference type="java.lang.SuppressWarnings"/>
		<reference type="java.lang.NullPointerException"/>
	</type>
	<type name="org.hornetq.utils.SizeFormatterUtil" internal="true" project="trunk" package="org.hornetq.utils">
		<reference type="java.lang.Long"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.server.cluster.impl.ClusterConnectionImpl" internal="true" project="trunk" package="org.hornetq.core.server.cluster.impl">
		<reference type="org.hornetq.api.core.management.NotificationType"/>
		<reference type="org.hornetq.core.server.cluster.impl.BridgeImpl"/>
		<reference type="org.hornetq.core.server.management.Notification"/>
		<reference type="org.hornetq.core.server.cluster.MessageFlowRecord"/>
		<reference type="org.hornetq.core.server.cluster.impl.ClusterConnectionImpl$MessageFlowRecordImpl"/>
		<reference type="org.hornetq.core.cluster.DiscoveryGroup"/>
		<reference type="org.hornetq.utils.ExecutorFactory"/>
		<reference type="org.hornetq.core.server.cluster.ClusterConnection"/>
		<reference type="org.hornetq.core.server.cluster.Bridge"/>
		<reference type="org.hornetq.core.postoffice.PostOffice"/>
		<reference type="org.hornetq.core.server.HornetQServer"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.TransportConfiguration"/>
		<reference type="org.hornetq.utils.TypedProperties"/>
		<reference type="org.hornetq.core.cluster.DiscoveryListener"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.utils.UUID"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.postoffice.Binding"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="org.hornetq.core.cluster.DiscoveryEntry"/>
		<reference type="java.util.concurrent.ScheduledExecutorService"/>
		<reference type="org.hornetq.core.server.management.ManagementService"/>
		<reference type="org.hornetq.core.server.Queue"/>
	</type>
	<type name="org.hornetq.utils.concurrent.ConcurrentHQDeque" internal="true" project="trunk" package="org.hornetq.utils.concurrent">
		<reference type="org.hornetq.core.logging.Logger"/>
	</type>
	<type name="java.util.regex.Pattern" internal="false" project="rt.jar" package="java.util.regex">
	</type>
	<type name="org.hornetq.core.persistence.impl.journal.LargeServerMessageImpl" internal="true" project="trunk" package="org.hornetq.core.persistence.impl.journal">
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="org.hornetq.core.message.impl.MessageImpl"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.core.journal.SequentialFile"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="java.util.concurrent.atomic.AtomicInteger"/>
		<reference type="org.hornetq.utils.DataConstants"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.impl.ServerMessageImpl"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.core.persistence.impl.journal.JournalStorageManager"/>
		<reference type="org.hornetq.core.message.BodyEncoder"/>
		<reference type="java.lang.Throwable"/>
		<reference type="java.nio.ByteBuffer"/>
		<reference type="org.hornetq.core.server.LargeServerMessage"/>
		<reference type="java.lang.RuntimeException"/>
		<reference type="java.lang.Override"/>
		<reference type="org.hornetq.core.persistence.impl.journal.LargeServerMessageImpl$DecodingContext"/>
	</type>
	<type name="org.hornetq.core.replication.ReplicationManager" internal="true" project="trunk" package="org.hornetq.core.replication">
		<reference type="org.hornetq.core.persistence.OperationContext"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.HornetQComponent"/>
		<reference type="org.hornetq.core.journal.EncodingSupport"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.core.journal.JournalLoadInformation"/>
		<reference type="org.hornetq.core.paging.PagedMessage"/>
	</type>
	<type name="org.hornetq.core.message.impl.MessageInternal" internal="true" project="trunk" package="org.hornetq.core.message.impl">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.message.BodyEncoder"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.api.core.Message"/>
		<reference type="java.io.InputStream"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
	</type>
	<type name="javax.naming.Name" internal="false" project="rt.jar" package="javax.naming">
	</type>
	<type name="org.jboss.netty.buffer.DynamicChannelBuffer" internal="false" project="netty.jar" package="org.jboss.netty.buffer">
	</type>
	<type name="java.io.ByteArrayInputStream" internal="false" project="rt.jar" package="java.io">
	</type>
	<type name="org.hornetq.jms.bridge.impl.JMSBridgeControlImpl" internal="true" project="trunk" package="org.hornetq.jms.bridge.impl">
		<reference type="org.hornetq.jms.bridge.JMSBridge"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.jms.bridge.JMSBridgeControl"/>
		<reference type="javax.management.StandardMBean"/>
		<reference type="org.hornetq.jms.bridge.QualityOfServiceMode"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.remoting.impl.netty.NettyConnector$HttpHandler$HttpIdleTimer" internal="true" project="trunk" package="org.hornetq.core.remoting.impl.netty">
		<reference type="org.jboss.netty.handler.codec.http.HttpRequest"/>
		<reference type="org.hornetq.core.remoting.impl.netty.NettyConnector$HttpHandler"/>
		<reference type="java.lang.System"/>
		<reference type="org.jboss.netty.handler.codec.http.HttpMethod"/>
		<reference type="org.hornetq.core.remoting.impl.netty.NettyConnector"/>
		<reference type="org.jboss.netty.handler.codec.http.HttpVersion"/>
		<reference type="java.lang.Runnable"/>
		<reference type="org.jboss.netty.handler.codec.http.DefaultHttpRequest"/>
	</type>
	<type name="org.hornetq.utils.json.JSONObject" internal="true" project="trunk" package="org.hornetq.utils.json">
	</type>
	<type name="org.hornetq.api.core.HornetQBuffer" internal="true" project="trunk" package="org.hornetq.api.core">
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.jboss.netty.buffer.ChannelBuffer"/>
		<reference type="java.nio.ByteBuffer"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.client.impl.LargeMessageBufferImpl$FileCache" internal="true" project="trunk" package="org.hornetq.core.client.impl">
		<reference type="java.io.FileNotFoundException"/>
		<reference type="java.io.RandomAccessFile"/>
		<reference type="org.hornetq.core.client.impl.LargeMessageBufferImpl"/>
		<reference type="java.lang.Integer"/>
		<reference type="java.nio.ByteBuffer"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.lang.ArrayIndexOutOfBoundsException"/>
		<reference type="java.nio.channels.FileChannel"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.RuntimeException"/>
		<reference type="java.io.File"/>
	</type>
	<type name="org.hornetq.core.filter.impl.Identifier" internal="true" project="trunk" package="org.hornetq.core.filter.impl">
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="java.net.SocketAddress" internal="false" project="rt.jar" package="java.net">
	</type>
	<type name="org.hornetq.core.server.cluster.ClusterManager" internal="true" project="trunk" package="org.hornetq.core.server.cluster">
		<reference type="org.hornetq.core.server.cluster.BroadcastGroup"/>
		<reference type="org.hornetq.core.config.BridgeConfiguration"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.HornetQComponent"/>
		<reference type="org.hornetq.core.server.cluster.ClusterConnection"/>
		<reference type="org.hornetq.core.server.cluster.Bridge"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.SessionReceiveMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="org.hornetq.utils.PriorityLinkedList" internal="true" project="trunk" package="org.hornetq.utils">
	</type>
	<type name="org.hornetq.utils.json.JSONObject$Null" internal="true" project="trunk" package="org.hornetq.utils.json">
		<reference type="java.lang.Object"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="java.lang.RuntimeException" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.hornetq.integration.logging.Log4jLogDelegateFactory" internal="true" project="trunk" package="org.hornetq.integration.logging">
		<reference type="org.hornetq.integration.logging.Log4jLogDelegate"/>
		<reference type="org.hornetq.spi.core.logging.LogDelegateFactory"/>
		<reference type="org.hornetq.spi.core.logging.LogDelegate"/>
	</type>
	<type name="org.hornetq.spi.core.remoting.Connector" internal="true" project="trunk" package="org.hornetq.spi.core.remoting">
		<reference type="org.hornetq.spi.core.remoting.Connection"/>
	</type>
	<type name="org.hornetq.core.journal.SequentialFile" internal="true" project="trunk" package="org.hornetq.core.journal">
		<reference type="org.hornetq.core.journal.impl.TimedBuffer"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="java.nio.ByteBuffer"/>
		<reference type="org.hornetq.core.journal.IOAsyncTask"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.journal.EncodingSupport"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="javax.jms.ObjectMessage" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="java.text.SimpleDateFormat" internal="false" project="rt.jar" package="java.text">
	</type>
	<type name="javax.jms.TopicConnection" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="javax.jms.MapMessage" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.core.journal.impl.JournalImpl$NullEncoding" internal="true" project="trunk" package="org.hornetq.core.journal.impl">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.journal.EncodingSupport"/>
	</type>
	<type name="org.hornetq.jms.client.HornetQSession" internal="true" project="trunk" package="org.hornetq.jms.client">
		<reference type="javax.jms.MessageListener"/>
		<reference type="javax.jms.TopicPublisher"/>
		<reference type="org.hornetq.api.core.client.ClientSession$BindingQuery"/>
		<reference type="org.hornetq.jms.client.HornetQQueue"/>
		<reference type="javax.jms.IllegalStateException"/>
		<reference type="org.hornetq.jms.client.HornetQDestination"/>
		<reference type="javax.jms.XATopicSession"/>
		<reference type="javax.jms.Session"/>
		<reference type="javax.jms.QueueSender"/>
		<reference type="org.hornetq.core.filter.impl.FilterImpl"/>
		<reference type="javax.jms.StreamMessage"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="java.lang.Override"/>
		<reference type="org.hornetq.jms.client.HornetQStreamMessage"/>
		<reference type="javax.jms.ObjectMessage"/>
		<reference type="javax.jms.QueueBrowser"/>
		<reference type="javax.jms.MapMessage"/>
		<reference type="javax.jms.XASession"/>
		<reference type="org.hornetq.api.core.client.ClientProducer"/>
		<reference type="org.hornetq.api.core.client.ClientSession"/>
		<reference type="org.hornetq.jms.client.HornetQMessage"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.jms.client.HornetQQueueBrowser"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.jms.client.HornetQConnection"/>
		<reference type="javax.jms.BytesMessage"/>
		<reference type="org.hornetq.jms.client.SelectorTranslator"/>
		<reference type="javax.jms.InvalidClientIDException"/>
		<reference type="org.hornetq.jms.client.HornetQMessageProducer"/>
		<reference type="javax.jms.QueueReceiver"/>
		<reference type="javax.jms.MessageConsumer"/>
		<reference type="org.hornetq.jms.client.HornetQObjectMessage"/>
		<reference type="org.hornetq.jms.client.HornetQTemporaryTopic"/>
		<reference type="javax.jms.Queue"/>
		<reference type="javax.jms.TextMessage"/>
		<reference type="javax.transaction.xa.XAResource"/>
		<reference type="javax.jms.TemporaryTopic"/>
		<reference type="javax.jms.Topic"/>
		<reference type="org.hornetq.api.core.client.ClientSession$QueueQuery"/>
		<reference type="org.hornetq.jms.client.JMSExceptionHelper"/>
		<reference type="org.hornetq.jms.client.HornetQTemporaryQueue"/>
		<reference type="javax.jms.XAQueueSession"/>
		<reference type="org.hornetq.jms.client.HornetQBytesMessage"/>
		<reference type="javax.jms.TopicSubscriber"/>
		<reference type="javax.jms.MessageProducer"/>
		<reference type="org.hornetq.jms.client.HornetQMessageConsumer"/>
		<reference type="org.hornetq.jms.client.HornetQTopic"/>
		<reference type="org.hornetq.api.core.client.ClientConsumer"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="javax.jms.Message"/>
		<reference type="java.util.UUID"/>
		<reference type="java.io.Serializable"/>
		<reference type="javax.jms.QueueSession"/>
		<reference type="javax.jms.InvalidDestinationException"/>
		<reference type="org.hornetq.jms.client.HornetQMapMessage"/>
		<reference type="javax.jms.TemporaryQueue"/>
		<reference type="javax.jms.TransactionInProgressException"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.jms.client.HornetQTextMessage"/>
		<reference type="javax.jms.TopicSession"/>
		<reference type="javax.jms.Destination"/>
	</type>
	<type name="org.hornetq.jms.client.HornetQTopic" internal="true" project="trunk" package="org.hornetq.jms.client">
		<reference type="javax.jms.Topic"/>
		<reference type="org.hornetq.jms.client.HornetQDestination"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.jms.client.HornetQSession"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.journal.impl.JournalCompactor$CompactCommand" internal="true" project="trunk" package="org.hornetq.core.journal.impl">
		<reference type="java.lang.Exception"/>
	</type>
	<type name="org.hornetq.core.server.cluster.RemoteQueueBinding" internal="true" project="trunk" package="org.hornetq.core.server.cluster">
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.postoffice.QueueBinding"/>
	</type>
	<type name="org.hornetq.jms.management.impl.JMSQueueControlImpl" internal="true" project="trunk" package="org.hornetq.jms.management.impl">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.utils.json.JSONObject"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="org.hornetq.api.core.management.QueueControl"/>
		<reference type="javax.management.MBeanInfo"/>
		<reference type="org.hornetq.core.messagecounter.MessageCounter"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.management.impl.MBeanInfoHelper"/>
		<reference type="org.hornetq.core.messagecounter.impl.MessageCounterHelper"/>
		<reference type="org.hornetq.jms.client.HornetQMessage"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.jms.server.JMSServerManager"/>
		<reference type="org.hornetq.api.core.FilterConstants"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.api.jms.management.JMSQueueControl"/>
		<reference type="org.hornetq.api.core.management.MessageCounterInfo"/>
		<reference type="org.hornetq.utils.json.JSONArray"/>
		<reference type="org.hornetq.jms.client.SelectorTranslator"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.jms.client.HornetQDestination"/>
		<reference type="java.util.Map"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="javax.management.StandardMBean"/>
		<reference type="java.lang.Override"/>
	</type>
	<type name="org.hornetq.core.message.BodyEncoder" internal="true" project="trunk" package="org.hornetq.core.message">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="java.nio.ByteBuffer"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
	</type>
	<type name="org.hornetq.core.server.MemoryManager" internal="true" project="trunk" package="org.hornetq.core.server">
		<reference type="org.hornetq.core.server.HornetQComponent"/>
	</type>
	<type name="java.io.PrintWriter" internal="false" project="rt.jar" package="java.io">
	</type>
	<type name="org.hornetq.core.remoting.impl.invm.InVMConnection" internal="true" project="trunk" package="org.hornetq.core.remoting.impl.invm">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.spi.core.protocol.ProtocolType"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.spi.core.remoting.BufferHandler"/>
		<reference type="org.hornetq.utils.UUIDGenerator"/>
		<reference type="java.util.concurrent.Executor"/>
		<reference type="java.lang.Runnable"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.api.core.HornetQBuffers"/>
		<reference type="java.lang.Object"/>
		<reference type="java.util.concurrent.RejectedExecutionException"/>
		<reference type="org.hornetq.spi.core.remoting.ConnectionLifeCycleListener"/>
		<reference type="org.hornetq.spi.core.remoting.Connection"/>
	</type>
	<type name="org.hornetq.core.remoting.impl.netty.NettyConnectorFactory" internal="true" project="trunk" package="org.hornetq.core.remoting.impl.netty">
		<reference type="org.hornetq.core.remoting.impl.netty.TransportConstants"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.spi.core.remoting.ConnectorFactory"/>
		<reference type="java.util.concurrent.ScheduledExecutorService"/>
		<reference type="org.hornetq.core.remoting.impl.netty.NettyConnector"/>
		<reference type="org.hornetq.spi.core.remoting.BufferHandler"/>
		<reference type="org.hornetq.spi.core.remoting.Connector"/>
		<reference type="java.util.concurrent.Executor"/>
		<reference type="org.hornetq.spi.core.remoting.ConnectionLifeCycleListener"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.jboss.netty.handler.codec.http.CookieDecoder" internal="false" project="netty.jar" package="org.jboss.netty.handler.codec.http">
	</type>
	<type name="javax.management.NotificationFilter" internal="false" project="rt.jar" package="javax.management">
	</type>
	<type name="org.hornetq.core.server.impl.ServerConsumerImpl$LargeMessageDeliverer" internal="true" project="trunk" package="org.hornetq.core.server.impl">
		<reference type="org.hornetq.api.core.HornetQBuffers"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.message.BodyEncoder"/>
		<reference type="org.hornetq.core.server.impl.ServerConsumerImpl"/>
		<reference type="java.lang.Math"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.LargeServerMessage"/>
		<reference type="org.hornetq.core.server.MessageReference"/>
	</type>
	<type name="org.hornetq.core.protocol.stomp.StompFrameDecoder" internal="true" project="trunk" package="org.hornetq.core.protocol.stomp">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Object"/>
		<reference type="java.lang.Integer"/>
		<reference type="java.lang.System"/>
		<reference type="java.lang.NumberFormatException"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.io.IOException"/>
		<reference type="org.hornetq.core.protocol.stomp.StompFrame"/>
		<reference type="org.hornetq.core.protocol.stomp.StompException"/>
		<reference type="org.hornetq.core.protocol.stomp.Stomp$Headers"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.api.core.management.AddressControl" internal="true" project="trunk" package="org.hornetq.api.core.management">
		<reference type="java.lang.Object"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.jboss.netty.channel.SimpleChannelHandler" internal="false" project="netty.jar" package="org.jboss.netty.channel">
	</type>
	<type name="org.hornetq.core.persistence.impl.journal.JournalStorageManager$ScheduledDeliveryEncoding" internal="true" project="trunk" package="org.hornetq.core.persistence.impl.journal">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.persistence.impl.journal.JournalStorageManager$QueueEncoding"/>
		<reference type="java.lang.Override"/>
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.SessionConsumerFlowCreditMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="org.hornetq.core.asyncio.impl.AsynchronousFileImpl$CallbackHolder" internal="true" project="trunk" package="org.hornetq.core.asyncio.impl">
		<reference type="org.hornetq.core.asyncio.AIOCallback"/>
	</type>
	<type name="org.hornetq.core.journal.impl.AbstractJournalUpdateTask" internal="true" project="trunk" package="org.hornetq.core.journal.impl">
		<reference type="org.hornetq.core.journal.impl.JournalImpl"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.core.journal.SequentialFile"/>
		<reference type="org.hornetq.core.journal.impl.dataformat.JournalInternalRecord"/>
		<reference type="org.hornetq.core.journal.impl.JournalFileImpl"/>
		<reference type="java.lang.Long"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.journal.impl.dataformat.JournalAddRecord"/>
		<reference type="org.hornetq.core.journal.SequentialFileFactory"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.core.journal.impl.dataformat.ByteArrayEncoding"/>
		<reference type="org.hornetq.api.core.HornetQBuffers"/>
		<reference type="java.nio.ByteBuffer"/>
		<reference type="org.hornetq.core.journal.impl.JournalFile"/>
		<reference type="org.hornetq.core.journal.impl.JournalReaderCallback"/>
	</type>
	<type name="org.hornetq.api.core.management.Operation" internal="true" project="trunk" package="org.hornetq.api.core.management">
	</type>
	<type name="java.lang.Number" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="java.net.InetSocketAddress" internal="false" project="rt.jar" package="java.net">
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.SessionSendLargeMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="org.hornetq.ra.HornetQRABytesMessage" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="javax.jms.BytesMessage"/>
		<reference type="org.hornetq.ra.HornetQRAMessage"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.ra.HornetQRASession"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="java.security.KeyStore" internal="false" project="rt.jar" package="java.security">
	</type>
	<type name="org.hornetq.core.persistence.impl.journal.JournalStorageManager$QueueEncoding" internal="true" project="trunk" package="org.hornetq.core.persistence.impl.journal">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.journal.EncodingSupport"/>
	</type>
	<type name="org.hornetq.core.remoting.impl.netty.NettyConnector$HttpHandler" internal="true" project="trunk" package="org.hornetq.core.remoting.impl.netty">
		<reference type="org.jboss.netty.handler.codec.http.HttpResponse"/>
		<reference type="org.hornetq.utils.Future"/>
		<reference type="org.jboss.netty.channel.ChannelStateEvent"/>
		<reference type="org.jboss.netty.handler.codec.http.Cookie"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.remoting.impl.netty.NettyConnector"/>
		<reference type="org.jboss.netty.handler.codec.http.HttpVersion"/>
		<reference type="org.jboss.netty.channel.Channels"/>
		<reference type="org.jboss.netty.handler.codec.http.DefaultHttpRequest"/>
		<reference type="java.lang.String"/>
		<reference type="org.jboss.netty.handler.codec.http.CookieEncoder"/>
		<reference type="org.jboss.netty.channel.ChannelHandlerContext"/>
		<reference type="org.jboss.netty.handler.codec.http.HttpRequest"/>
		<reference type="org.jboss.netty.channel.SimpleChannelHandler"/>
		<reference type="org.jboss.netty.buffer.ChannelBuffer"/>
		<reference type="org.jboss.netty.channel.Channel"/>
		<reference type="java.lang.System"/>
		<reference type="org.jboss.netty.handler.codec.http.HttpMethod"/>
		<reference type="org.jboss.netty.channel.MessageEvent"/>
		<reference type="org.hornetq.core.remoting.impl.netty.NettyConnector$HttpHandler$HttpIdleTimer"/>
		<reference type="java.lang.RuntimeException"/>
		<reference type="org.jboss.netty.channel.UpstreamMessageEvent"/>
		<reference type="org.jboss.netty.handler.codec.http.HttpHeaders$Names"/>
		<reference type="java.lang.Override"/>
		<reference type="java.util.concurrent.TimeUnit"/>
		<reference type="org.jboss.netty.handler.codec.http.CookieDecoder"/>
	</type>
	<type name="org.hornetq.core.remoting.server.impl.RemotingServiceImpl$FailureCheckAndFlushThread" internal="true" project="trunk" package="org.hornetq.core.remoting.server.impl">
		<reference type="java.lang.InterruptedException"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.spi.core.protocol.RemotingConnection"/>
		<reference type="org.hornetq.spi.core.protocol.ConnectionEntry"/>
		<reference type="java.lang.System"/>
		<reference type="org.hornetq.core.remoting.server.impl.RemotingServiceImpl"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.Thread"/>
	</type>
	<type name="org.hornetq.core.protocol.stomp.Stomp" internal="true" project="trunk" package="org.hornetq.core.protocol.stomp">
		<reference type="java.lang.String"/>
	</type>
	<type name="javax.net.ssl.KeyManagerFactory" internal="false" project="rt.jar" package="javax.net.ssl">
	</type>
	<type name="java.net.NetworkInterface" internal="false" project="rt.jar" package="java.net">
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.SessionSendMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="javax.jms.MessageNotReadableException" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="javax.jms.MessageEOFException" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.integration.twitter.impl.IncomingTweetsHandler" internal="true" project="trunk" package="org.hornetq.integration.twitter.impl">
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Integer"/>
		<reference type="twitter4j.Place"/>
		<reference type="twitter4j.GeoLocation"/>
		<reference type="twitter4j.TwitterFactory"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.impl.ServerMessageImpl"/>
		<reference type="org.hornetq.core.persistence.StorageManager"/>
		<reference type="twitter4j.Status"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.integration.twitter.TwitterConstants"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.utils.ConfigurationHelper"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.postoffice.Binding"/>
		<reference type="java.util.concurrent.ScheduledFuture"/>
		<reference type="org.hornetq.integration.twitter.impl.IncomingTweetsHandler$TweetsRunnable"/>
		<reference type="java.util.concurrent.ScheduledExecutorService"/>
		<reference type="twitter4j.Twitter"/>
		<reference type="org.hornetq.core.server.ConnectorService"/>
		<reference type="twitter4j.Paging"/>
		<reference type="java.util.concurrent.TimeUnit"/>
		<reference type="org.hornetq.core.postoffice.PostOffice"/>
	</type>
	<type name="java.util.Properties" internal="false" project="rt.jar" package="java.util">
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.HornetQExceptionMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="org.hornetq.core.remoting.server.impl.RemotingServiceImpl" internal="true" project="trunk" package="org.hornetq.core.remoting.server.impl">
		<reference type="org.hornetq.api.core.Interceptor"/>
		<reference type="org.hornetq.utils.HornetQThreadFactory"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="java.util.concurrent.ThreadFactory"/>
		<reference type="org.hornetq.core.remoting.server.impl.RemotingServiceImpl$FailureCheckAndFlushThread"/>
		<reference type="org.hornetq.core.protocol.core.impl.CoreProtocolManagerFactory"/>
		<reference type="org.hornetq.spi.core.protocol.ConnectionEntry"/>
		<reference type="java.security.AccessController"/>
		<reference type="org.hornetq.core.remoting.server.RemotingService"/>
		<reference type="java.util.concurrent.TimeUnit"/>
		<reference type="org.hornetq.core.server.HornetQServer"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.core.remoting.impl.netty.TransportConstants"/>
		<reference type="org.hornetq.spi.core.protocol.ProtocolType"/>
		<reference type="org.hornetq.core.remoting.server.impl.RemotingServiceImpl$DelegatingBufferHandler"/>
		<reference type="java.util.concurrent.Executors"/>
		<reference type="org.hornetq.spi.core.protocol.RemotingConnection"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.TransportConfiguration"/>
		<reference type="org.hornetq.core.protocol.core.ServerSessionPacketHandler"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.spi.core.protocol.ProtocolManager"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.core.config.Configuration"/>
		<reference type="org.hornetq.core.protocol.stomp.StompProtocolManagerFactory"/>
		<reference type="org.hornetq.utils.ConfigurationHelper"/>
		<reference type="java.lang.Object"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="java.lang.ClassLoader"/>
		<reference type="java.lang.System"/>
		<reference type="java.util.concurrent.ScheduledExecutorService"/>
		<reference type="org.hornetq.spi.core.remoting.AcceptorFactory"/>
		<reference type="org.hornetq.core.server.management.ManagementService"/>
		<reference type="java.util.concurrent.ExecutorService"/>
		<reference type="org.hornetq.core.remoting.FailureListener"/>
		<reference type="org.hornetq.spi.core.remoting.ConnectionLifeCycleListener"/>
		<reference type="java.lang.Thread"/>
		<reference type="org.hornetq.spi.core.remoting.Acceptor"/>
		<reference type="org.hornetq.spi.core.remoting.Connection"/>
	</type>
	<type name="org.hornetq.service.HornetQJMSStarterService" internal="true" project="trunk" package="org.hornetq.service">
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.service.HornetQStarterServiceMBean"/>
		<reference type="org.hornetq.service.HornetQJMSStarterServiceMBean"/>
		<reference type="org.hornetq.jms.server.impl.JMSServerManagerImpl"/>
	</type>
	<type name="org.hornetq.core.replication.impl.ReplicationManagerImpl" internal="true" project="trunk" package="org.hornetq.core.replication.impl">
		<reference type="org.hornetq.core.persistence.OperationContext"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.ReplicationPrepareMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.ReplicationAddTXMessage"/>
		<reference type="org.hornetq.core.journal.JournalLoadInformation"/>
		<reference type="org.hornetq.core.paging.PagedMessage"/>
		<reference type="org.hornetq.core.protocol.core.Channel"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.ReplicationCommitMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.CreateReplicationSessionMessage"/>
		<reference type="org.hornetq.api.core.client.SessionFailureListener"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.ReplicationLargemessageEndMessage"/>
		<reference type="org.hornetq.core.journal.EncodingSupport"/>
		<reference type="org.hornetq.utils.ExecutorFactory"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.ReplicationCompareDataMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.ReplicationLargeMessageBeingMessage"/>
		<reference type="org.hornetq.core.protocol.core.Packet"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.ReplicationPageEventMessage"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.ReplicationLargeMessageWriteMessage"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.replication.impl.ReplicationManagerImpl$NullEncoding"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.ReplicationAddMessage"/>
		<reference type="org.hornetq.core.client.impl.FailoverManager"/>
		<reference type="org.hornetq.core.replication.impl.ReplicationManagerImpl$ResponseHandler"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.core.protocol.core.CoreRemotingConnection"/>
		<reference type="org.hornetq.core.replication.ReplicationManager"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.Throwable"/>
		<reference type="org.hornetq.core.persistence.impl.journal.OperationContextImpl"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.ReplicationDeleteMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.ReplicationPageWriteMessage"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.ReplicationDeleteTXMessage"/>
	</type>
	<type name="org.hornetq.ra.inflow.HornetQActivation$SetupActivation" internal="true" project="trunk" package="org.hornetq.ra.inflow">
		<reference type="java.lang.Throwable"/>
		<reference type="javax.resource.spi.work.Work"/>
	</type>
	<type name="org.hornetq.core.deployers.impl.QueueDeployer" internal="true" project="trunk" package="org.hornetq.core.deployers.impl">
		<reference type="org.w3c.dom.Node"/>
		<reference type="org.hornetq.utils.XMLUtil"/>
		<reference type="org.hornetq.core.deployers.DeploymentManager"/>
		<reference type="org.hornetq.core.deployers.impl.FileConfigurationParser"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.deployers.impl.XmlDeployer"/>
		<reference type="java.lang.Override"/>
		<reference type="org.hornetq.core.config.CoreQueueConfiguration"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.core.server.HornetQServer"/>
	</type>
	<type name="org.xml.sax.InputSource" internal="false" project="rt.jar" package="org.xml.sax">
	</type>
	<type name="org.hornetq.jms.client.HornetQObjectMessage" internal="true" project="trunk" package="org.hornetq.jms.client">
		<reference type="java.io.ObjectInputStream"/>
		<reference type="java.io.ObjectOutputStream"/>
		<reference type="java.io.ByteArrayInputStream"/>
		<reference type="java.io.Serializable"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.client.ClientSession"/>
		<reference type="org.hornetq.api.core.Message"/>
		<reference type="java.io.ByteArrayOutputStream"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="org.hornetq.jms.client.HornetQMessage"/>
		<reference type="java.lang.Override"/>
		<reference type="org.hornetq.api.core.client.ClientMessage"/>
		<reference type="javax.jms.ObjectMessage"/>
		<reference type="org.hornetq.utils.ObjectInputStreamWithClassLoader"/>
	</type>
	<type name="org.hornetq.core.config.Configuration" internal="true" project="trunk" package="org.hornetq.core.config">
		<reference type="org.hornetq.core.config.BridgeConfiguration"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.config.ClusterConnectionConfiguration"/>
		<reference type="org.hornetq.core.server.group.impl.GroupingHandlerConfiguration"/>
		<reference type="java.io.Serializable"/>
		<reference type="org.hornetq.api.core.TransportConfiguration"/>
		<reference type="org.hornetq.core.config.DivertConfiguration"/>
		<reference type="org.hornetq.core.config.BroadcastGroupConfiguration"/>
		<reference type="org.hornetq.core.settings.impl.AddressSettings"/>
		<reference type="org.hornetq.core.security.Role"/>
		<reference type="org.hornetq.core.config.CoreQueueConfiguration"/>
		<reference type="org.hornetq.core.config.DiscoveryGroupConfiguration"/>
		<reference type="org.hornetq.core.config.ConnectorServiceConfiguration"/>
		<reference type="org.hornetq.core.server.JournalType"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.messagecounter.MessageCounter$DayCounter" internal="true" project="trunk" package="org.hornetq.core.messagecounter">
		<reference type="java.util.GregorianCalendar"/>
		<reference type="java.text.DateFormat"/>
		<reference type="java.util.Calendar"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.utils.concurrent.HornetQConcurrentLinkedQueue$HQIteratorImpl" internal="true" project="trunk" package="org.hornetq.utils.concurrent">
		<reference type="java.lang.IllegalStateException"/>
	</type>
	<type name="javax.naming.NamingException" internal="false" project="rt.jar" package="javax.naming">
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.SessionXAGetTimeoutResponseMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="org.hornetq.core.journal.TransactionFailureCallback" internal="true" project="trunk" package="org.hornetq.core.journal">
		<reference type="org.hornetq.core.journal.RecordInfo"/>
	</type>
	<type name="org.hornetq.ra.HornetQRAMessageListener" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="javax.jms.MessageListener"/>
		<reference type="javax.jms.Message"/>
		<reference type="org.hornetq.ra.HornetQRAMessageConsumer"/>
	</type>
	<type name="org.hornetq.jms.server.JMSServerManager" internal="true" project="trunk" package="org.hornetq.jms.server">
		<reference type="javax.naming.Context"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.HornetQComponent"/>
		<reference type="org.hornetq.api.core.TransportConfiguration"/>
		<reference type="org.hornetq.core.settings.impl.AddressSettings"/>
		<reference type="org.hornetq.core.security.Role"/>
		<reference type="org.hornetq.jms.server.config.ConnectionFactoryConfiguration"/>
		<reference type="org.hornetq.core.server.HornetQServer"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="java.lang.Character" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.jboss.netty.handler.codec.http.HttpMethod" internal="false" project="netty.jar" package="org.jboss.netty.handler.codec.http">
	</type>
	<type name="org.hornetq.core.journal.impl.JournalImpl$TransactionHolder" internal="true" project="trunk" package="org.hornetq.core.journal.impl">
		<reference type="org.hornetq.core.journal.RecordInfo"/>
	</type>
	<type name="org.hornetq.core.client.impl.FailoverManager" internal="true" project="trunk" package="org.hornetq.core.client.impl">
		<reference type="org.hornetq.api.core.client.SessionFailureListener"/>
		<reference type="org.hornetq.core.protocol.core.CoreRemotingConnection"/>
		<reference type="org.hornetq.api.core.client.ClientSession"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.core.client.impl.ClientSessionInternal"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.remoting.impl.invm.InVMAcceptorFactory" internal="true" project="trunk" package="org.hornetq.core.remoting.impl.invm">
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.core.remoting.impl.invm.InVMAcceptor"/>
		<reference type="org.hornetq.spi.core.remoting.BufferDecoder"/>
		<reference type="org.hornetq.core.remoting.impl.invm.TransportConstants"/>
		<reference type="java.util.concurrent.ScheduledExecutorService"/>
		<reference type="org.hornetq.spi.core.remoting.AcceptorFactory"/>
		<reference type="org.hornetq.spi.core.remoting.BufferHandler"/>
		<reference type="java.util.concurrent.Executor"/>
		<reference type="org.hornetq.spi.core.remoting.ConnectionLifeCycleListener"/>
		<reference type="org.hornetq.spi.core.remoting.Acceptor"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.jms.management.impl.JMSConnectionFactoryControlImpl" internal="true" project="trunk" package="org.hornetq.jms.management.impl">
		<reference type="javax.management.MBeanInfo"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.management.impl.MBeanInfoHelper"/>
		<reference type="org.hornetq.api.core.TransportConfiguration"/>
		<reference type="org.hornetq.api.core.management.Parameter"/>
		<reference type="org.hornetq.jms.client.HornetQConnectionFactory"/>
		<reference type="org.hornetq.api.jms.management.ConnectionFactoryControl"/>
		<reference type="javax.management.StandardMBean"/>
		<reference type="java.lang.Override"/>
		<reference type="org.hornetq.jms.server.JMSServerManager"/>
		<reference type="javax.management.NotCompliantMBeanException"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.api.jms.management.ConnectionFactoryControl" internal="true" project="trunk" package="org.hornetq.api.jms.management">
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.TransportConfiguration"/>
		<reference type="org.hornetq.api.core.management.Parameter"/>
		<reference type="org.hornetq.api.core.management.Operation"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.journal.impl.AbstractSequentialFile$DelegateCallback" internal="true" project="trunk" package="org.hornetq.core.journal.impl">
		<reference type="java.lang.Throwable"/>
		<reference type="org.hornetq.core.journal.IOAsyncTask"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.core.journal.impl.AbstractSequentialFile"/>
	</type>
	<type name="org.hornetq.core.logging.impl.JULLogDelegateFactory" internal="true" project="trunk" package="org.hornetq.core.logging.impl">
		<reference type="org.hornetq.spi.core.logging.LogDelegateFactory"/>
		<reference type="org.hornetq.spi.core.logging.LogDelegate"/>
		<reference type="org.hornetq.core.logging.impl.JULLogDelegate"/>
	</type>
	<type name="org.jboss.netty.handler.codec.http.websocket.DefaultWebSocketFrame" internal="false" project="netty.jar" package="org.jboss.netty.handler.codec.http.websocket">
	</type>
	<type name="java.lang.InterruptedException" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.jboss.netty.util.CharsetUtil" internal="false" project="netty.jar" package="org.jboss.netty.util">
	</type>
	<type name="org.hornetq.core.client.impl.ClientProducerImpl" internal="true" project="trunk" package="org.hornetq.core.client.impl">
		<reference type="java.lang.InterruptedException"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.core.client.impl.ClientProducerCredits"/>
		<reference type="java.lang.Math"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionSendMessage"/>
		<reference type="org.hornetq.utils.TokenBucketLimiter"/>
		<reference type="org.hornetq.utils.UUIDGenerator"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionSendContinuationMessage"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.core.client.impl.ClientSessionInternal"/>
		<reference type="org.hornetq.core.protocol.core.Channel"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.api.core.HornetQBuffers"/>
		<reference type="org.hornetq.core.message.BodyEncoder"/>
		<reference type="org.hornetq.core.client.impl.ClientProducerInternal"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.System"/>
		<reference type="org.hornetq.core.protocol.core.impl.wireformat.SessionSendLargeMessage"/>
		<reference type="org.hornetq.api.core.Message"/>
		<reference type="java.io.InputStream"/>
		<reference type="java.io.IOException"/>
		<reference type="org.hornetq.core.message.impl.MessageInternal"/>
	</type>
	<type name="org.hornetq.service.JBossASSecurityManagerService" internal="true" project="trunk" package="org.hornetq.service">
		<reference type="org.hornetq.service.JBossASSecurityManagerServiceMBean"/>
		<reference type="org.hornetq.integration.jboss.security.JBossASSecurityManager"/>
	</type>
	<type name="java.lang.reflect.InvocationTargetException" internal="false" project="rt.jar" package="java.lang.reflect">
	</type>
	<type name="org.hornetq.ra.HornetQRAMessageConsumer" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="org.hornetq.ra.HornetQRAMessage"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="javax.jms.MessageListener"/>
		<reference type="org.hornetq.ra.HornetQRAStreamMessage"/>
		<reference type="javax.jms.MessageConsumer"/>
		<reference type="javax.jms.MapMessage"/>
		<reference type="org.hornetq.ra.HornetQRASession"/>
		<reference type="javax.jms.Message"/>
		<reference type="org.hornetq.ra.HornetQRAMapMessage"/>
		<reference type="javax.jms.TextMessage"/>
		<reference type="org.hornetq.ra.HornetQRAMessageListener"/>
		<reference type="org.hornetq.ra.HornetQRATextMessage"/>
		<reference type="org.hornetq.ra.HornetQRABytesMessage"/>
		<reference type="org.hornetq.ra.HornetQRAObjectMessage"/>
		<reference type="java.lang.String"/>
		<reference type="javax.jms.BytesMessage"/>
		<reference type="javax.jms.StreamMessage"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="javax.jms.ObjectMessage"/>
	</type>
	<type name="org.hornetq.utils.json.JSONTokener" internal="true" project="trunk" package="org.hornetq.utils.json">
		<reference type="org.hornetq.utils.json.JSONArray"/>
		<reference type="org.hornetq.utils.json.JSONObject"/>
		<reference type="java.lang.Object"/>
		<reference type="java.io.BufferedReader"/>
		<reference type="java.lang.Integer"/>
		<reference type="java.io.StringReader"/>
		<reference type="org.hornetq.utils.json.JSONException"/>
		<reference type="java.io.Reader"/>
		<reference type="java.lang.StringBuffer"/>
		<reference type="java.io.IOException"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.journal.Journal" internal="true" project="trunk" package="org.hornetq.core.journal">
		<reference type="org.hornetq.core.journal.LoaderCallback"/>
		<reference type="org.hornetq.core.journal.PreparedTransactionInfo"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.HornetQComponent"/>
		<reference type="org.hornetq.core.journal.EncodingSupport"/>
		<reference type="org.hornetq.core.journal.RecordInfo"/>
		<reference type="org.hornetq.core.journal.JournalLoadInformation"/>
		<reference type="org.hornetq.core.journal.IOCompletion"/>
		<reference type="org.hornetq.core.journal.TransactionFailureCallback"/>
	</type>
	<type name="org.apache.log4j.Logger" internal="false" project="log4j.jar" package="org.apache.log4j">
	</type>
	<type name="org.hornetq.core.postoffice.AddressManager" internal="true" project="trunk" package="org.hornetq.core.postoffice">
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.postoffice.Binding"/>
		<reference type="org.hornetq.core.postoffice.Bindings"/>
	</type>
	<type name="org.hornetq.api.core.client.loadbalance.ConnectionLoadBalancingPolicy" internal="true" project="trunk" package="org.hornetq.api.core.client.loadbalance">
	</type>
	<type name="org.jboss.netty.handler.codec.frame.FrameDecoder" internal="false" project="netty.jar" package="org.jboss.netty.handler.codec.frame">
	</type>
	<type name="org.hornetq.core.protocol.stomp.Stomp$Headers" internal="true" project="trunk" package="org.hornetq.core.protocol.stomp">
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.filter.impl.Operator" internal="true" project="trunk" package="org.hornetq.core.filter.impl">
		<reference type="java.util.HashSet"/>
		<reference type="java.lang.Short"/>
		<reference type="org.hornetq.core.filter.impl.Identifier"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Integer"/>
		<reference type="java.lang.Long"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.lang.Character"/>
		<reference type="java.lang.Double"/>
		<reference type="java.lang.Byte"/>
		<reference type="java.lang.String"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.filter.impl.RegExp"/>
		<reference type="java.lang.Boolean"/>
		<reference type="java.lang.Class"/>
		<reference type="java.lang.Float"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.Number"/>
	</type>
	<type name="org.hornetq.api.core.client.MessageHandler" internal="true" project="trunk" package="org.hornetq.api.core.client">
		<reference type="org.hornetq.api.core.client.ClientMessage"/>
	</type>
	<type name="org.hornetq.jms.persistence.config.PersistedType" internal="true" project="trunk" package="org.hornetq.jms.persistence.config">
	</type>
	<type name="org.hornetq.core.server.group.impl.LocalGroupingHandler" internal="true" project="trunk" package="org.hornetq.core.server.group.impl">
		<reference type="org.hornetq.api.core.management.NotificationType"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.core.postoffice.BindingType"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.server.group.impl.Response"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.management.ManagementHelper"/>
		<reference type="org.hornetq.utils.TypedProperties"/>
		<reference type="org.hornetq.core.server.management.ManagementService"/>
		<reference type="org.hornetq.core.server.group.GroupingHandler"/>
		<reference type="org.hornetq.core.persistence.StorageManager"/>
		<reference type="org.hornetq.core.server.management.Notification"/>
		<reference type="org.hornetq.core.server.group.impl.Proposal"/>
		<reference type="org.hornetq.core.server.group.impl.GroupBinding"/>
	</type>
	<type name="org.hornetq.core.server.group.impl.RemoteGroupingHandler" internal="true" project="trunk" package="org.hornetq.core.server.group.impl">
		<reference type="org.hornetq.api.core.management.NotificationType"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.util.concurrent.locks.ReentrantLock"/>
		<reference type="org.hornetq.utils.TypedProperties"/>
		<reference type="org.hornetq.core.server.management.Notification"/>
		<reference type="java.util.logging.Logger"/>
		<reference type="java.util.concurrent.locks.Lock"/>
		<reference type="org.hornetq.core.server.group.impl.Proposal"/>
		<reference type="org.hornetq.core.postoffice.BindingType"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.util.concurrent.locks.Condition"/>
		<reference type="org.hornetq.core.server.group.impl.Response"/>
		<reference type="org.hornetq.api.core.management.ManagementHelper"/>
		<reference type="org.hornetq.core.server.group.GroupingHandler"/>
		<reference type="org.hornetq.core.server.management.ManagementService"/>
		<reference type="org.hornetq.core.server.group.impl.GroupBinding"/>
		<reference type="java.util.concurrent.TimeUnit"/>
	</type>
	<type name="javax.resource.spi.ManagedConnection" internal="false" project="jboss-jca-api.jar" package="javax.resource.spi">
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.ReattachSessionResponseMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="org.hornetq.core.remoting.impl.ssl.SSLSupport" internal="true" project="trunk" package="org.hornetq.core.remoting.impl.ssl">
		<reference type="javax.net.ssl.TrustManagerFactory"/>
		<reference type="java.security.KeyStore"/>
		<reference type="java.net.URL"/>
		<reference type="java.lang.Exception"/>
		<reference type="javax.net.ssl.KeyManager"/>
		<reference type="java.security.GeneralSecurityException"/>
		<reference type="javax.net.ssl.TrustManager"/>
		<reference type="javax.net.ssl.SSLContext"/>
		<reference type="java.lang.String"/>
		<reference type="javax.net.ssl.KeyManagerFactory"/>
		<reference type="java.security.SecureRandom"/>
		<reference type="java.lang.Object"/>
		<reference type="java.net.MalformedURLException"/>
		<reference type="java.security.cert.X509Certificate"/>
		<reference type="javax.net.ssl.X509TrustManager"/>
		<reference type="java.io.InputStream"/>
		<reference type="java.io.IOException"/>
		<reference type="java.lang.Thread"/>
		<reference type="java.io.File"/>
	</type>
	<type name="org.hornetq.utils.concurrent.ConcurrentHQDeque$Iter" internal="true" project="trunk" package="org.hornetq.utils.concurrent">
	</type>
	<type name="java.util.concurrent.atomic.AtomicInteger" internal="false" project="rt.jar" package="java.util.concurrent.atomic">
	</type>
	<type name="org.hornetq.jms.server.config.ConnectionFactoryConfiguration" internal="true" project="trunk" package="org.hornetq.jms.server.config">
		<reference type="org.hornetq.api.core.TransportConfiguration"/>
		<reference type="org.hornetq.core.journal.EncodingSupport"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.utils.UUIDTimer" internal="true" project="trunk" package="org.hornetq.utils">
		<reference type="java.lang.InterruptedException"/>
		<reference type="org.hornetq.utils.UUID"/>
		<reference type="java.lang.System"/>
		<reference type="java.util.Random"/>
		<reference type="java.lang.Thread"/>
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.SessionDeleteQueueMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="javax.jms.MessageFormatException" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.core.postoffice.impl.PostOfficeImpl$AddOperation" internal="true" project="trunk" package="org.hornetq.core.postoffice.impl">
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="org.hornetq.core.transaction.TransactionOperation"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.MessageReference"/>
		<reference type="org.hornetq.core.transaction.Transaction"/>
	</type>
	<type name="java.net.DatagramSocket" internal="false" project="rt.jar" package="java.net">
	</type>
	<type name="org.hornetq.core.postoffice.QueueBinding" internal="true" project="trunk" package="org.hornetq.core.postoffice">
		<reference type="org.hornetq.core.postoffice.Binding"/>
		<reference type="org.hornetq.core.server.Queue"/>
	</type>
	<type name="org.hornetq.jms.server.recovery.HornetQXAResourceRecovery$ConfigParser" internal="true" project="trunk" package="org.hornetq.jms.server.recovery">
		<reference type="java.lang.Object"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.jms.referenceable.DestinationObjectFactory" internal="true" project="trunk" package="org.hornetq.jms.referenceable">
		<reference type="javax.naming.spi.ObjectFactory"/>
		<reference type="java.lang.Object"/>
		<reference type="javax.naming.Context"/>
		<reference type="java.lang.Exception"/>
		<reference type="javax.naming.Reference"/>
		<reference type="java.util.Hashtable"/>
		<reference type="javax.naming.Name"/>
		<reference type="org.hornetq.jms.referenceable.SerializableObjectRefAddr"/>
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.SessionAcknowledgeMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="org.hornetq.core.protocol.stomp.Stomp$Responses" internal="true" project="trunk" package="org.hornetq.core.protocol.stomp">
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.persistence.impl.journal.JournalStorageManager$RefEncoding" internal="true" project="trunk" package="org.hornetq.core.persistence.impl.journal">
		<reference type="org.hornetq.core.persistence.impl.journal.JournalStorageManager$QueueEncoding"/>
	</type>
	<type name="java.lang.Integer" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="java.lang.Short" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.hornetq.jms.persistence.config.PersistedDestination" internal="true" project="trunk" package="org.hornetq.jms.persistence.config">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.utils.DataConstants"/>
		<reference type="org.hornetq.utils.BufferHelper"/>
		<reference type="org.hornetq.core.journal.EncodingSupport"/>
		<reference type="org.hornetq.jms.persistence.config.PersistedType"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="twitter4j.Status" internal="false" project="twitter4j-core.jar" package="twitter4j">
	</type>
	<type name="org.hornetq.api.core.management.ClusterConnectionControl" internal="true" project="trunk" package="org.hornetq.api.core.management">
		<reference type="java.lang.Object"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.management.HornetQComponentControl"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.persistence.impl.journal.LargeServerMessageImpl$DecodingContext" internal="true" project="trunk" package="org.hornetq.core.persistence.impl.journal">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.journal.SequentialFile"/>
		<reference type="org.hornetq.core.message.BodyEncoder"/>
		<reference type="java.nio.ByteBuffer"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.persistence.impl.journal.LargeServerMessageImpl"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
	</type>
	<type name="org.hornetq.core.server.impl.RoutingContextImpl" internal="true" project="trunk" package="org.hornetq.core.server.impl">
		<reference type="org.hornetq.core.transaction.Transaction"/>
		<reference type="org.hornetq.core.server.Queue"/>
		<reference type="org.hornetq.core.server.RoutingContext"/>
	</type>
	<type name="org.hornetq.api.core.FilterConstants" internal="true" project="trunk" package="org.hornetq.api.core">
		<reference type="org.hornetq.api.core.SimpleString"/>
	</type>
	<type name="java.util.logging.LogRecord" internal="false" project="rt.jar" package="java.util.logging">
	</type>
	<type name="java.util.UUID" internal="false" project="rt.jar" package="java.util">
	</type>
	<type name="org.hornetq.api.jms.management.SubscriptionInfo" internal="true" project="trunk" package="org.hornetq.api.jms.management">
		<reference type="org.hornetq.utils.json.JSONArray"/>
		<reference type="org.hornetq.utils.json.JSONObject"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.jms.server.config.impl.TopicConfigurationImpl" internal="true" project="trunk" package="org.hornetq.jms.server.config.impl">
		<reference type="org.hornetq.jms.server.config.TopicConfiguration"/>
		<reference type="java.lang.System"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="java.io.UnsupportedEncodingException" internal="false" project="rt.jar" package="java.io">
	</type>
	<type name="java.lang.IllegalArgumentException" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.hornetq.core.postoffice.impl.SimpleAddressManager" internal="true" project="trunk" package="org.hornetq.core.postoffice.impl">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="org.hornetq.core.postoffice.Binding"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.postoffice.Bindings"/>
		<reference type="org.hornetq.core.postoffice.BindingsFactory"/>
		<reference type="org.hornetq.core.postoffice.impl.AddressImpl"/>
		<reference type="org.hornetq.core.postoffice.AddressManager"/>
		<reference type="org.hornetq.core.postoffice.Address"/>
	</type>
	<type name="org.hornetq.api.core.management.ObjectNameBuilder" internal="true" project="trunk" package="org.hornetq.api.core.management">
		<reference type="javax.management.ObjectName"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.config.impl.ConfigurationImpl"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="javax.jms.XATopicConnection" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.jms.persistence.impl.journal.JMSJournalStorageManagerImpl" internal="true" project="trunk" package="org.hornetq.jms.persistence.impl.journal">
		<reference type="org.hornetq.core.journal.impl.JournalImpl"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="org.hornetq.jms.persistence.JMSStorageManager"/>
		<reference type="org.hornetq.core.journal.PreparedTransactionInfo"/>
		<reference type="org.hornetq.core.replication.ReplicationEndpoint"/>
		<reference type="org.hornetq.utils.IDGenerator"/>
		<reference type="java.io.File"/>
		<reference type="org.hornetq.jms.persistence.config.PersistedType"/>
		<reference type="org.hornetq.core.replication.impl.ReplicatedJournal"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.journal.Journal"/>
		<reference type="org.hornetq.core.journal.SequentialFileFactory"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.api.core.HornetQBuffers"/>
		<reference type="org.hornetq.core.config.Configuration"/>
		<reference type="org.hornetq.jms.persistence.config.PersistedConnectionFactory"/>
		<reference type="org.hornetq.core.replication.ReplicationManager"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="org.hornetq.core.journal.impl.NIOSequentialFileFactory"/>
		<reference type="org.hornetq.jms.persistence.config.PersistedJNDI"/>
		<reference type="org.hornetq.core.journal.RecordInfo"/>
		<reference type="org.hornetq.core.server.JournalType"/>
		<reference type="org.hornetq.jms.persistence.config.PersistedDestination"/>
		<reference type="java.lang.NullPointerException"/>
	</type>
	<type name="javax.jms.TemporaryQueue" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.core.server.ActivateCallback" internal="true" project="trunk" package="org.hornetq.core.server">
	</type>
	<type name="org.hornetq.core.server.impl.QueueImpl$RefsOperation" internal="true" project="trunk" package="org.hornetq.core.server.impl">
		<reference type="org.hornetq.core.transaction.TransactionOperation"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.MessageReference"/>
		<reference type="org.hornetq.core.transaction.Transaction"/>
		<reference type="org.hornetq.core.server.impl.QueueImpl"/>
	</type>
	<type name="org.hornetq.core.postoffice.DuplicateIDCache" internal="true" project="trunk" package="org.hornetq.core.postoffice">
		<reference type="java.lang.Long"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.transaction.Transaction"/>
	</type>
	<type name="org.hornetq.ra.HornetQRAMetaData" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="javax.resource.ResourceException"/>
		<reference type="javax.resource.spi.ManagedConnectionMetaData"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.ra.HornetQRAManagedConnection"/>
	</type>
	<type name="org.hornetq.core.version.Version" internal="true" project="trunk" package="org.hornetq.core.version">
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.api.core.management.ResourceNames" internal="true" project="trunk" package="org.hornetq.api.core.management">
		<reference type="java.lang.String"/>
	</type>
	<type name="org.jboss.security.RealmMapping" internal="false" project="jboss-security-spi.jar" package="org.jboss.security">
	</type>
	<type name="org.hornetq.core.protocol.stomp.StompProtocolManager" internal="true" project="trunk" package="org.hornetq.core.protocol.stomp">
		<reference type="org.hornetq.api.core.Interceptor"/>
		<reference type="org.hornetq.core.protocol.stomp.Stomp$Headers$Error"/>
		<reference type="java.io.UnsupportedEncodingException"/>
		<reference type="java.util.concurrent.Executor"/>
		<reference type="org.hornetq.core.protocol.stomp.Stomp$Responses"/>
		<reference type="org.hornetq.core.protocol.stomp.Stomp$Headers$Unsubscribe"/>
		<reference type="org.hornetq.spi.core.protocol.ConnectionEntry"/>
		<reference type="org.hornetq.core.journal.IOAsyncTask"/>
		<reference type="org.hornetq.core.protocol.stomp.StompUtils"/>
		<reference type="org.hornetq.core.protocol.stomp.Stomp$Headers$Response"/>
		<reference type="org.hornetq.core.protocol.stomp.StompFrameDecoder"/>
		<reference type="org.hornetq.core.server.ServerSession"/>
		<reference type="org.hornetq.core.protocol.stomp.Stomp$Commands"/>
		<reference type="org.hornetq.api.core.client.HornetQClient"/>
		<reference type="org.hornetq.core.server.HornetQServer"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.spi.core.protocol.RemotingConnection"/>
		<reference type="org.hornetq.core.protocol.stomp.Stomp$Headers$Connected"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.io.OutputStreamWriter"/>
		<reference type="org.hornetq.core.server.impl.ServerMessageImpl"/>
		<reference type="org.hornetq.core.protocol.stomp.Stomp$Headers$Send"/>
		<reference type="org.hornetq.utils.UUIDGenerator"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.core.protocol.stomp.Stomp$Headers$Connect"/>
		<reference type="org.hornetq.core.protocol.stomp.Stomp$Headers$Ack"/>
		<reference type="org.hornetq.spi.core.protocol.ProtocolManager"/>
		<reference type="org.hornetq.core.protocol.stomp.StompFrame"/>
		<reference type="java.io.PrintWriter"/>
		<reference type="java.lang.String"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.Boolean"/>
		<reference type="org.hornetq.core.protocol.stomp.StompSession"/>
		<reference type="java.lang.System"/>
		<reference type="org.hornetq.api.core.Message"/>
		<reference type="org.hornetq.core.protocol.stomp.Stomp$Headers$Subscribe"/>
		<reference type="java.io.ByteArrayOutputStream"/>
		<reference type="org.hornetq.core.protocol.stomp.StompConnection"/>
		<reference type="org.hornetq.core.protocol.stomp.StompException"/>
		<reference type="org.hornetq.core.protocol.stomp.Stomp$Headers$Subscribe$AckModeValues"/>
		<reference type="org.hornetq.core.protocol.stomp.Stomp$Headers"/>
		<reference type="org.hornetq.spi.core.remoting.Connection"/>
	</type>
	<type name="org.hornetq.core.journal.impl.AbstractSequentialFile$LocalBufferObserver" internal="true" project="trunk" package="org.hornetq.core.journal.impl">
		<reference type="org.hornetq.core.journal.impl.AbstractSequentialFile$DelegateCallback"/>
		<reference type="java.lang.Integer"/>
		<reference type="java.nio.ByteBuffer"/>
		<reference type="org.hornetq.core.journal.IOAsyncTask"/>
		<reference type="org.hornetq.core.journal.impl.TimedBufferObserver"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.core.journal.impl.AbstractSequentialFile"/>
	</type>
	<type name="org.hornetq.ra.HornetQRAMessageProducer" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="javax.jms.Message"/>
		<reference type="org.hornetq.ra.HornetQRASession"/>
		<reference type="javax.jms.Destination"/>
		<reference type="javax.jms.MessageProducer"/>
		<reference type="javax.jms.JMSException"/>
	</type>
	<type name="org.hornetq.ra.HornetQRAConnectionManager" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="javax.resource.spi.ManagedConnection"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Object"/>
		<reference type="javax.resource.spi.ConnectionRequestInfo"/>
		<reference type="javax.resource.spi.ManagedConnectionFactory"/>
		<reference type="javax.resource.ResourceException"/>
		<reference type="javax.resource.spi.ConnectionManager"/>
	</type>
	<type name="java.io.FileInputStream" internal="false" project="rt.jar" package="java.io">
	</type>
	<type name="org.hornetq.core.client.impl.ClientProducerCreditsImpl" internal="true" project="trunk" package="org.hornetq.core.client.impl">
		<reference type="java.lang.InterruptedException"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.client.impl.ClientProducerCredits"/>
		<reference type="java.lang.Math"/>
		<reference type="java.lang.Integer"/>
		<reference type="java.util.concurrent.Semaphore"/>
		<reference type="org.hornetq.core.client.impl.ClientSessionInternal"/>
	</type>
	<type name="org.hornetq.api.core.PropertyConversionException" internal="true" project="trunk" package="org.hornetq.api.core">
		<reference type="java.lang.RuntimeException"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="java.lang.StringBuffer" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.hornetq.utils.concurrent.Deque" internal="true" project="trunk" package="org.hornetq.utils.concurrent">
		<reference type="java.lang.Object"/>
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.SessionBindingQueryMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="org.hornetq.jms.client.HornetQBytesMessage" internal="true" project="trunk" package="org.hornetq.jms.client">
		<reference type="java.lang.Short"/>
		<reference type="java.lang.Math"/>
		<reference type="java.lang.Integer"/>
		<reference type="java.lang.Long"/>
		<reference type="java.lang.Character"/>
		<reference type="java.lang.Double"/>
		<reference type="java.lang.Byte"/>
		<reference type="javax.jms.MessageEOFException"/>
		<reference type="java.lang.IndexOutOfBoundsException"/>
		<reference type="java.lang.Float"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="java.lang.Override"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="javax.jms.MessageFormatException"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.client.ClientSession"/>
		<reference type="org.hornetq.jms.client.HornetQMessage"/>
		<reference type="java.lang.String"/>
		<reference type="javax.jms.BytesMessage"/>
		<reference type="java.lang.Object"/>
		<reference type="java.lang.Boolean"/>
		<reference type="org.hornetq.api.core.Message"/>
		<reference type="org.hornetq.api.core.client.ClientMessage"/>
		<reference type="java.lang.NullPointerException"/>
	</type>
	<type name="java.net.URI" internal="false" project="rt.jar" package="java.net">
	</type>
	<type name="javax.jms.TopicPublisher" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.core.protocol.core.impl.wireformat.SessionConsumerCloseMessage" internal="false" project="trunk" package="org.hornetq.core.protocol.core.impl.wireformat">
	</type>
	<type name="org.hornetq.core.server.impl.MessageReferenceImpl" internal="true" project="trunk" package="org.hornetq.core.server.impl">
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.core.server.MessageReference"/>
		<reference type="org.hornetq.utils.MemorySize"/>
		<reference type="org.hornetq.core.server.Queue"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.paging.impl.PagingStoreImpl" internal="true" project="trunk" package="org.hornetq.core.paging.impl">
		<reference type="org.hornetq.core.paging.PagingManager"/>
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="java.util.concurrent.CountDownLatch"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="java.lang.Integer"/>
		<reference type="java.util.concurrent.locks.ReentrantLock"/>
		<reference type="org.hornetq.core.persistence.StorageManager"/>
		<reference type="java.util.concurrent.locks.ReentrantReadWriteLock"/>
		<reference type="org.hornetq.core.settings.impl.AddressSettings"/>
		<reference type="org.hornetq.core.paging.PagedMessage"/>
		<reference type="java.util.concurrent.Executor"/>
		<reference type="org.hornetq.core.postoffice.DuplicateIDCache"/>
		<reference type="org.hornetq.core.paging.impl.PageImpl"/>
		<reference type="java.util.concurrent.locks.ReadWriteLock"/>
		<reference type="org.hornetq.core.paging.impl.PagingStoreImpl$DepageRunnable"/>
		<reference type="java.util.concurrent.TimeUnit"/>
		<reference type="org.hornetq.core.postoffice.PostOffice"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.core.journal.SequentialFile"/>
		<reference type="java.util.concurrent.atomic.AtomicInteger"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.settings.impl.AddressFullMessagePolicy"/>
		<reference type="java.lang.Runnable"/>
		<reference type="org.hornetq.core.journal.SequentialFileFactory"/>
		<reference type="org.hornetq.core.paging.Page"/>
		<reference type="java.lang.String"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.core.paging.impl.PagingStoreImpl$OurRunnable"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.Throwable"/>
		<reference type="java.util.concurrent.atomic.AtomicBoolean"/>
		<reference type="org.hornetq.core.paging.impl.TestSupportPageStore"/>
		<reference type="java.text.DecimalFormat"/>
		<reference type="java.util.concurrent.atomic.AtomicLong"/>
		<reference type="org.hornetq.core.paging.PagingStoreFactory"/>
	</type>
	<type name="org.hornetq.core.paging.impl.PagingStoreFactoryNIO" internal="true" project="trunk" package="org.hornetq.core.paging.impl">
		<reference type="org.hornetq.core.paging.PagingManager"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.io.BufferedReader"/>
		<reference type="java.io.BufferedWriter"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.io.FileOutputStream"/>
		<reference type="java.io.OutputStreamWriter"/>
		<reference type="org.hornetq.utils.UUIDGenerator"/>
		<reference type="org.hornetq.core.persistence.StorageManager"/>
		<reference type="org.hornetq.core.paging.PagingStore"/>
		<reference type="org.hornetq.core.settings.impl.AddressSettings"/>
		<reference type="org.hornetq.core.paging.impl.PagingStoreImpl"/>
		<reference type="java.io.FileInputStream"/>
		<reference type="org.hornetq.core.journal.SequentialFileFactory"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.journal.impl.NIOSequentialFileFactory"/>
		<reference type="java.util.Collections"/>
		<reference type="org.hornetq.utils.ExecutorFactory"/>
		<reference type="java.io.InputStreamReader"/>
		<reference type="org.hornetq.core.paging.PagingStoreFactory"/>
		<reference type="java.io.File"/>
		<reference type="org.hornetq.core.postoffice.PostOffice"/>
	</type>
	<type name="org.hornetq.core.remoting.impl.netty.HornetQChannelHandler" internal="true" project="trunk" package="org.hornetq.core.remoting.impl.netty">
		<reference type="org.jboss.netty.channel.ExceptionEvent"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.jboss.netty.channel.ChannelStateEvent"/>
		<reference type="org.jboss.netty.channel.group.ChannelGroup"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.spi.core.remoting.BufferHandler"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.jboss.netty.channel.ChannelHandlerContext"/>
		<reference type="org.hornetq.core.buffers.impl.ChannelBufferWrapper"/>
		<reference type="org.jboss.netty.channel.SimpleChannelHandler"/>
		<reference type="org.jboss.netty.buffer.ChannelBuffer"/>
		<reference type="org.jboss.netty.channel.MessageEvent"/>
		<reference type="org.hornetq.spi.core.remoting.ConnectionLifeCycleListener"/>
		<reference type="java.lang.Override"/>
	</type>
	<type name="org.hornetq.core.journal.impl.NIOSequentialFile" internal="true" project="trunk" package="org.hornetq.core.journal.impl">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.core.journal.SequentialFile"/>
		<reference type="java.io.RandomAccessFile"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="java.util.concurrent.Executor"/>
		<reference type="java.lang.Runnable"/>
		<reference type="org.hornetq.core.journal.SequentialFileFactory"/>
		<reference type="java.lang.String"/>
		<reference type="java.lang.Object"/>
		<reference type="java.lang.Throwable"/>
		<reference type="java.nio.ByteBuffer"/>
		<reference type="org.hornetq.core.journal.IOAsyncTask"/>
		<reference type="java.nio.channels.FileChannel"/>
		<reference type="java.util.concurrent.Semaphore"/>
		<reference type="java.lang.Override"/>
		<reference type="java.util.concurrent.TimeUnit"/>
		<reference type="java.io.File"/>
		<reference type="java.lang.NullPointerException"/>
		<reference type="org.hornetq.core.journal.impl.AbstractSequentialFile"/>
	</type>
	<type name="java.net.URL" internal="false" project="rt.jar" package="java.net">
	</type>
	<type name="org.jboss.netty.channel.group.DefaultChannelGroup" internal="false" project="netty.jar" package="org.jboss.netty.channel.group">
	</type>
	<type name="javax.resource.spi.IllegalStateException" internal="false" project="jboss-jca-api.jar" package="javax.resource.spi">
	</type>
	<type name="javax.resource.spi.SecurityException" internal="false" project="jboss-jca-api.jar" package="javax.resource.spi">
	</type>
	<type name="org.hornetq.utils.concurrent.LinkedBlockingDeque$Node" internal="true" project="trunk" package="org.hornetq.utils.concurrent">
	</type>
	<type name="org.hornetq.core.journal.impl.AIOSequentialFileFactory$ReuseBuffersController" internal="true" project="trunk" package="org.hornetq.core.journal.impl">
		<reference type="org.hornetq.core.journal.impl.AbstractSequentialFileFactory"/>
		<reference type="org.hornetq.core.journal.impl.AIOSequentialFileFactory"/>
		<reference type="org.hornetq.core.asyncio.BufferCallback"/>
		<reference type="java.nio.ByteBuffer"/>
		<reference type="java.lang.System"/>
		<reference type="org.hornetq.core.asyncio.impl.AsynchronousFileImpl"/>
		<reference type="org.hornetq.core.journal.impl.AIOSequentialFileFactory$ReuseBuffersController$LocalBufferCallback"/>
	</type>
	<type name="org.hornetq.core.server.impl.DivertImpl" internal="true" project="trunk" package="org.hornetq.core.server.impl">
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.server.Divert"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.persistence.StorageManager"/>
		<reference type="org.hornetq.core.server.RoutingContext"/>
		<reference type="java.lang.Override"/>
		<reference type="org.hornetq.core.server.cluster.Transformer"/>
		<reference type="org.hornetq.core.filter.Filter"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.core.postoffice.PostOffice"/>
	</type>
	<type name="org.hornetq.integration.bootstrap.HornetQBootstrapServer" internal="true" project="trunk" package="org.hornetq.integration.bootstrap">
		<reference type="java.lang.Runtime"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.io.ByteArrayInputStream"/>
		<reference type="org.hornetq.integration.bootstrap.HornetQBootstrapServer$Shutdown"/>
		<reference type="java.net.URL"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.io.PrintStream"/>
		<reference type="java.util.TimerTask"/>
		<reference type="java.lang.String"/>
		<reference type="org.jboss.kernel.plugins.deployment.xml.BeanXMLDeployer"/>
		<reference type="java.util.Timer"/>
		<reference type="org.jboss.kernel.spi.config.KernelConfig"/>
		<reference type="java.lang.ClassLoader"/>
		<reference type="java.lang.Throwable"/>
		<reference type="java.lang.System"/>
		<reference type="java.io.ByteArrayOutputStream"/>
		<reference type="org.jboss.kernel.plugins.bootstrap.basic.BasicBootstrap"/>
		<reference type="java.lang.Thread"/>
		<reference type="java.lang.RuntimeException"/>
		<reference type="org.jboss.kernel.spi.deployment.KernelDeployment"/>
		<reference type="java.lang.Override"/>
		<reference type="java.io.File"/>
		<reference type="java.util.Properties"/>
	</type>
</dependencyAnalysis>

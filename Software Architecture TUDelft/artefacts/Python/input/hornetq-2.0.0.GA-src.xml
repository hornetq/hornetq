<?xml version="1.0" encoding="UTF-8"?>
<!-- Generated by CodePro Server -->

<dependencyAnalysis>
	<package name="org.hornetq.utils.json" internal="true"/>
	<package name="org.hornetq.jms.bridge" internal="true"/>
	<package name="org.hornetq.ra" internal="true"/>
	<package name="org.hornetq.core.persistence" internal="true"/>
	<package name="org.hornetq.api.core" internal="true"/>
	<package name="org.hornetq.utils.concurrent" internal="true"/>
	<package name="org.hornetq.core.message" internal="true"/>
	<package name="org.hornetq.core.logging" internal="true"/>
	<package name="org.hornetq.core.version" internal="true"/>
	<package name="org.hornetq.core.server" internal="true"/>
	<package name="org.hornetq.service" internal="true"/>
	<package name="org.hornetq.core.replication" internal="true"/>
	<package name="org.hornetq.jms.server" internal="true"/>
	<package name="org.hornetq.core.list" internal="true"/>
	<package name="org.hornetq.jms.referenceable" internal="true"/>
	<package name="org.hornetq.core.deployers" internal="true"/>
	<package name="org.hornetq.utils" internal="true"/>
	<package name="org.hornetq.integration.logging" internal="true"/>
	<package name="org.hornetq.core.postoffice" internal="true"/>
	<package name="org.hornetq.jms.client" internal="true"/>
	<package name="org.hornetq.core.transaction" internal="true"/>
	<package name="org.hornetq.core.security" internal="true"/>
	<package name="org.hornetq.core.paging" internal="true"/>
	<package name="org.hornetq.core.cluster" internal="true"/>
	<package name="org.hornetq.core.journal" internal="true"/>
	<package name="org.hornetq.core.remoting" internal="true"/>
	<package name="org.hornetq.core.config" internal="true"/>
	<package name="org.hornetq.integration.bootstrap" internal="true"/>
	<package name="org.hornetq.ra.inflow" internal="true"/>
	<package name="org.hornetq.api.jms" internal="true"/>
	<package name="org.hornetq.core.settings" internal="true"/>
	<package name="org.hornetq.core.asyncio" internal="true"/>
	<type name="org.hornetq.core.list.PriorityHeadInsertableQueue" internal="true" project="trunk" package="org.hornetq.core.list">
	</type>
	<type name="org.hornetq.jms.client.HornetQTemporaryTopic" internal="true" project="trunk" package="org.hornetq.jms.client">
		<reference type="java.lang.Override"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="javax.jms.TemporaryTopic"/>
		<reference type="org.hornetq.jms.client.HornetQDestination"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.jms.client.HornetQTopic"/>
		<reference type="org.hornetq.jms.client.HornetQSession"/>
	</type>
	<type name="org.hornetq.core.server.ScheduledDeliveryHandler" internal="true" project="trunk" package="org.hornetq.core.server">
		<reference type="org.hornetq.core.filter.Filter"/>
		<reference type="org.hornetq.core.server.MessageReference"/>
	</type>
	<type name="java.io.BufferedReader" internal="false" project="rt.jar" package="java.io">
	</type>
	<type name="org.hornetq.core.security.Role" internal="true" project="trunk" package="org.hornetq.core.security">
		<reference type="java.lang.Override"/>
		<reference type="java.io.Serializable"/>
		<reference type="java.lang.StringBuffer"/>
		<reference type="java.lang.String"/>
		<reference type="java.lang.Object"/>
		<reference type="java.lang.NullPointerException"/>
	</type>
	<type name="org.hornetq.jms.client.HornetQMessageProducer" internal="true" project="trunk" package="org.hornetq.jms.client">
		<reference type="javax.jms.Topic"/>
		<reference type="org.hornetq.jms.client.HornetQConnection"/>
		<reference type="org.hornetq.jms.client.HornetQDestination"/>
		<reference type="java.lang.Exception"/>
		<reference type="javax.jms.Message"/>
		<reference type="org.hornetq.jms.client.HornetQTextMessage"/>
		<reference type="org.hornetq.jms.client.JMSExceptionHelper"/>
		<reference type="java.lang.Override"/>
		<reference type="javax.jms.QueueSender"/>
		<reference type="org.hornetq.jms.client.HornetQMapMessage"/>
		<reference type="javax.jms.MessageProducer"/>
		<reference type="javax.jms.Queue"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="javax.jms.Destination"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="javax.jms.BytesMessage"/>
		<reference type="org.hornetq.api.core.client.ClientSession"/>
		<reference type="javax.jms.DeliveryMode"/>
		<reference type="javax.jms.TopicPublisher"/>
		<reference type="org.hornetq.jms.client.HornetQObjectMessage"/>
		<reference type="org.hornetq.jms.client.HornetQMessage"/>
		<reference type="javax.jms.IllegalStateException"/>
		<reference type="java.lang.System"/>
		<reference type="org.hornetq.jms.client.HornetQBytesMessage"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.jms.client.HornetQStreamMessage"/>
		<reference type="javax.jms.MapMessage"/>
		<reference type="org.hornetq.api.core.client.ClientProducer"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="javax.jms.TextMessage"/>
		<reference type="javax.jms.StreamMessage"/>
		<reference type="java.lang.String"/>
		<reference type="javax.jms.ObjectMessage"/>
		<reference type="org.hornetq.utils.UUIDGenerator"/>
		<reference type="org.hornetq.api.core.client.ClientMessage"/>
		<reference type="javax.jms.InvalidDestinationException"/>
	</type>
	<type name="org.hornetq.core.remoting.impl.wireformat.SessionConsumerCloseMessage" internal="false" project="trunk" package="org.hornetq.core.remoting.impl.wireformat">
	</type>
	<type name="javax.xml.transform.dom.DOMSource" internal="false" project="rt.jar" package="javax.xml.transform.dom">
	</type>
	<type name="org.hornetq.api.core.client.ClientProducer" internal="false" project="trunk" package="org.hornetq.api.core.client">
	</type>
	<type name="java.security.SecureRandom" internal="false" project="rt.jar" package="java.security">
	</type>
	<type name="org.hornetq.utils.TokenBucketLimiterImpl" internal="true" project="trunk" package="org.hornetq.utils">
		<reference type="org.hornetq.utils.TokenBucketLimiter"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.lang.System"/>
		<reference type="java.lang.Thread"/>
	</type>
	<type name="javax.xml.XMLConstants" internal="false" project="rt.jar" package="javax.xml">
	</type>
	<type name="java.io.Serializable" internal="false" project="rt.jar" package="java.io">
	</type>
	<type name="org.xml.sax.SAXException" internal="false" project="rt.jar" package="org.xml.sax">
	</type>
	<type name="javax.jms.MessageConsumer" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.core.server.HandleStatus" internal="true" project="trunk" package="org.hornetq.core.server">
	</type>
	<type name="org.hornetq.integration.logging.Log4jLogDelegate" internal="true" project="trunk" package="org.hornetq.integration.logging">
		<reference type="java.lang.Object"/>
		<reference type="java.lang.Throwable"/>
		<reference type="org.apache.log4j.Logger"/>
		<reference type="org.hornetq.spi.core.logging.LogDelegate"/>
	</type>
	<type name="javax.jms.Destination" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.core.transaction.TransactionPropertyIndexes" internal="true" project="trunk" package="org.hornetq.core.transaction">
	</type>
	<type name="javax.jms.XASession" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="javax.resource.spi.ConnectionManager" internal="false" project="jboss-jca-api.jar" package="javax.resource.spi">
	</type>
	<type name="org.hornetq.jms.bridge.JMSBridgeControl" internal="true" project="trunk" package="org.hornetq.jms.bridge">
		<reference type="org.hornetq.api.core.management.HornetQComponentControl"/>
		<reference type="java.lang.String"/>
		<reference type="java.lang.Exception"/>
	</type>
	<type name="javax.jms.InvalidSelectorException" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.jboss.kernel.spi.config.KernelConfig" internal="false" project="jboss-kernel.jar" package="org.jboss.kernel.spi.config">
	</type>
	<type name="org.hornetq.core.remoting.impl.wireformat.SessionSendContinuationMessage" internal="false" project="trunk" package="org.hornetq.core.remoting.impl.wireformat">
	</type>
	<type name="java.util.concurrent.atomic.AtomicBoolean" internal="false" project="rt.jar" package="java.util.concurrent.atomic">
	</type>
	<type name="org.hornetq.ra.HornetQRAStreamMessage" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="javax.jms.JMSException"/>
		<reference type="org.hornetq.ra.HornetQRASession"/>
		<reference type="java.lang.String"/>
		<reference type="javax.jms.StreamMessage"/>
		<reference type="org.hornetq.ra.HornetQRAMessage"/>
		<reference type="java.lang.Object"/>
	</type>
	<type name="org.hornetq.service.HornetQStarterServiceMBean" internal="true" project="trunk" package="org.hornetq.service">
		<reference type="org.hornetq.service.HornetQFileConfigurationServiceMBean"/>
		<reference type="org.hornetq.core.server.HornetQServer"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.service.JBossASSecurityManagerServiceMBean"/>
	</type>
	<type name="org.hornetq.api.jms.HornetQJMSClient" internal="true" project="trunk" package="org.hornetq.api.jms">
		<reference type="org.hornetq.jms.client.HornetQConnectionFactory"/>
		<reference type="javax.jms.Topic"/>
		<reference type="org.hornetq.jms.client.HornetQQueue"/>
		<reference type="javax.jms.ConnectionFactory"/>
		<reference type="javax.jms.Queue"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.api.core.TransportConfiguration"/>
		<reference type="org.hornetq.jms.client.HornetQTopic"/>
	</type>
	<type name="org.hornetq.core.server.cluster.QueueConfiguration" internal="false" project="trunk" package="org.hornetq.core.server.cluster">
	</type>
	<type name="javax.jms.TemporaryTopic" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.utils.ExecutorFactory" internal="true" project="trunk" package="org.hornetq.utils">
		<reference type="java.util.concurrent.Executor"/>
	</type>
	<type name="javax.jms.IllegalStateException" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="javax.jms.XAQueueConnectionFactory" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.core.postoffice.QueueInfo" internal="true" project="trunk" package="org.hornetq.core.postoffice">
		<reference type="java.io.Serializable"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
	</type>
	<type name="java.security.AccessController" internal="false" project="rt.jar" package="java.security">
	</type>
	<type name="javax.xml.parsers.DocumentBuilderFactory" internal="false" project="rt.jar" package="javax.xml.parsers">
	</type>
	<type name="org.hornetq.ra.HornetQRAProperties" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="java.io.Serializable"/>
		<reference type="java.lang.String"/>
		<reference type="java.lang.Boolean"/>
		<reference type="org.hornetq.ra.ConnectionFactoryProperties"/>
	</type>
	<type name="org.hornetq.ra.inflow.HornetQActivation" internal="true" project="trunk" package="org.hornetq.ra.inflow">
		<reference type="javax.jms.Topic"/>
		<reference type="org.hornetq.ra.inflow.HornetQMessageHandler"/>
		<reference type="java.lang.RuntimeException"/>
		<reference type="javax.naming.Context"/>
		<reference type="org.hornetq.jms.client.HornetQDestination"/>
		<reference type="java.lang.Exception"/>
		<reference type="javax.jms.Message"/>
		<reference type="javax.resource.spi.work.WorkManager"/>
		<reference type="org.hornetq.api.jms.HornetQJMSClient"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.Class"/>
		<reference type="org.hornetq.ra.inflow.HornetQActivation$SetupActivation"/>
		<reference type="javax.jms.MessageListener"/>
		<reference type="javax.jms.Queue"/>
		<reference type="javax.jms.Destination"/>
		<reference type="javax.resource.spi.endpoint.MessageEndpointFactory"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.ra.inflow.HornetQActivationSpec"/>
		<reference type="java.lang.Throwable"/>
		<reference type="java.lang.reflect.Method"/>
		<reference type="org.hornetq.api.core.client.ClientSession"/>
		<reference type="org.hornetq.jms.client.HornetQConnectionFactory"/>
		<reference type="javax.resource.ResourceException"/>
		<reference type="java.lang.StringBuffer"/>
		<reference type="javax.naming.InitialContext"/>
		<reference type="org.hornetq.ra.Util"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.String"/>
		<reference type="java.util.concurrent.atomic.AtomicBoolean"/>
		<reference type="org.hornetq.ra.HornetQResourceAdapter"/>
	</type>
	<type name="org.hornetq.jms.client.HornetQConnection" internal="true" project="trunk" package="org.hornetq.jms.client">
	</type>
	<type name="javax.jms.BytesMessage" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="javax.jms.ConnectionMetaData" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.core.logging.Logger" internal="true" project="trunk" package="org.hornetq.core.logging">
		<reference type="java.lang.ClassLoader"/>
		<reference type="org.hornetq.core.logging.impl.JULLogDelegateFactory"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="org.hornetq.spi.core.logging.LogDelegateFactory"/>
		<reference type="java.lang.String"/>
		<reference type="java.lang.Object"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.lang.Throwable"/>
		<reference type="org.hornetq.spi.core.logging.LogDelegate"/>
		<reference type="java.lang.Thread"/>
		<reference type="java.lang.System"/>
	</type>
	<type name="javax.jms.ServerSessionPool" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.core.remoting.FailureListener" internal="true" project="trunk" package="org.hornetq.core.remoting">
		<reference type="org.hornetq.api.core.HornetQException"/>
	</type>
	<type name="org.hornetq.core.server.HornetQServer" internal="true" project="trunk" package="org.hornetq.core.server">
		<reference type="org.hornetq.core.server.QueueFactory"/>
		<reference type="org.hornetq.core.server.ServerSession"/>
		<reference type="org.hornetq.core.remoting.impl.wireformat.CreateSessionResponseMessage"/>
		<reference type="org.hornetq.core.management.impl.HornetQServerControlImpl"/>
		<reference type="org.hornetq.core.postoffice.PostOffice"/>
		<reference type="org.hornetq.core.replication.ReplicationEndpoint"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.security.Role"/>
		<reference type="org.hornetq.core.server.ActivateCallback"/>
		<reference type="org.hornetq.core.remoting.server.RemotingService"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.remoting.impl.wireformat.ReattachSessionResponseMessage"/>
		<reference type="org.hornetq.core.server.HornetQComponent"/>
		<reference type="javax.management.MBeanServer"/>
		<reference type="org.hornetq.core.server.cluster.ClusterManager"/>
		<reference type="org.hornetq.core.server.management.ManagementService"/>
		<reference type="org.hornetq.core.persistence.StorageManager"/>
		<reference type="org.hornetq.utils.ExecutorFactory"/>
		<reference type="org.hornetq.core.remoting.RemotingConnection"/>
		<reference type="org.hornetq.core.config.Configuration"/>
		<reference type="org.hornetq.core.settings.impl.AddressSettings"/>
		<reference type="org.hornetq.core.transaction.ResourceManager"/>
		<reference type="org.hornetq.core.server.Queue"/>
		<reference type="org.hornetq.spi.core.security.HornetQSecurityManager"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.core.server.group.GroupingHandler"/>
		<reference type="org.hornetq.core.remoting.Channel"/>
		<reference type="org.hornetq.core.version.Version"/>
	</type>
	<type name="javax.jms.QueueBrowser" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.core.remoting.impl.wireformat.SessionXAStartMessage" internal="false" project="trunk" package="org.hornetq.core.remoting.impl.wireformat">
	</type>
	<type name="org.hornetq.core.cluster.DiscoveryGroup" internal="true" project="trunk" package="org.hornetq.core.cluster">
		<reference type="org.hornetq.core.cluster.DiscoveryEntry"/>
		<reference type="org.hornetq.core.cluster.DiscoveryListener"/>
		<reference type="java.lang.String"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.management.NotificationService"/>
	</type>
	<type name="org.hornetq.ra.Util" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="java.lang.Integer"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="java.lang.Class"/>
		<reference type="javax.naming.Context"/>
		<reference type="java.lang.Long"/>
		<reference type="java.lang.Double"/>
		<reference type="java.lang.String"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.lang.Object"/>
		<reference type="java.lang.Boolean"/>
	</type>
	<type name="org.hornetq.ra.HornetQRAConnectionFactoryImpl" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="org.hornetq.jms.referenceable.ConnectionFactoryObjectFactory"/>
		<reference type="javax.jms.QueueConnection"/>
		<reference type="javax.jms.TopicConnection"/>
		<reference type="javax.naming.Reference"/>
		<reference type="javax.jms.XAQueueConnection"/>
		<reference type="org.hornetq.ra.HornetQRAConnectionFactory"/>
		<reference type="org.hornetq.ra.HornetQRASessionFactoryImpl"/>
		<reference type="org.hornetq.ra.HornetQRAManagedConnectionFactory"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="javax.jms.XAConnection"/>
		<reference type="javax.jms.Connection"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.ra.HornetQRAConnectionManager"/>
		<reference type="org.hornetq.jms.referenceable.SerializableObjectRefAddr"/>
		<reference type="javax.naming.NamingException"/>
		<reference type="javax.resource.spi.ConnectionManager"/>
		<reference type="javax.jms.XATopicConnection"/>
	</type>
	<type name="org.hornetq.core.remoting.impl.wireformat.SessionXAResumeMessage" internal="false" project="trunk" package="org.hornetq.core.remoting.impl.wireformat">
	</type>
	<type name="javax.jms.QueueConnectionFactory" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.core.server.HornetQComponent" internal="true" project="trunk" package="org.hornetq.core.server">
		<reference type="java.lang.Exception"/>
	</type>
	<type name="org.hornetq.core.server.ServerConsumer" internal="true" project="trunk" package="org.hornetq.core.server">
		<reference type="org.hornetq.core.transaction.Transaction"/>
		<reference type="org.hornetq.core.server.Queue"/>
		<reference type="org.hornetq.core.server.MessageReference"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.Consumer"/>
	</type>
	<type name="org.hornetq.core.remoting.impl.wireformat.RollbackMessage" internal="false" project="trunk" package="org.hornetq.core.remoting.impl.wireformat">
	</type>
	<type name="org.hornetq.core.server.management.ManagementService" internal="false" project="trunk" package="org.hornetq.core.server.management">
	</type>
	<type name="java.util.StringTokenizer" internal="false" project="rt.jar" package="java.util">
	</type>
	<type name="javax.resource.spi.ConnectionRequestInfo" internal="false" project="jboss-jca-api.jar" package="javax.resource.spi">
	</type>
	<type name="org.hornetq.core.paging.PageTransactionInfo" internal="true" project="trunk" package="org.hornetq.core.paging">
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.journal.EncodingSupport"/>
	</type>
	<type name="org.hornetq.core.journal.IOCompletion" internal="true" project="trunk" package="org.hornetq.core.journal">
		<reference type="org.hornetq.core.journal.IOAsyncTask"/>
	</type>
	<type name="org.hornetq.jms.client.HornetQDestination" internal="true" project="trunk" package="org.hornetq.jms.client">
		<reference type="java.lang.Object"/>
		<reference type="javax.naming.Reference"/>
		<reference type="java.lang.Override"/>
		<reference type="java.io.Serializable"/>
		<reference type="org.hornetq.jms.client.HornetQQueue"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="org.hornetq.jms.client.HornetQTemporaryTopic"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.jms.referenceable.SerializableObjectRefAddr"/>
		<reference type="javax.jms.Destination"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="javax.naming.NamingException"/>
		<reference type="org.hornetq.jms.referenceable.DestinationObjectFactory"/>
		<reference type="javax.naming.Referenceable"/>
		<reference type="org.hornetq.jms.client.HornetQTopic"/>
		<reference type="org.hornetq.jms.client.HornetQTemporaryQueue"/>
	</type>
	<type name="org.hornetq.core.filter.Filter" internal="false" project="trunk" package="org.hornetq.core.filter">
	</type>
	<type name="org.hornetq.api.core.client.ClientSessionFactory" internal="false" project="trunk" package="org.hornetq.api.core.client">
	</type>
	<type name="org.hornetq.core.remoting.CloseListener" internal="true" project="trunk" package="org.hornetq.core.remoting">
	</type>
	<type name="org.hornetq.ra.HornetQRAConnectionRequestInfo" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="org.hornetq.ra.Util"/>
		<reference type="java.lang.Integer"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.String"/>
		<reference type="javax.resource.spi.ConnectionRequestInfo"/>
		<reference type="java.lang.Object"/>
		<reference type="javax.jms.Session"/>
		<reference type="org.hornetq.ra.HornetQRAProperties"/>
	</type>
	<type name="org.hornetq.ra.HornetQRAXAResource" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="org.hornetq.ra.HornetQRAManagedConnection"/>
		<reference type="javax.transaction.xa.XAResource"/>
		<reference type="javax.transaction.xa.XAException"/>
		<reference type="javax.transaction.xa.Xid"/>
	</type>
	<type name="org.hornetq.core.paging.PagedMessage" internal="true" project="trunk" package="org.hornetq.core.paging">
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="org.hornetq.core.persistence.StorageManager"/>
		<reference type="org.hornetq.core.journal.EncodingSupport"/>
	</type>
	<type name="org.hornetq.core.transaction.TransactionOperation" internal="true" project="trunk" package="org.hornetq.core.transaction">
		<reference type="org.hornetq.core.transaction.Transaction"/>
		<reference type="java.lang.Exception"/>
	</type>
	<type name="org.hornetq.ra.inflow.HornetQActivationSpec" internal="true" project="trunk" package="org.hornetq.ra.inflow">
		<reference type="javax.resource.ResourceException"/>
		<reference type="java.lang.StringBuffer"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.ra.ConnectionFactoryProperties"/>
		<reference type="javax.resource.spi.ResourceAdapter"/>
		<reference type="org.hornetq.ra.Util"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Integer"/>
		<reference type="java.lang.Override"/>
		<reference type="javax.resource.spi.ActivationSpec"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="java.lang.String"/>
		<reference type="javax.resource.spi.InvalidPropertyException"/>
		<reference type="org.hornetq.ra.HornetQResourceAdapter"/>
		<reference type="java.lang.Boolean"/>
		<reference type="javax.jms.Session"/>
	</type>
	<type name="javax.resource.NotSupportedException" internal="false" project="jboss-jca-api.jar" package="javax.resource">
	</type>
	<type name="javax.jms.ResourceAllocationException" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.service.HornetQFileConfigurationServiceMBean" internal="true" project="trunk" package="org.hornetq.service">
		<reference type="java.lang.String"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.config.Configuration"/>
	</type>
	<type name="java.io.ObjectOutputStream" internal="false" project="rt.jar" package="java.io">
	</type>
	<type name="org.w3c.dom.NamedNodeMap" internal="false" project="rt.jar" package="org.w3c.dom">
	</type>
	<type name="javax.resource.spi.security.PasswordCredential" internal="false" project="jboss-jca-api.jar" package="javax.resource.spi.security">
	</type>
	<type name="org.hornetq.core.filter.impl.FilterImpl" internal="false" project="trunk" package="org.hornetq.core.filter.impl">
	</type>
	<type name="javax.resource.spi.ResourceAdapterAssociation" internal="false" project="jboss-jca-api.jar" package="javax.resource.spi">
	</type>
	<type name="javax.jms.TopicConnectionFactory" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="javax.transaction.TransactionManager" internal="false" project="jboss-transaction-api.jar" package="javax.transaction">
	</type>
	<type name="org.hornetq.core.remoting.server.RemotingService" internal="false" project="trunk" package="org.hornetq.core.remoting.server">
	</type>
	<type name="org.hornetq.core.server.LargeServerMessage" internal="true" project="trunk" package="org.hornetq.core.server">
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="java.lang.Exception"/>
	</type>
	<type name="org.hornetq.core.replication.ReplicationEndpoint" internal="true" project="trunk" package="org.hornetq.core.replication">
		<reference type="org.hornetq.core.journal.JournalLoadInformation"/>
		<reference type="org.hornetq.core.remoting.ChannelHandler"/>
		<reference type="org.hornetq.core.remoting.Channel"/>
		<reference type="org.hornetq.core.server.HornetQComponent"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
	</type>
	<type name="javax.jms.DeliveryMode" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.core.transaction.Transaction$State" internal="true" project="trunk" package="org.hornetq.core.transaction">
	</type>
	<type name="org.hornetq.core.remoting.impl.wireformat.SessionConsumerFlowCreditMessage" internal="false" project="trunk" package="org.hornetq.core.remoting.impl.wireformat">
	</type>
	<type name="java.lang.IllegalStateException" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.hornetq.core.transaction.ResourceManager" internal="true" project="trunk" package="org.hornetq.core.transaction">
		<reference type="org.hornetq.core.transaction.Transaction"/>
		<reference type="java.lang.Long"/>
		<reference type="javax.transaction.xa.Xid"/>
		<reference type="org.hornetq.core.server.HornetQComponent"/>
	</type>
	<type name="org.hornetq.core.server.management.NotificationService" internal="false" project="trunk" package="org.hornetq.core.server.management">
	</type>
	<type name="org.hornetq.core.postoffice.PostOffice" internal="true" project="trunk" package="org.hornetq.core.postoffice">
		<reference type="org.hornetq.core.postoffice.DuplicateIDCache"/>
		<reference type="org.hornetq.core.paging.PagingManager"/>
		<reference type="org.hornetq.core.server.MessageReference"/>
		<reference type="java.lang.Object"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.RoutingContext"/>
		<reference type="org.hornetq.core.transaction.Transaction"/>
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="org.hornetq.core.server.Queue"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.server.HornetQComponent"/>
		<reference type="org.hornetq.core.postoffice.Binding"/>
		<reference type="org.hornetq.core.postoffice.Bindings"/>
	</type>
	<type name="org.hornetq.core.security.SecurityStore" internal="true" project="trunk" package="org.hornetq.core.security">
		<reference type="org.hornetq.core.server.ServerSession"/>
		<reference type="org.hornetq.core.security.CheckType"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.Exception"/>
	</type>
	<type name="javax.jms.QueueReceiver" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="javax.jms.TextMessage" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.core.list.PriorityLinkedList" internal="true" project="trunk" package="org.hornetq.core.list">
	</type>
	<type name="javax.transaction.xa.XAResource" internal="false" project="rt.jar" package="javax.transaction.xa">
	</type>
	<type name="javax.jms.JMSSecurityException" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.core.persistence.GroupingInfo" internal="true" project="trunk" package="org.hornetq.core.persistence">
		<reference type="org.hornetq.api.core.SimpleString"/>
	</type>
	<type name="javax.resource.spi.ConnectionEvent" internal="false" project="jboss-jca-api.jar" package="javax.resource.spi">
	</type>
	<type name="java.lang.NumberFormatException" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.hornetq.ra.HornetQRASessionFactory" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="javax.jms.QueueConnection"/>
		<reference type="javax.jms.TemporaryQueue"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="javax.jms.TemporaryTopic"/>
		<reference type="javax.jms.XAConnection"/>
		<reference type="javax.jms.Connection"/>
		<reference type="org.hornetq.ra.HornetQRASession"/>
		<reference type="java.lang.String"/>
		<reference type="javax.jms.TopicConnection"/>
		<reference type="javax.jms.XATopicConnection"/>
		<reference type="javax.jms.XAQueueConnection"/>
	</type>
	<type name="org.hornetq.core.remoting.impl.wireformat.CreateSessionResponseMessage" internal="false" project="trunk" package="org.hornetq.core.remoting.impl.wireformat">
	</type>
	<type name="org.hornetq.utils.XMLUtil" internal="true" project="trunk" package="org.hornetq.utils">
		<reference type="java.lang.Long"/>
		<reference type="javax.xml.validation.SchemaFactory"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.lang.Object"/>
		<reference type="java.util.ArrayList"/>
		<reference type="java.lang.Thread"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="org.w3c.dom.Node"/>
		<reference type="java.io.InputStreamReader"/>
		<reference type="java.lang.Double"/>
		<reference type="java.lang.Boolean"/>
		<reference type="org.w3c.dom.NamedNodeMap"/>
		<reference type="java.lang.NumberFormatException"/>
		<reference type="org.xml.sax.SAXException"/>
		<reference type="java.lang.reflect.Method"/>
		<reference type="javax.xml.validation.Validator"/>
		<reference type="org.w3c.dom.Document"/>
		<reference type="java.lang.StringBuffer"/>
		<reference type="javax.xml.XMLConstants"/>
		<reference type="java.io.Reader"/>
		<reference type="javax.xml.validation.Schema"/>
		<reference type="java.io.StringReader"/>
		<reference type="javax.xml.transform.dom.DOMSource"/>
		<reference type="java.util.List"/>
		<reference type="java.lang.System"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Integer"/>
		<reference type="org.w3c.dom.NodeList"/>
		<reference type="org.xml.sax.InputSource"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="org.w3c.dom.Element"/>
		<reference type="javax.xml.parsers.DocumentBuilder"/>
		<reference type="javax.xml.parsers.DocumentBuilderFactory"/>
		<reference type="java.lang.String"/>
		<reference type="java.net.URL"/>
	</type>
	<type name="javax.naming.Reference" internal="false" project="rt.jar" package="javax.naming">
	</type>
	<type name="javax.jms.ConnectionConsumer" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="javax.naming.Binding" internal="false" project="rt.jar" package="javax.naming">
	</type>
	<type name="javax.xml.validation.Schema" internal="false" project="rt.jar" package="javax.xml.validation">
	</type>
	<type name="org.hornetq.utils.IDGenerator" internal="true" project="trunk" package="org.hornetq.utils">
	</type>
	<type name="javax.xml.validation.SchemaFactory" internal="false" project="rt.jar" package="javax.xml.validation">
	</type>
	<type name="java.lang.Thread" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="java.lang.reflect.Method" internal="false" project="rt.jar" package="java.lang.reflect">
	</type>
	<type name="java.lang.StringBuilder" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="java.util.Collections" internal="false" project="rt.jar" package="java.util">
	</type>
	<type name="org.hornetq.jms.client.HornetQStreamMessage" internal="true" project="trunk" package="org.hornetq.jms.client">
		<reference type="javax.jms.MessageFormatException"/>
		<reference type="java.lang.Character"/>
		<reference type="javax.jms.MessageEOFException"/>
		<reference type="java.lang.Long"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.core.client.impl.ClientMessageImpl"/>
		<reference type="java.lang.NullPointerException"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.IndexOutOfBoundsException"/>
		<reference type="java.lang.Double"/>
		<reference type="java.lang.Boolean"/>
		<reference type="org.hornetq.api.core.client.ClientSession"/>
		<reference type="java.lang.Short"/>
		<reference type="org.hornetq.jms.client.HornetQMessage"/>
		<reference type="java.lang.Math"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Byte"/>
		<reference type="java.lang.Integer"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.utils.DataConstants"/>
		<reference type="javax.jms.StreamMessage"/>
		<reference type="org.hornetq.api.core.client.ClientMessage"/>
		<reference type="java.lang.Float"/>
	</type>
	<type name="org.hornetq.jms.client.HornetQTemporaryQueue" internal="true" project="trunk" package="org.hornetq.jms.client">
		<reference type="javax.jms.TemporaryQueue"/>
		<reference type="java.lang.Override"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="org.hornetq.jms.client.HornetQQueue"/>
		<reference type="org.hornetq.jms.client.HornetQDestination"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.jms.client.HornetQSession"/>
	</type>
	<type name="org.hornetq.core.server.ServerMessage" internal="true" project="trunk" package="org.hornetq.core.server">
		<reference type="org.hornetq.core.server.Queue"/>
		<reference type="org.hornetq.core.paging.PagingStore"/>
		<reference type="org.hornetq.core.server.MessageReference"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.journal.EncodingSupport"/>
		<reference type="org.hornetq.core.message.impl.MessageInternal"/>
	</type>
	<type name="org.w3c.dom.Node" internal="false" project="rt.jar" package="org.w3c.dom">
	</type>
	<type name="javax.naming.NamingEnumeration" internal="false" project="rt.jar" package="javax.naming">
	</type>
	<type name="org.hornetq.core.server.MessageReference" internal="true" project="trunk" package="org.hornetq.core.server">
		<reference type="org.hornetq.core.server.Queue"/>
		<reference type="org.hornetq.core.server.ServerMessage"/>
	</type>
	<type name="java.lang.management.ManagementFactory" internal="false" project="rt.jar" package="java.lang.management">
	</type>
	<type name="org.hornetq.utils.ObjectInputStreamWithClassLoader" internal="true" project="trunk" package="org.hornetq.utils">
		<reference type="java.lang.ClassLoader"/>
		<reference type="java.io.InputStream"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.Class"/>
		<reference type="java.io.IOException"/>
		<reference type="java.lang.String"/>
		<reference type="java.lang.ClassNotFoundException"/>
		<reference type="java.io.ObjectStreamClass"/>
		<reference type="java.io.ObjectInputStream"/>
		<reference type="java.lang.Thread"/>
	</type>
	<type name="org.hornetq.core.paging.PagingStoreFactory" internal="true" project="trunk" package="org.hornetq.core.paging">
		<reference type="org.hornetq.core.paging.PagingStore"/>
		<reference type="org.hornetq.core.postoffice.PostOffice"/>
		<reference type="org.hornetq.core.paging.PagingManager"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.persistence.StorageManager"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.journal.SequentialFileFactory"/>
		<reference type="java.lang.InterruptedException"/>
		<reference type="org.hornetq.core.settings.impl.AddressSettings"/>
	</type>
	<type name="org.hornetq.utils.SimpleIDGenerator" internal="true" project="trunk" package="org.hornetq.utils">
		<reference type="java.lang.IllegalStateException"/>
		<reference type="java.lang.Long"/>
		<reference type="org.hornetq.utils.IDGenerator"/>
	</type>
	<type name="org.hornetq.core.journal.EncodingSupport" internal="true" project="trunk" package="org.hornetq.core.journal">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
	</type>
	<type name="org.hornetq.ra.HornetQRAQueueReceiver" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="org.hornetq.ra.HornetQRAMessageConsumer"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="org.hornetq.ra.HornetQRASession"/>
		<reference type="javax.jms.Queue"/>
		<reference type="javax.jms.QueueReceiver"/>
	</type>
	<type name="org.hornetq.utils.ConcurrentSet" internal="true" project="trunk" package="org.hornetq.utils">
	</type>
	<type name="javax.resource.spi.ConnectionEventListener" internal="false" project="jboss-jca-api.jar" package="javax.resource.spi">
	</type>
	<type name="org.hornetq.core.paging.PagingManager" internal="true" project="trunk" package="org.hornetq.core.paging">
		<reference type="org.hornetq.core.paging.PagingStore"/>
		<reference type="org.hornetq.core.postoffice.PostOffice"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.HornetQComponent"/>
		<reference type="org.hornetq.core.paging.PageTransactionInfo"/>
	</type>
	<type name="java.util.Collection" internal="false" project="rt.jar" package="java.util">
	</type>
	<type name="org.hornetq.service.HornetQJMSStarterServiceMBean" internal="true" project="trunk" package="org.hornetq.service">
		<reference type="org.hornetq.service.HornetQStarterServiceMBean"/>
		<reference type="java.lang.Exception"/>
	</type>
	<type name="org.hornetq.core.remoting.impl.wireformat.ReattachSessionResponseMessage" internal="false" project="trunk" package="org.hornetq.core.remoting.impl.wireformat">
	</type>
	<type name="org.hornetq.core.config.impl.Validators$Validator" internal="false" project="trunk" package="org.hornetq.core.config.impl">
	</type>
	<type name="org.hornetq.core.journal.SequentialFileFactory" internal="true" project="trunk" package="org.hornetq.core.journal">
		<reference type="java.lang.String"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.nio.ByteBuffer"/>
		<reference type="org.hornetq.core.journal.SequentialFile"/>
	</type>
	<type name="org.hornetq.core.server.group.GroupingHandler" internal="false" project="trunk" package="org.hornetq.core.server.group">
	</type>
	<type name="java.util.Date" internal="false" project="rt.jar" package="java.util">
	</type>
	<type name="org.hornetq.core.server.group.impl.GroupBinding" internal="false" project="trunk" package="org.hornetq.core.server.group.impl">
	</type>
	<type name="org.hornetq.core.cluster.DiscoveryListener" internal="true" project="trunk" package="org.hornetq.core.cluster">
	</type>
	<type name="java.io.ObjectInputStream" internal="false" project="rt.jar" package="java.io">
	</type>
	<type name="java.util.HashSet" internal="false" project="rt.jar" package="java.util">
	</type>
	<type name="java.lang.Exception" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.hornetq.core.settings.Mergeable" internal="true" project="trunk" package="org.hornetq.core.settings">
	</type>
	<type name="org.hornetq.api.core.client.ClientSession$BindingQuery" internal="false" project="trunk" package="org.hornetq.api.core.client">
	</type>
	<type name="java.lang.NullPointerException" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.hornetq.core.remoting.impl.wireformat.SessionXAEndMessage" internal="false" project="trunk" package="org.hornetq.core.remoting.impl.wireformat">
	</type>
	<type name="org.hornetq.core.server.impl.ServerProducerCreditManager" internal="false" project="trunk" package="org.hornetq.core.server.impl">
	</type>
	<type name="javax.jms.QueueConnection" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="java.io.InputStream" internal="false" project="rt.jar" package="java.io">
	</type>
	<type name="org.hornetq.core.remoting.impl.wireformat.SessionXAForgetMessage" internal="false" project="trunk" package="org.hornetq.core.remoting.impl.wireformat">
	</type>
	<type name="org.hornetq.ra.HornetQRAManagedConnection" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="javax.jms.ResourceAllocationException"/>
		<reference type="javax.resource.spi.IllegalStateException"/>
		<reference type="org.hornetq.ra.HornetQRAXAResource"/>
		<reference type="javax.resource.spi.SecurityException"/>
		<reference type="java.util.concurrent.locks.ReentrantLock"/>
		<reference type="java.lang.Object"/>
		<reference type="javax.resource.spi.ConnectionEvent"/>
		<reference type="javax.jms.XAConnection"/>
		<reference type="javax.jms.ExceptionListener"/>
		<reference type="javax.resource.spi.ManagedConnectionMetaData"/>
		<reference type="javax.jms.XATopicConnection"/>
		<reference type="java.lang.Throwable"/>
		<reference type="javax.security.auth.Subject"/>
		<reference type="javax.jms.QueueConnection"/>
		<reference type="javax.resource.ResourceException"/>
		<reference type="org.hornetq.ra.HornetQRAConnectionRequestInfo"/>
		<reference type="org.hornetq.ra.HornetQRASession"/>
		<reference type="java.io.PrintWriter"/>
		<reference type="javax.jms.TopicConnection"/>
		<reference type="javax.jms.XAQueueSession"/>
		<reference type="java.util.concurrent.TimeUnit"/>
		<reference type="javax.jms.XAQueueConnection"/>
		<reference type="javax.resource.spi.ManagedConnection"/>
		<reference type="org.hornetq.ra.HornetQRAConnectionFactory"/>
		<reference type="java.lang.InterruptedException"/>
		<reference type="org.hornetq.ra.HornetQRACredential"/>
		<reference type="javax.resource.spi.ConnectionEventListener"/>
		<reference type="java.lang.Integer"/>
		<reference type="org.hornetq.ra.HornetQRAManagedConnectionFactory"/>
		<reference type="java.util.Collections"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="javax.jms.TopicSession"/>
		<reference type="org.hornetq.ra.HornetQRAMetaData"/>
		<reference type="org.hornetq.ra.HornetQRALocalTransaction"/>
		<reference type="javax.jms.Connection"/>
		<reference type="javax.resource.spi.LocalTransaction"/>
		<reference type="java.lang.String"/>
		<reference type="javax.jms.XASession"/>
		<reference type="javax.transaction.xa.XAResource"/>
		<reference type="javax.resource.spi.ConnectionRequestInfo"/>
		<reference type="java.util.concurrent.atomic.AtomicBoolean"/>
		<reference type="javax.jms.Session"/>
		<reference type="javax.resource.NotSupportedException"/>
		<reference type="javax.jms.QueueSession"/>
		<reference type="javax.jms.XATopicSession"/>
	</type>
	<type name="org.hornetq.core.settings.HierarchicalRepositoryChangeListener" internal="true" project="trunk" package="org.hornetq.core.settings">
	</type>
	<type name="java.lang.reflect.Array" internal="false" project="rt.jar" package="java.lang.reflect">
	</type>
	<type name="org.hornetq.api.core.Pair" internal="true" project="trunk" package="org.hornetq.api.core">
		<reference type="java.lang.Override"/>
		<reference type="java.io.Serializable"/>
		<reference type="java.lang.String"/>
		<reference type="java.lang.Object"/>
	</type>
	<type name="org.w3c.dom.Element" internal="false" project="rt.jar" package="org.w3c.dom">
	</type>
	<type name="org.hornetq.api.core.SimpleString" internal="true" project="trunk" package="org.hornetq.api.core">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Override"/>
		<reference type="java.io.Serializable"/>
		<reference type="java.lang.IndexOutOfBoundsException"/>
		<reference type="java.lang.StringIndexOutOfBoundsException"/>
		<reference type="java.lang.CharSequence"/>
		<reference type="org.hornetq.utils.DataConstants"/>
		<reference type="java.lang.String"/>
		<reference type="java.lang.Object"/>
		<reference type="java.lang.System"/>
	</type>
	<type name="javax.management.ObjectName" internal="false" project="rt.jar" package="javax.management">
	</type>
	<type name="java.io.ObjectStreamClass" internal="false" project="rt.jar" package="java.io">
	</type>
	<type name="java.lang.CharSequence" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="javax.jms.Queue" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.w3c.dom.Document" internal="false" project="rt.jar" package="org.w3c.dom">
	</type>
	<type name="java.lang.Throwable" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="java.lang.Class" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="javax.jms.XAConnectionFactory" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="java.util.concurrent.Executor" internal="false" project="rt.jar" package="java.util.concurrent">
	</type>
	<type name="org.hornetq.core.journal.TestableJournal" internal="true" project="trunk" package="org.hornetq.core.journal">
		<reference type="org.hornetq.core.journal.Journal"/>
		<reference type="java.lang.String"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.journal.impl.JournalFile"/>
	</type>
	<type name="org.hornetq.core.server.ServerSession" internal="true" project="trunk" package="org.hornetq.core.server">
		<reference type="org.hornetq.core.remoting.impl.wireformat.SessionSendLargeMessage"/>
		<reference type="org.hornetq.core.remoting.impl.wireformat.SessionSendContinuationMessage"/>
		<reference type="org.hornetq.core.remoting.impl.wireformat.RollbackMessage"/>
		<reference type="org.hornetq.core.remoting.impl.wireformat.SessionSendMessage"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.core.remoting.impl.wireformat.SessionXARollbackMessage"/>
		<reference type="org.hornetq.core.remoting.impl.wireformat.SessionXAEndMessage"/>
		<reference type="org.hornetq.core.remoting.impl.wireformat.SessionExpiredMessage"/>
		<reference type="org.hornetq.core.remoting.impl.wireformat.SessionXAJoinMessage"/>
		<reference type="org.hornetq.core.remoting.impl.wireformat.SessionConsumerFlowCreditMessage"/>
		<reference type="org.hornetq.core.remoting.impl.wireformat.SessionXAResumeMessage"/>
		<reference type="org.hornetq.core.remoting.impl.wireformat.CreateQueueMessage"/>
		<reference type="org.hornetq.core.remoting.impl.wireformat.SessionRequestProducerCreditsMessage"/>
		<reference type="org.hornetq.core.remoting.impl.wireformat.SessionBindingQueryMessage"/>
		<reference type="org.hornetq.core.remoting.impl.wireformat.SessionAcknowledgeMessage"/>
		<reference type="org.hornetq.core.remoting.impl.wireformat.SessionQueueQueryMessage"/>
		<reference type="org.hornetq.core.remoting.impl.wireformat.SessionDeleteQueueMessage"/>
		<reference type="org.hornetq.core.remoting.impl.wireformat.SessionConsumerCloseMessage"/>
		<reference type="org.hornetq.core.server.ServerConsumer"/>
		<reference type="org.hornetq.core.remoting.RemotingConnection"/>
		<reference type="org.hornetq.core.remoting.impl.wireformat.SessionXAPrepareMessage"/>
		<reference type="org.hornetq.core.remoting.impl.wireformat.SessionXAStartMessage"/>
		<reference type="org.hornetq.core.remoting.impl.wireformat.SessionXAForgetMessage"/>
		<reference type="org.hornetq.core.server.impl.ServerSessionPacketHandler"/>
		<reference type="org.hornetq.core.remoting.Packet"/>
		<reference type="org.hornetq.core.remoting.impl.wireformat.SessionXACommitMessage"/>
		<reference type="org.hornetq.core.remoting.impl.wireformat.SessionForceConsumerDelivery"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.core.remoting.impl.wireformat.SessionXASetTimeoutMessage"/>
		<reference type="org.hornetq.core.remoting.Channel"/>
		<reference type="org.hornetq.core.remoting.impl.wireformat.SessionCreateConsumerMessage"/>
	</type>
	<type name="javax.jms.XAQueueSession" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="java.util.concurrent.locks.Lock" internal="false" project="rt.jar" package="java.util.concurrent.locks">
	</type>
	<type name="org.hornetq.utils.UUID" internal="true" project="trunk" package="org.hornetq.utils">
		<reference type="java.lang.Override"/>
		<reference type="java.lang.StringBuffer"/>
		<reference type="java.lang.String"/>
		<reference type="java.lang.Object"/>
	</type>
	<type name="java.lang.Object" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.jboss.netty.buffer.ChannelBuffers" internal="false" project="netty.jar" package="org.jboss.netty.buffer">
	</type>
	<type name="javax.jms.StreamMessage" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.utils.ConfigurationHelper" internal="true" project="trunk" package="org.hornetq.utils">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Integer"/>
		<reference type="java.lang.StringBuilder"/>
		<reference type="java.lang.Long"/>
		<reference type="java.lang.String"/>
		<reference type="java.lang.Object"/>
		<reference type="java.lang.Boolean"/>
	</type>
	<type name="javax.jms.XAConnection" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.core.postoffice.BindingsFactory" internal="true" project="trunk" package="org.hornetq.core.postoffice">
		<reference type="org.hornetq.core.postoffice.Bindings"/>
	</type>
	<type name="org.hornetq.core.cluster.DiscoveryEntry" internal="true" project="trunk" package="org.hornetq.core.cluster">
		<reference type="org.hornetq.api.core.TransportConfiguration"/>
	</type>
	<type name="org.hornetq.utils.json.JSONException" internal="true" project="trunk" package="org.hornetq.utils.json">
		<reference type="java.lang.Override"/>
		<reference type="java.lang.String"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.lang.Throwable"/>
	</type>
	<type name="javax.naming.spi.ObjectFactory" internal="false" project="rt.jar" package="javax.naming.spi">
	</type>
	<type name="javax.jms.Message" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.service.JBossASSecurityManagerServiceMBean" internal="true" project="trunk" package="org.hornetq.service">
		<reference type="org.hornetq.integration.jboss.security.JBossASSecurityManager"/>
	</type>
	<type name="org.hornetq.core.remoting.impl.wireformat.SessionCreateConsumerMessage" internal="false" project="trunk" package="org.hornetq.core.remoting.impl.wireformat">
	</type>
	<type name="org.hornetq.utils.TokenBucketLimiter" internal="true" project="trunk" package="org.hornetq.utils">
	</type>
	<type name="java.io.IOException" internal="false" project="rt.jar" package="java.io">
	</type>
	<type name="javax.naming.RefAddr" internal="false" project="rt.jar" package="javax.naming">
	</type>
	<type name="javax.jms.ExceptionListener" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="javax.security.auth.Subject" internal="false" project="rt.jar" package="javax.security.auth">
	</type>
	<type name="org.hornetq.core.journal.LoaderCallback" internal="true" project="trunk" package="org.hornetq.core.journal">
		<reference type="org.hornetq.core.journal.RecordInfo"/>
		<reference type="org.hornetq.core.journal.TransactionFailureCallback"/>
		<reference type="org.hornetq.core.journal.PreparedTransactionInfo"/>
	</type>
	<type name="javax.resource.spi.ResourceAdapter" internal="false" project="jboss-jca-api.jar" package="javax.resource.spi">
	</type>
	<type name="org.hornetq.api.core.client.ClientConsumer" internal="false" project="trunk" package="org.hornetq.api.core.client">
	</type>
	<type name="javax.jms.InvalidDestinationException" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.jms.bridge.JMSBridge" internal="true" project="trunk" package="org.hornetq.jms.bridge">
		<reference type="org.hornetq.jms.bridge.QualityOfServiceMode"/>
		<reference type="java.lang.String"/>
		<reference type="javax.transaction.TransactionManager"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.HornetQComponent"/>
		<reference type="org.hornetq.jms.bridge.ConnectionFactoryFactory"/>
		<reference type="org.hornetq.jms.bridge.DestinationFactory"/>
	</type>
	<type name="org.hornetq.core.remoting.CommandConfirmationHandler" internal="true" project="trunk" package="org.hornetq.core.remoting">
		<reference type="org.hornetq.core.remoting.Packet"/>
	</type>
	<type name="javax.naming.NameNotFoundException" internal="false" project="rt.jar" package="javax.naming">
	</type>
	<type name="javax.jms.TransactionInProgressException" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="java.lang.Override" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="java.lang.String" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.jboss.kernel.spi.deployment.KernelDeployment" internal="false" project="jboss-kernel.jar" package="org.jboss.kernel.spi.deployment">
	</type>
	<type name="org.hornetq.api.core.HornetQBuffers" internal="true" project="trunk" package="org.hornetq.api.core">
		<reference type="org.jboss.netty.buffer.ChannelBuffers"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="java.nio.ByteBuffer"/>
		<reference type="org.jboss.netty.buffer.ChannelBuffer"/>
		<reference type="org.hornetq.core.buffers.impl.ChannelBufferWrapper"/>
	</type>
	<type name="org.hornetq.core.postoffice.Bindings" internal="true" project="trunk" package="org.hornetq.core.postoffice">
		<reference type="org.hornetq.core.server.Queue"/>
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.postoffice.Binding"/>
		<reference type="org.hornetq.core.server.RoutingContext"/>
	</type>
	<type name="org.hornetq.api.core.Interceptor" internal="true" project="trunk" package="org.hornetq.api.core">
		<reference type="org.hornetq.core.remoting.Packet"/>
		<reference type="org.hornetq.core.remoting.RemotingConnection"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
	</type>
	<type name="javax.naming.Context" internal="false" project="rt.jar" package="javax.naming">
	</type>
	<type name="java.util.concurrent.TimeUnit" internal="false" project="rt.jar" package="java.util.concurrent">
	</type>
	<type name="org.hornetq.integration.jboss.security.JBossASSecurityManager" internal="false" project="trunk" package="org.hornetq.integration.jboss.security">
	</type>
	<type name="org.hornetq.core.config.impl.ConfigurationImpl" internal="false" project="trunk" package="org.hornetq.core.config.impl">
	</type>
	<type name="org.hornetq.jms.client.HornetQQueue" internal="true" project="trunk" package="org.hornetq.jms.client">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Override"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="javax.jms.Queue"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.jms.client.HornetQDestination"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
	</type>
	<type name="org.hornetq.spi.core.security.HornetQSecurityManagerImpl" internal="false" project="trunk" package="org.hornetq.spi.core.security">
	</type>
	<type name="java.lang.ThreadGroup" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="java.lang.Long" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="java.lang.System" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.hornetq.core.settings.impl.AddressFullMessagePolicy" internal="false" project="trunk" package="org.hornetq.core.settings.impl">
	</type>
	<type name="org.hornetq.core.security.CheckType" internal="true" project="trunk" package="org.hornetq.core.security">
	</type>
	<type name="org.hornetq.core.server.Delivery" internal="true" project="trunk" package="org.hornetq.core.server">
		<reference type="org.hornetq.core.server.MessageReference"/>
	</type>
	<type name="javax.jms.TopicSubscriber" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="javax.xml.validation.Validator" internal="false" project="rt.jar" package="javax.xml.validation">
	</type>
	<type name="java.util.Timer" internal="false" project="rt.jar" package="java.util">
	</type>
	<type name="org.hornetq.ra.HornetQRATextMessage" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="javax.jms.JMSException"/>
		<reference type="javax.jms.TextMessage"/>
		<reference type="org.hornetq.ra.HornetQRASession"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.ra.HornetQRAMessage"/>
	</type>
	<type name="java.util.Vector" internal="false" project="rt.jar" package="java.util">
	</type>
	<type name="java.util.concurrent.locks.ReentrantLock" internal="false" project="rt.jar" package="java.util.concurrent.locks">
	</type>
	<type name="org.hornetq.spi.core.security.HornetQSecurityManager" internal="false" project="trunk" package="org.hornetq.spi.core.security">
	</type>
	<type name="org.hornetq.core.server.cluster.DiscoveryGroupConfiguration" internal="false" project="trunk" package="org.hornetq.core.server.cluster">
	</type>
	<type name="javax.resource.spi.BootstrapContext" internal="false" project="jboss-jca-api.jar" package="javax.resource.spi">
	</type>
	<type name="org.hornetq.core.journal.JournalLoadInformation" internal="true" project="trunk" package="org.hornetq.core.journal">
		<reference type="java.lang.Override"/>
		<reference type="java.lang.String"/>
		<reference type="java.lang.Object"/>
	</type>
	<type name="java.util.concurrent.ThreadFactory" internal="false" project="rt.jar" package="java.util.concurrent">
	</type>
	<type name="org.hornetq.core.deployers.DeploymentManager" internal="true" project="trunk" package="org.hornetq.core.deployers">
		<reference type="org.hornetq.core.deployers.Deployer"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.HornetQComponent"/>
	</type>
	<type name="javax.naming.InitialContext" internal="false" project="rt.jar" package="javax.naming">
	</type>
	<type name="javax.naming.Referenceable" internal="false" project="rt.jar" package="javax.naming">
	</type>
	<type name="org.hornetq.service.HornetQStarterService" internal="true" project="trunk" package="org.hornetq.service">
		<reference type="javax.management.MBeanServer"/>
		<reference type="javax.management.ObjectName"/>
		<reference type="org.hornetq.core.server.impl.HornetQServerImpl"/>
		<reference type="org.hornetq.service.HornetQFileConfigurationServiceMBean"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.config.Configuration"/>
		<reference type="javax.management.MBeanRegistration"/>
		<reference type="org.hornetq.core.config.impl.ConfigurationImpl"/>
		<reference type="org.hornetq.service.HornetQStarterServiceMBean"/>
		<reference type="org.hornetq.spi.core.security.HornetQSecurityManager"/>
		<reference type="org.hornetq.core.server.HornetQServer"/>
		<reference type="java.lang.Boolean"/>
		<reference type="org.hornetq.service.JBossASSecurityManagerServiceMBean"/>
	</type>
	<type name="org.hornetq.jms.referenceable.SerializableObjectRefAddr" internal="true" project="trunk" package="org.hornetq.jms.referenceable">
		<reference type="java.lang.Override"/>
		<reference type="javax.naming.RefAddr"/>
		<reference type="java.io.IOException"/>
		<reference type="java.io.ObjectOutputStream"/>
		<reference type="java.io.ByteArrayOutputStream"/>
		<reference type="java.lang.String"/>
		<reference type="javax.naming.NamingException"/>
		<reference type="java.io.ByteArrayInputStream"/>
		<reference type="java.lang.Object"/>
		<reference type="java.io.ObjectInputStream"/>
		<reference type="java.lang.ClassNotFoundException"/>
	</type>
	<type name="org.hornetq.api.core.client.ClientMessage" internal="false" project="trunk" package="org.hornetq.api.core.client">
	</type>
	<type name="java.util.concurrent.atomic.AtomicLong" internal="false" project="rt.jar" package="java.util.concurrent.atomic">
	</type>
	<type name="java.lang.Error" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="javax.jms.ConnectionFactory" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="java.util.Iterator" internal="false" project="rt.jar" package="java.util">
	</type>
	<type name="javax.jms.TopicSession" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="java.io.File" internal="false" project="rt.jar" package="java.io">
	</type>
	<type name="java.util.Arrays" internal="false" project="rt.jar" package="java.util">
	</type>
	<type name="javax.jms.MessageNotWriteableException" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="java.io.Reader" internal="false" project="rt.jar" package="java.io">
	</type>
	<type name="org.hornetq.core.paging.PagingStore" internal="true" project="trunk" package="org.hornetq.core.paging">
		<reference type="org.hornetq.core.paging.Page"/>
		<reference type="org.hornetq.core.server.impl.ServerProducerCreditManager"/>
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="org.hornetq.core.server.MessageReference"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.HornetQComponent"/>
		<reference type="org.hornetq.core.settings.impl.AddressFullMessagePolicy"/>
	</type>
	<type name="org.hornetq.ra.HornetQRAObjectMessage" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="java.io.Serializable"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="org.hornetq.ra.HornetQRASession"/>
		<reference type="org.hornetq.ra.HornetQRAMessage"/>
		<reference type="javax.jms.ObjectMessage"/>
	</type>
	<type name="javax.resource.spi.InvalidPropertyException" internal="false" project="jboss-jca-api.jar" package="javax.resource.spi">
	</type>
	<type name="org.hornetq.core.server.QueueFactory" internal="true" project="trunk" package="org.hornetq.core.server">
		<reference type="org.hornetq.core.filter.Filter"/>
		<reference type="org.hornetq.core.server.Queue"/>
		<reference type="org.hornetq.core.postoffice.PostOffice"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
	</type>
	<type name="java.util.Random" internal="false" project="rt.jar" package="java.util">
	</type>
	<type name="javax.jms.QueueSender" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="javax.transaction.xa.Xid" internal="false" project="rt.jar" package="javax.transaction.xa">
	</type>
	<type name="org.hornetq.utils.JNDIUtil" internal="true" project="trunk" package="org.hornetq.utils">
		<reference type="javax.naming.NameNotFoundException"/>
		<reference type="javax.naming.NamingEnumeration"/>
		<reference type="java.util.StringTokenizer"/>
		<reference type="javax.naming.Context"/>
		<reference type="java.lang.String"/>
		<reference type="javax.naming.NamingException"/>
		<reference type="javax.naming.Binding"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.lang.Object"/>
	</type>
	<type name="javax.resource.spi.ActivationSpec" internal="false" project="jboss-jca-api.jar" package="javax.resource.spi">
	</type>
	<type name="javax.xml.parsers.DocumentBuilder" internal="false" project="rt.jar" package="javax.xml.parsers">
	</type>
	<type name="org.hornetq.core.asyncio.AsynchronousFile" internal="true" project="trunk" package="org.hornetq.core.asyncio">
		<reference type="org.hornetq.core.asyncio.BufferCallback"/>
		<reference type="java.lang.String"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="java.nio.ByteBuffer"/>
		<reference type="org.hornetq.core.asyncio.AIOCallback"/>
	</type>
	<type name="org.hornetq.api.core.client.ClientSession$QueueQuery" internal="false" project="trunk" package="org.hornetq.api.core.client">
	</type>
	<type name="org.hornetq.ra.HornetQRAMessage" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="java.util.Enumeration"/>
		<reference type="java.lang.Override"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="org.hornetq.ra.HornetQRASession"/>
		<reference type="java.lang.String"/>
		<reference type="javax.jms.Destination"/>
		<reference type="java.lang.Object"/>
		<reference type="javax.jms.Message"/>
	</type>
	<type name="org.hornetq.ra.ConnectionFactoryProperties" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="org.hornetq.ra.HornetQRAMCFProperties"/>
		<reference type="java.lang.Integer"/>
		<reference type="java.lang.Long"/>
		<reference type="java.lang.Double"/>
		<reference type="java.lang.String"/>
		<reference type="java.lang.Object"/>
		<reference type="java.lang.Boolean"/>
	</type>
	<type name="org.hornetq.ra.HornetQRAMCFProperties" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="org.hornetq.ra.Util"/>
		<reference type="java.lang.Integer"/>
		<reference type="javax.jms.Topic"/>
		<reference type="java.io.Serializable"/>
		<reference type="javax.jms.Queue"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.ra.ConnectionFactoryProperties"/>
		<reference type="org.hornetq.ra.HornetQRAConnectionFactory"/>
	</type>
	<type name="org.hornetq.core.remoting.impl.wireformat.SessionSendMessage" internal="false" project="trunk" package="org.hornetq.core.remoting.impl.wireformat">
	</type>
	<type name="org.hornetq.ra.HornetQRAQueueSender" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="javax.jms.JMSException"/>
		<reference type="javax.jms.QueueSender"/>
		<reference type="org.hornetq.ra.HornetQRASession"/>
		<reference type="javax.jms.Queue"/>
		<reference type="javax.jms.Message"/>
		<reference type="org.hornetq.ra.HornetQRAMessageProducer"/>
	</type>
	<type name="org.hornetq.core.deployers.Deployer" internal="true" project="trunk" package="org.hornetq.core.deployers">
		<reference type="java.lang.String"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.HornetQComponent"/>
		<reference type="java.net.URL"/>
	</type>
	<type name="org.hornetq.utils.HornetQThreadFactory" internal="true" project="trunk" package="org.hornetq.utils">
		<reference type="java.lang.Runnable"/>
		<reference type="java.lang.ThreadGroup"/>
		<reference type="java.util.concurrent.atomic.AtomicInteger"/>
		<reference type="java.lang.String"/>
		<reference type="java.util.concurrent.ThreadFactory"/>
		<reference type="java.lang.System"/>
		<reference type="java.lang.Thread"/>
	</type>
	<type name="java.lang.ClassLoader" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.hornetq.core.postoffice.Address" internal="true" project="trunk" package="org.hornetq.core.postoffice">
		<reference type="org.hornetq.api.core.SimpleString"/>
	</type>
	<type name="org.hornetq.core.journal.PreparedTransactionInfo" internal="true" project="trunk" package="org.hornetq.core.journal">
		<reference type="org.hornetq.core.journal.RecordInfo"/>
	</type>
	<type name="org.hornetq.core.version.impl.VersionImpl" internal="false" project="trunk" package="org.hornetq.core.version.impl">
	</type>
	<type name="org.hornetq.jms.client.JMSExceptionHelper" internal="true" project="trunk" package="org.hornetq.jms.client">
		<reference type="javax.jms.JMSSecurityException"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="javax.jms.IllegalStateException"/>
		<reference type="javax.jms.TransactionRolledBackException"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="javax.jms.InvalidDestinationException"/>
		<reference type="javax.jms.InvalidSelectorException"/>
	</type>
	<type name="org.hornetq.core.settings.HierarchicalRepository" internal="true" project="trunk" package="org.hornetq.core.settings">
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.core.settings.HierarchicalRepositoryChangeListener"/>
	</type>
	<type name="org.hornetq.core.postoffice.Binding" internal="true" project="trunk" package="org.hornetq.core.postoffice">
		<reference type="org.hornetq.core.filter.Filter"/>
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="org.hornetq.core.server.Bindable"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.postoffice.BindingType"/>
		<reference type="org.hornetq.core.server.RoutingContext"/>
	</type>
	<type name="org.hornetq.core.buffers.impl.ChannelBufferWrapper" internal="false" project="trunk" package="org.hornetq.core.buffers.impl">
	</type>
	<type name="org.hornetq.jms.client.HornetQMapMessage" internal="true" project="trunk" package="org.hornetq.jms.client">
		<reference type="javax.jms.MessageFormatException"/>
		<reference type="java.lang.Character"/>
		<reference type="java.lang.Long"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.lang.Object"/>
		<reference type="java.util.Enumeration"/>
		<reference type="org.hornetq.utils.TypedProperties"/>
		<reference type="java.lang.Override"/>
		<reference type="java.util.Set"/>
		<reference type="java.lang.Double"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.Boolean"/>
		<reference type="org.hornetq.api.core.client.ClientSession"/>
		<reference type="org.hornetq.api.core.PropertyConversionException"/>
		<reference type="java.lang.Short"/>
		<reference type="org.hornetq.jms.client.HornetQMessage"/>
		<reference type="java.lang.System"/>
		<reference type="java.lang.Byte"/>
		<reference type="javax.jms.MapMessage"/>
		<reference type="java.lang.Integer"/>
		<reference type="java.util.Collections"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.api.core.client.ClientMessage"/>
		<reference type="java.lang.Float"/>
	</type>
	<type name="org.hornetq.utils.DataConstants" internal="true" project="trunk" package="org.hornetq.utils">
	</type>
	<type name="org.hornetq.utils.concurrent.BlockingDeque" internal="true" project="trunk" package="org.hornetq.utils.concurrent">
		<reference type="java.util.concurrent.TimeUnit"/>
		<reference type="java.lang.InterruptedException"/>
	</type>
	<type name="javax.jms.QueueSession" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.jms.client.HornetQConnectionMetaData" internal="true" project="trunk" package="org.hornetq.jms.client">
		<reference type="java.util.Enumeration"/>
		<reference type="javax.jms.ConnectionMetaData"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="java.util.Vector"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.core.version.Version"/>
	</type>
	<type name="javax.resource.spi.work.Work" internal="false" project="jboss-jca-api.jar" package="javax.resource.spi.work">
	</type>
	<type name="javax.resource.spi.endpoint.MessageEndpoint" internal="false" project="jboss-jca-api.jar" package="javax.resource.spi.endpoint">
	</type>
	<type name="org.hornetq.api.core.client.ClientSession" internal="false" project="trunk" package="org.hornetq.api.core.client">
	</type>
	<type name="javax.management.MBeanServer" internal="false" project="rt.jar" package="javax.management">
	</type>
	<type name="org.hornetq.core.persistence.OperationContext" internal="true" project="trunk" package="org.hornetq.core.persistence">
		<reference type="org.hornetq.core.journal.IOAsyncTask"/>
		<reference type="org.hornetq.core.journal.IOCompletion"/>
		<reference type="java.lang.Exception"/>
	</type>
	<type name="org.hornetq.core.remoting.impl.wireformat.SessionBindingQueryMessage" internal="false" project="trunk" package="org.hornetq.core.remoting.impl.wireformat">
	</type>
	<type name="java.lang.Float" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.hornetq.core.server.Divert" internal="true" project="trunk" package="org.hornetq.core.server">
		<reference type="org.hornetq.core.filter.Filter"/>
		<reference type="org.hornetq.core.server.Bindable"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
	</type>
	<type name="org.hornetq.core.remoting.RemotingConnection" internal="true" project="trunk" package="org.hornetq.core.remoting">
		<reference type="org.hornetq.core.remoting.CloseListener"/>
		<reference type="org.hornetq.spi.core.remoting.Connection"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="java.lang.String"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.core.remoting.Channel"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.spi.core.remoting.BufferHandler"/>
		<reference type="org.hornetq.core.remoting.FailureListener"/>
	</type>
	<type name="org.hornetq.core.server.cluster.BridgeConfiguration" internal="false" project="trunk" package="org.hornetq.core.server.cluster">
	</type>
	<type name="javax.jms.XATopicConnectionFactory" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.utils.ConcurrentHashSet" internal="true" project="trunk" package="org.hornetq.utils">
		<reference type="java.lang.Override"/>
		<reference type="java.lang.Object"/>
	</type>
	<type name="org.hornetq.ra.HornetQRALocalTransaction" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="javax.resource.ResourceException"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="org.hornetq.ra.HornetQRAManagedConnection"/>
		<reference type="javax.resource.spi.LocalTransaction"/>
	</type>
	<type name="java.util.List" internal="false" project="rt.jar" package="java.util">
	</type>
	<type name="java.io.InputStreamReader" internal="false" project="rt.jar" package="java.io">
	</type>
	<type name="org.hornetq.ra.HornetQResourceAdapter" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="java.lang.Long"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.lang.Object"/>
		<reference type="javax.resource.spi.work.WorkManager"/>
		<reference type="org.hornetq.ra.ConnectionFactoryProperties"/>
		<reference type="org.hornetq.api.jms.HornetQJMSClient"/>
		<reference type="javax.resource.spi.ActivationSpec"/>
		<reference type="java.lang.Double"/>
		<reference type="javax.resource.spi.endpoint.MessageEndpointFactory"/>
		<reference type="org.hornetq.ra.inflow.HornetQActivationSpec"/>
		<reference type="java.lang.Boolean"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="javax.resource.spi.ResourceAdapterInternalException"/>
		<reference type="org.hornetq.jms.client.HornetQConnectionFactory"/>
		<reference type="javax.resource.ResourceException"/>
		<reference type="javax.resource.spi.BootstrapContext"/>
		<reference type="javax.resource.spi.ResourceAdapter"/>
		<reference type="org.hornetq.ra.Util"/>
		<reference type="java.lang.Integer"/>
		<reference type="java.io.Serializable"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="javax.transaction.xa.XAResource"/>
		<reference type="java.lang.String"/>
		<reference type="java.util.concurrent.atomic.AtomicBoolean"/>
		<reference type="org.hornetq.ra.inflow.HornetQActivation"/>
		<reference type="org.hornetq.ra.HornetQRAProperties"/>
		<reference type="javax.jms.Session"/>
		<reference type="org.hornetq.api.core.TransportConfiguration"/>
	</type>
	<type name="org.hornetq.core.management.impl.HornetQServerControlImpl" internal="false" project="trunk" package="org.hornetq.core.management.impl">
	</type>
	<type name="org.hornetq.jms.client.SelectorTranslator" internal="true" project="trunk" package="org.hornetq.jms.client">
		<reference type="java.lang.Character"/>
		<reference type="java.lang.Integer"/>
		<reference type="java.lang.StringBuffer"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.paging.Page" internal="true" project="trunk" package="org.hornetq.core.paging">
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.paging.PagedMessage"/>
	</type>
	<type name="javax.jms.TransactionRolledBackException" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.core.journal.RecordInfo" internal="true" project="trunk" package="org.hornetq.core.journal">
		<reference type="java.lang.Override"/>
		<reference type="java.lang.String"/>
		<reference type="java.lang.Object"/>
	</type>
	<type name="java.util.Enumeration" internal="false" project="rt.jar" package="java.util">
	</type>
	<type name="org.hornetq.core.persistence.QueueBindingInfo" internal="true" project="trunk" package="org.hornetq.core.persistence">
		<reference type="org.hornetq.api.core.SimpleString"/>
	</type>
	<type name="java.lang.Runnable" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.hornetq.core.remoting.impl.wireformat.SessionExpiredMessage" internal="false" project="trunk" package="org.hornetq.core.remoting.impl.wireformat">
	</type>
	<type name="javax.resource.ResourceException" internal="false" project="jboss-jca-api.jar" package="javax.resource">
	</type>
	<type name="javax.jms.MessageListener" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.utils.VersionLoader" internal="true" project="trunk" package="org.hornetq.utils">
		<reference type="java.io.InputStream"/>
		<reference type="java.util.Properties"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Integer"/>
		<reference type="java.lang.RuntimeException"/>
		<reference type="java.io.IOException"/>
		<reference type="org.hornetq.core.version.impl.VersionImpl"/>
		<reference type="java.lang.String"/>
		<reference type="java.lang.Throwable"/>
		<reference type="org.hornetq.core.version.Version"/>
	</type>
	<type name="javax.jms.Connection" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.core.server.Bindable" internal="true" project="trunk" package="org.hornetq.core.server">
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.RoutingContext"/>
	</type>
	<type name="org.hornetq.core.server.cluster.DivertConfiguration" internal="false" project="trunk" package="org.hornetq.core.server.cluster">
	</type>
	<type name="org.hornetq.jms.bridge.QualityOfServiceMode" internal="true" project="trunk" package="org.hornetq.jms.bridge">
	</type>
	<type name="org.hornetq.service.HornetQFileConfigurationService" internal="true" project="trunk" package="org.hornetq.service">
		<reference type="org.hornetq.core.config.impl.FileConfiguration"/>
		<reference type="java.lang.String"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.service.HornetQFileConfigurationServiceMBean"/>
		<reference type="org.hornetq.core.config.Configuration"/>
	</type>
	<type name="org.hornetq.jms.client.HornetQQueueBrowser" internal="true" project="trunk" package="org.hornetq.jms.client">
	</type>
	<type name="java.util.Set" internal="false" project="rt.jar" package="java.util">
	</type>
	<type name="org.hornetq.utils.concurrent.LinkedBlockingDeque$Itr" internal="true" project="trunk" package="org.hornetq.utils.concurrent">
		<reference type="java.lang.IllegalStateException"/>
		<reference type="java.util.NoSuchElementException"/>
		<reference type="java.util.concurrent.locks.ReentrantLock"/>
		<reference type="org.hornetq.utils.concurrent.LinkedBlockingDeque"/>
	</type>
	<type name="java.io.ByteArrayOutputStream" internal="false" project="rt.jar" package="java.io">
	</type>
	<type name="org.hornetq.core.client.impl.ClientMessageImpl" internal="false" project="trunk" package="org.hornetq.core.client.impl">
	</type>
	<type name="org.hornetq.ra.inflow.HornetQMessageHandler" internal="true" project="trunk" package="org.hornetq.ra.inflow">
		<reference type="java.util.UUID"/>
		<reference type="org.hornetq.api.core.client.ClientSession$QueueQuery"/>
		<reference type="javax.resource.ResourceException"/>
		<reference type="javax.resource.spi.endpoint.MessageEndpoint"/>
		<reference type="org.hornetq.jms.client.HornetQMessage"/>
		<reference type="javax.jms.IllegalStateException"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.api.core.client.ClientConsumer"/>
		<reference type="javax.jms.MessageListener"/>
		<reference type="java.lang.String"/>
		<reference type="javax.resource.spi.endpoint.MessageEndpointFactory"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.api.core.client.MessageHandler"/>
		<reference type="org.hornetq.ra.inflow.HornetQActivationSpec"/>
		<reference type="java.lang.Throwable"/>
		<reference type="org.hornetq.ra.inflow.HornetQActivation"/>
		<reference type="javax.jms.InvalidClientIDException"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.api.core.client.ClientMessage"/>
		<reference type="org.hornetq.jms.client.HornetQTopic"/>
		<reference type="org.hornetq.api.core.client.ClientSession"/>
	</type>
	<type name="org.hornetq.ra.HornetQRATopicPublisher" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="javax.jms.TopicPublisher"/>
		<reference type="javax.jms.Topic"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="org.hornetq.ra.HornetQRASession"/>
		<reference type="javax.jms.Message"/>
		<reference type="org.hornetq.ra.HornetQRAMessageProducer"/>
	</type>
	<type name="java.util.Hashtable" internal="false" project="rt.jar" package="java.util">
	</type>
	<type name="org.w3c.dom.NodeList" internal="false" project="rt.jar" package="org.w3c.dom">
	</type>
	<type name="org.hornetq.ra.HornetQRAConnectionMetaData" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="javax.jms.ConnectionMetaData"/>
		<reference type="java.lang.String"/>
		<reference type="java.lang.Object"/>
	</type>
	<type name="org.hornetq.utils.Future" internal="true" project="trunk" package="org.hornetq.utils">
		<reference type="java.lang.Runnable"/>
		<reference type="java.lang.InterruptedException"/>
		<reference type="java.lang.System"/>
	</type>
	<type name="javax.jms.InvalidClientIDException" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="java.lang.ClassNotFoundException" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.hornetq.core.server.Queue" internal="true" project="trunk" package="org.hornetq.core.server">
		<reference type="org.hornetq.core.transaction.Transaction"/>
		<reference type="org.hornetq.core.filter.Filter"/>
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="org.hornetq.core.server.Bindable"/>
		<reference type="org.hornetq.core.server.MessageReference"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.util.concurrent.Executor"/>
		<reference type="org.hornetq.core.server.Consumer"/>
	</type>
	<type name="org.hornetq.core.remoting.impl.wireformat.SessionXACommitMessage" internal="false" project="trunk" package="org.hornetq.core.remoting.impl.wireformat">
	</type>
	<type name="org.hornetq.utils.TimeAndCounterIDGenerator" internal="true" project="trunk" package="org.hornetq.utils">
		<reference type="java.lang.IllegalStateException"/>
		<reference type="java.lang.Override"/>
		<reference type="java.util.concurrent.atomic.AtomicLong"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.utils.IDGenerator"/>
		<reference type="java.lang.System"/>
	</type>
	<type name="org.hornetq.core.remoting.Channel" internal="true" project="trunk" package="org.hornetq.core.remoting">
		<reference type="org.hornetq.core.remoting.Packet"/>
		<reference type="org.hornetq.core.remoting.ChannelHandler"/>
		<reference type="org.hornetq.core.remoting.CommandConfirmationHandler"/>
		<reference type="org.hornetq.core.remoting.RemotingConnection"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="java.util.concurrent.locks.Lock"/>
	</type>
	<type name="org.hornetq.integration.bootstrap.HornetQBootstrapServer$Shutdown" internal="true" project="trunk" package="org.hornetq.integration.bootstrap">
		<reference type="java.lang.Override"/>
		<reference type="java.lang.Thread"/>
	</type>
	<type name="org.hornetq.core.server.cluster.ClusterConnectionConfiguration" internal="false" project="trunk" package="org.hornetq.core.server.cluster">
	</type>
	<type name="org.hornetq.api.core.HornetQException" internal="true" project="trunk" package="org.hornetq.api.core">
		<reference type="java.lang.Override"/>
		<reference type="java.lang.String"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.lang.Throwable"/>
	</type>
	<type name="org.hornetq.ra.HornetQRAMapMessage" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="java.util.Enumeration"/>
		<reference type="javax.jms.MapMessage"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="org.hornetq.ra.HornetQRASession"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.ra.HornetQRAMessage"/>
		<reference type="java.lang.Object"/>
	</type>
	<type name="org.hornetq.ra.HornetQRASessionFactoryImpl" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="javax.jms.ServerSessionPool"/>
		<reference type="java.util.Iterator"/>
		<reference type="javax.jms.Topic"/>
		<reference type="java.lang.RuntimeException"/>
		<reference type="javax.jms.TemporaryTopic"/>
		<reference type="java.lang.Exception"/>
		<reference type="javax.naming.Reference"/>
		<reference type="javax.jms.ConnectionMetaData"/>
		<reference type="java.util.Set"/>
		<reference type="javax.jms.ExceptionListener"/>
		<reference type="javax.jms.Queue"/>
		<reference type="javax.jms.Destination"/>
		<reference type="java.lang.Throwable"/>
		<reference type="java.util.HashSet"/>
		<reference type="org.hornetq.ra.HornetQRAConnectionRequestInfo"/>
		<reference type="org.hornetq.ra.HornetQRASession"/>
		<reference type="org.hornetq.ra.HornetQRASessionFactory"/>
		<reference type="javax.jms.XAQueueSession"/>
		<reference type="javax.jms.IllegalStateException"/>
		<reference type="javax.jms.ConnectionConsumer"/>
		<reference type="javax.resource.Referenceable"/>
		<reference type="org.hornetq.ra.HornetQRAConnectionFactory"/>
		<reference type="javax.jms.TemporaryQueue"/>
		<reference type="org.hornetq.ra.HornetQRAManagedConnectionFactory"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="javax.jms.TopicSession"/>
		<reference type="java.lang.String"/>
		<reference type="javax.jms.XASession"/>
		<reference type="org.hornetq.ra.HornetQRAConnectionManager"/>
		<reference type="javax.resource.spi.ConnectionManager"/>
		<reference type="org.hornetq.ra.HornetQResourceAdapter"/>
		<reference type="javax.jms.Session"/>
		<reference type="javax.jms.QueueSession"/>
		<reference type="javax.jms.XATopicSession"/>
	</type>
	<type name="org.hornetq.core.asyncio.BufferCallback" internal="true" project="trunk" package="org.hornetq.core.asyncio">
		<reference type="java.nio.ByteBuffer"/>
	</type>
	<type name="javax.jms.Topic" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.utils.XMLConfigurationUtil" internal="true" project="trunk" package="org.hornetq.utils">
		<reference type="java.lang.Integer"/>
		<reference type="org.w3c.dom.NodeList"/>
		<reference type="org.w3c.dom.Element"/>
		<reference type="org.hornetq.utils.XMLUtil"/>
		<reference type="java.lang.Long"/>
		<reference type="java.lang.String"/>
		<reference type="java.lang.Double"/>
		<reference type="java.lang.Boolean"/>
		<reference type="org.hornetq.core.config.impl.Validators$Validator"/>
	</type>
	<type name="org.hornetq.core.asyncio.AIOCallback" internal="true" project="trunk" package="org.hornetq.core.asyncio">
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.ra.HornetQRAManagedConnectionFactory" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="java.util.Iterator"/>
		<reference type="java.lang.Long"/>
		<reference type="org.hornetq.ra.HornetQRAConnectionFactoryImpl"/>
		<reference type="java.lang.Object"/>
		<reference type="javax.jms.ConnectionMetaData"/>
		<reference type="java.lang.Override"/>
		<reference type="java.util.Set"/>
		<reference type="java.lang.Double"/>
		<reference type="java.lang.Boolean"/>
		<reference type="javax.security.auth.Subject"/>
		<reference type="org.hornetq.jms.client.HornetQConnectionFactory"/>
		<reference type="org.hornetq.ra.HornetQRAMCFProperties"/>
		<reference type="javax.resource.spi.ResourceAdapterAssociation"/>
		<reference type="javax.resource.ResourceException"/>
		<reference type="org.hornetq.ra.HornetQRAConnectionRequestInfo"/>
		<reference type="java.io.PrintWriter"/>
		<reference type="org.hornetq.ra.HornetQRAManagedConnection"/>
		<reference type="javax.resource.spi.ManagedConnection"/>
		<reference type="javax.resource.spi.ManagedConnectionFactory"/>
		<reference type="org.hornetq.ra.HornetQRAConnectionFactory"/>
		<reference type="javax.resource.spi.ResourceAdapter"/>
		<reference type="org.hornetq.ra.HornetQRACredential"/>
		<reference type="java.lang.Integer"/>
		<reference type="org.hornetq.ra.HornetQRAConnectionMetaData"/>
		<reference type="javax.resource.spi.ConnectionRequestInfo"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.ra.HornetQRAConnectionManager"/>
		<reference type="javax.resource.spi.ConnectionManager"/>
		<reference type="org.hornetq.ra.HornetQResourceAdapter"/>
	</type>
	<type name="org.hornetq.core.remoting.Packet" internal="true" project="trunk" package="org.hornetq.core.remoting">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.core.remoting.RemotingConnection"/>
	</type>
	<type name="javax.management.MBeanRegistration" internal="false" project="rt.jar" package="javax.management">
	</type>
	<type name="org.hornetq.core.server.cluster.BroadcastGroupConfiguration" internal="false" project="trunk" package="org.hornetq.core.server.cluster">
	</type>
	<type name="java.lang.StringIndexOutOfBoundsException" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.hornetq.spi.core.logging.LogDelegate" internal="false" project="trunk" package="org.hornetq.spi.core.logging">
	</type>
	<type name="org.hornetq.spi.core.remoting.BufferHandler" internal="false" project="trunk" package="org.hornetq.spi.core.remoting">
	</type>
	<type name="org.hornetq.core.journal.impl.JournalFile" internal="false" project="trunk" package="org.hornetq.core.journal.impl">
	</type>
	<type name="org.hornetq.api.core.client.HornetQClient" internal="false" project="trunk" package="org.hornetq.api.core.client">
	</type>
	<type name="javax.resource.spi.endpoint.MessageEndpointFactory" internal="false" project="jboss-jca-api.jar" package="javax.resource.spi.endpoint">
	</type>
	<type name="java.util.NoSuchElementException" internal="false" project="rt.jar" package="java.util">
	</type>
	<type name="org.hornetq.utils.json.JSONString" internal="true" project="trunk" package="org.hornetq.utils.json">
		<reference type="java.lang.String"/>
	</type>
	<type name="java.lang.Byte" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.hornetq.spi.core.logging.LogDelegateFactory" internal="false" project="trunk" package="org.hornetq.spi.core.logging">
	</type>
	<type name="org.hornetq.jms.client.HornetQConnectionFactory" internal="true" project="trunk" package="org.hornetq.jms.client">
		<reference type="org.hornetq.jms.client.HornetQConnection"/>
		<reference type="javax.jms.ConnectionFactory"/>
		<reference type="javax.naming.Reference"/>
		<reference type="java.lang.IllegalStateException"/>
		<reference type="javax.jms.QueueConnectionFactory"/>
		<reference type="javax.jms.XAConnection"/>
		<reference type="javax.naming.NamingException"/>
		<reference type="javax.naming.Referenceable"/>
		<reference type="javax.jms.XATopicConnection"/>
		<reference type="org.hornetq.jms.referenceable.ConnectionFactoryObjectFactory"/>
		<reference type="javax.jms.QueueConnection"/>
		<reference type="javax.jms.XAConnectionFactory"/>
		<reference type="javax.jms.XAQueueConnectionFactory"/>
		<reference type="org.hornetq.api.core.client.HornetQClient"/>
		<reference type="javax.jms.TopicConnection"/>
		<reference type="javax.jms.TopicConnectionFactory"/>
		<reference type="javax.jms.XAQueueConnection"/>
		<reference type="org.hornetq.api.core.client.ClientSessionFactory"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="javax.jms.XATopicConnectionFactory"/>
		<reference type="java.io.Serializable"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="javax.jms.Connection"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.jms.referenceable.SerializableObjectRefAddr"/>
		<reference type="org.hornetq.api.core.TransportConfiguration"/>
	</type>
	<type name="org.hornetq.core.remoting.impl.wireformat.SessionXARollbackMessage" internal="false" project="trunk" package="org.hornetq.core.remoting.impl.wireformat">
	</type>
	<type name="java.lang.Math" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.hornetq.core.remoting.impl.wireformat.SessionXAJoinMessage" internal="false" project="trunk" package="org.hornetq.core.remoting.impl.wireformat">
	</type>
	<type name="javax.jms.JMSException" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="java.util.Map" internal="false" project="rt.jar" package="java.util">
	</type>
	<type name="org.hornetq.core.server.HornetQServers" internal="true" project="trunk" package="org.hornetq.core.server">
		<reference type="javax.management.MBeanServer"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.management.ManagementFactory"/>
		<reference type="org.hornetq.spi.core.security.HornetQSecurityManagerImpl"/>
		<reference type="org.hornetq.spi.core.security.HornetQSecurityManager"/>
		<reference type="org.hornetq.core.server.impl.HornetQServerImpl"/>
		<reference type="org.hornetq.core.server.HornetQServer"/>
		<reference type="org.hornetq.core.config.Configuration"/>
	</type>
	<type name="org.hornetq.core.server.group.impl.GroupingHandlerConfiguration" internal="false" project="trunk" package="org.hornetq.core.server.group.impl">
	</type>
	<type name="java.io.PrintStream" internal="false" project="rt.jar" package="java.io">
	</type>
	<type name="org.hornetq.utils.SizeFormatterUtil" internal="true" project="trunk" package="org.hornetq.utils">
		<reference type="java.lang.Long"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.core.replication.ReplicationManager" internal="true" project="trunk" package="org.hornetq.core.replication">
		<reference type="org.hornetq.core.journal.JournalLoadInformation"/>
		<reference type="org.hornetq.core.persistence.OperationContext"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.journal.EncodingSupport"/>
		<reference type="org.hornetq.core.server.HornetQComponent"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.core.paging.PagedMessage"/>
	</type>
	<type name="org.hornetq.core.message.impl.MessageInternal" internal="false" project="trunk" package="org.hornetq.core.message.impl">
	</type>
	<type name="javax.naming.Name" internal="false" project="rt.jar" package="javax.naming">
	</type>
	<type name="java.io.ByteArrayInputStream" internal="false" project="rt.jar" package="java.io">
	</type>
	<type name="org.hornetq.utils.json.JSONObject" internal="true" project="trunk" package="org.hornetq.utils.json">
	</type>
	<type name="org.hornetq.jms.referenceable.ConnectionFactoryObjectFactory" internal="true" project="trunk" package="org.hornetq.jms.referenceable">
		<reference type="javax.naming.spi.ObjectFactory"/>
		<reference type="javax.naming.Name"/>
		<reference type="javax.naming.Context"/>
		<reference type="org.hornetq.jms.referenceable.SerializableObjectRefAddr"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.lang.Object"/>
		<reference type="javax.naming.Reference"/>
		<reference type="java.util.Hashtable"/>
	</type>
	<type name="org.hornetq.core.remoting.impl.wireformat.SessionAcknowledgeMessage" internal="false" project="trunk" package="org.hornetq.core.remoting.impl.wireformat">
	</type>
	<type name="org.hornetq.api.core.HornetQBuffer" internal="true" project="trunk" package="org.hornetq.api.core">
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.nio.ByteBuffer"/>
		<reference type="org.jboss.netty.buffer.ChannelBuffer"/>
	</type>
	<type name="java.io.Writer" internal="false" project="rt.jar" package="java.io">
	</type>
	<type name="org.jboss.netty.buffer.ChannelBuffer" internal="false" project="netty.jar" package="org.jboss.netty.buffer">
	</type>
	<type name="org.hornetq.core.server.cluster.ClusterManager" internal="false" project="trunk" package="org.hornetq.core.server.cluster">
	</type>
	<type name="javax.jms.XATopicSession" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.ra.HornetQRATopicSubscriber" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="javax.jms.Topic"/>
		<reference type="org.hornetq.ra.HornetQRAMessageConsumer"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="org.hornetq.ra.HornetQRASession"/>
		<reference type="javax.jms.TopicSubscriber"/>
	</type>
	<type name="org.hornetq.utils.json.JSONObject$Null" internal="true" project="trunk" package="org.hornetq.utils.json">
		<reference type="java.lang.Override"/>
		<reference type="java.lang.String"/>
		<reference type="java.lang.Object"/>
	</type>
	<type name="java.lang.RuntimeException" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.hornetq.integration.logging.Log4jLogDelegateFactory" internal="true" project="trunk" package="org.hornetq.integration.logging">
		<reference type="org.hornetq.spi.core.logging.LogDelegateFactory"/>
		<reference type="org.hornetq.integration.logging.Log4jLogDelegate"/>
		<reference type="org.hornetq.spi.core.logging.LogDelegate"/>
	</type>
	<type name="org.hornetq.api.core.TransportConfiguration" internal="true" project="trunk" package="org.hornetq.api.core">
		<reference type="java.lang.Integer"/>
		<reference type="java.lang.Override"/>
		<reference type="java.io.Serializable"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="java.lang.StringBuilder"/>
		<reference type="java.lang.Long"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.utils.UUIDGenerator"/>
		<reference type="java.lang.Object"/>
		<reference type="java.lang.Boolean"/>
	</type>
	<type name="java.io.OutputStream" internal="false" project="rt.jar" package="java.io">
	</type>
	<type name="org.hornetq.core.journal.SequentialFile" internal="true" project="trunk" package="org.hornetq.core.journal">
		<reference type="org.hornetq.core.journal.IOAsyncTask"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.core.journal.EncodingSupport"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.nio.ByteBuffer"/>
		<reference type="org.hornetq.core.journal.impl.TimedBuffer"/>
	</type>
	<type name="javax.jms.ObjectMessage" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="java.text.SimpleDateFormat" internal="false" project="rt.jar" package="java.text">
	</type>
	<type name="javax.jms.TopicConnection" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="javax.jms.MapMessage" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="java.lang.Boolean" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.hornetq.core.settings.impl.AddressSettings" internal="false" project="trunk" package="org.hornetq.core.settings.impl">
	</type>
	<type name="org.hornetq.jms.client.HornetQTopic" internal="true" project="trunk" package="org.hornetq.jms.client">
		<reference type="javax.jms.Topic"/>
		<reference type="java.lang.Override"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="java.lang.StringBuffer"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.jms.client.HornetQDestination"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
	</type>
	<type name="org.hornetq.jms.client.HornetQSession" internal="true" project="trunk" package="org.hornetq.jms.client">
		<reference type="javax.jms.Topic"/>
		<reference type="javax.jms.TemporaryTopic"/>
		<reference type="org.hornetq.jms.client.HornetQConnection"/>
		<reference type="org.hornetq.jms.client.HornetQDestination"/>
		<reference type="org.hornetq.jms.client.HornetQTextMessage"/>
		<reference type="java.lang.Override"/>
		<reference type="javax.jms.QueueSender"/>
		<reference type="javax.jms.MessageListener"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="javax.jms.InvalidClientIDException"/>
		<reference type="javax.jms.MessageConsumer"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.jms.client.HornetQObjectMessage"/>
		<reference type="org.hornetq.jms.client.HornetQQueueBrowser"/>
		<reference type="javax.jms.XAQueueSession"/>
		<reference type="javax.jms.IllegalStateException"/>
		<reference type="org.hornetq.jms.client.HornetQMessageConsumer"/>
		<reference type="org.hornetq.jms.client.HornetQBytesMessage"/>
		<reference type="javax.jms.MapMessage"/>
		<reference type="org.hornetq.api.core.client.ClientProducer"/>
		<reference type="org.hornetq.api.core.client.ClientConsumer"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="javax.jms.TopicSession"/>
		<reference type="org.hornetq.jms.client.HornetQTemporaryTopic"/>
		<reference type="javax.jms.TextMessage"/>
		<reference type="javax.transaction.xa.XAResource"/>
		<reference type="javax.jms.StreamMessage"/>
		<reference type="java.lang.String"/>
		<reference type="javax.jms.ObjectMessage"/>
		<reference type="javax.jms.QueueSession"/>
		<reference type="org.hornetq.jms.client.HornetQTopic"/>
		<reference type="org.hornetq.api.core.client.ClientSession$BindingQuery"/>
		<reference type="javax.jms.TopicSubscriber"/>
		<reference type="javax.jms.QueueReceiver"/>
		<reference type="javax.jms.QueueBrowser"/>
		<reference type="javax.jms.Message"/>
		<reference type="org.hornetq.api.jms.HornetQJMSClient"/>
		<reference type="org.hornetq.jms.client.JMSExceptionHelper"/>
		<reference type="org.hornetq.jms.client.SelectorTranslator"/>
		<reference type="org.hornetq.jms.client.HornetQQueue"/>
		<reference type="org.hornetq.jms.client.HornetQMapMessage"/>
		<reference type="javax.jms.MessageProducer"/>
		<reference type="javax.jms.Queue"/>
		<reference type="javax.jms.Destination"/>
		<reference type="javax.jms.BytesMessage"/>
		<reference type="org.hornetq.jms.client.HornetQTemporaryQueue"/>
		<reference type="org.hornetq.api.core.client.ClientSession"/>
		<reference type="org.hornetq.jms.client.HornetQMessageProducer"/>
		<reference type="javax.jms.TopicPublisher"/>
		<reference type="java.util.UUID"/>
		<reference type="org.hornetq.api.core.client.ClientSession$QueueQuery"/>
		<reference type="org.hornetq.jms.client.HornetQMessage"/>
		<reference type="javax.jms.TransactionInProgressException"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="javax.jms.TemporaryQueue"/>
		<reference type="org.hornetq.jms.client.HornetQStreamMessage"/>
		<reference type="java.io.Serializable"/>
		<reference type="javax.jms.XASession"/>
		<reference type="javax.jms.Session"/>
		<reference type="javax.jms.XATopicSession"/>
		<reference type="javax.jms.InvalidDestinationException"/>
		<reference type="org.hornetq.core.filter.impl.FilterImpl"/>
	</type>
	<type name="org.hornetq.core.transaction.Transaction" internal="true" project="trunk" package="org.hornetq.core.transaction">
		<reference type="org.hornetq.core.transaction.TransactionOperation"/>
		<reference type="org.hornetq.core.transaction.Transaction$State"/>
		<reference type="java.lang.Object"/>
		<reference type="javax.transaction.xa.Xid"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
	</type>
	<type name="org.hornetq.core.remoting.impl.wireformat.SessionXAPrepareMessage" internal="false" project="trunk" package="org.hornetq.core.remoting.impl.wireformat">
	</type>
	<type name="org.hornetq.jms.bridge.DestinationFactory" internal="true" project="trunk" package="org.hornetq.jms.bridge">
		<reference type="javax.jms.Destination"/>
		<reference type="java.lang.Exception"/>
	</type>
	<type name="org.hornetq.core.message.BodyEncoder" internal="true" project="trunk" package="org.hornetq.core.message">
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="java.nio.ByteBuffer"/>
	</type>
	<type name="java.io.PrintWriter" internal="false" project="rt.jar" package="java.io">
	</type>
	<type name="org.hornetq.core.server.MemoryManager" internal="true" project="trunk" package="org.hornetq.core.server">
		<reference type="org.hornetq.core.server.HornetQComponent"/>
	</type>
	<type name="org.hornetq.utils.Random" internal="true" project="trunk" package="org.hornetq.utils">
		<reference type="java.util.Random"/>
		<reference type="java.lang.System"/>
	</type>
	<type name="org.jboss.kernel.plugins.bootstrap.basic.BasicBootstrap" internal="false" project="jboss-kernel.jar" package="org.jboss.kernel.plugins.bootstrap.basic">
	</type>
	<type name="java.util.TimerTask" internal="false" project="rt.jar" package="java.util">
	</type>
	<type name="java.io.StringWriter" internal="false" project="rt.jar" package="java.io">
	</type>
	<type name="java.lang.Number" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.hornetq.ra.HornetQRAConnectionFactory" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="javax.jms.XATopicConnectionFactory"/>
		<reference type="javax.jms.XAConnectionFactory"/>
		<reference type="javax.jms.QueueConnectionFactory"/>
		<reference type="java.io.Serializable"/>
		<reference type="javax.jms.XAQueueConnectionFactory"/>
		<reference type="javax.jms.ConnectionFactory"/>
		<reference type="javax.jms.TopicConnectionFactory"/>
		<reference type="javax.naming.Referenceable"/>
	</type>
	<type name="org.hornetq.ra.HornetQRABytesMessage" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="javax.jms.JMSException"/>
		<reference type="org.hornetq.ra.HornetQRASession"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.ra.HornetQRAMessage"/>
		<reference type="java.lang.Object"/>
		<reference type="javax.jms.BytesMessage"/>
	</type>
	<type name="org.hornetq.core.remoting.impl.wireformat.SessionXASetTimeoutMessage" internal="false" project="trunk" package="org.hornetq.core.remoting.impl.wireformat">
	</type>
	<type name="org.hornetq.core.journal.IOAsyncTask" internal="true" project="trunk" package="org.hornetq.core.journal">
		<reference type="org.hornetq.core.asyncio.AIOCallback"/>
	</type>
	<type name="java.net.NetworkInterface" internal="false" project="rt.jar" package="java.net">
	</type>
	<type name="javax.jms.MessageEOFException" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="javax.jms.MessageNotReadableException" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="java.util.Properties" internal="false" project="rt.jar" package="java.util">
	</type>
	<type name="org.hornetq.service.HornetQJMSStarterService" internal="true" project="trunk" package="org.hornetq.service">
		<reference type="org.hornetq.service.HornetQStarterServiceMBean"/>
		<reference type="org.hornetq.service.HornetQJMSStarterServiceMBean"/>
		<reference type="java.lang.Exception"/>
	</type>
	<type name="org.hornetq.ra.inflow.HornetQActivation$SetupActivation" internal="true" project="trunk" package="org.hornetq.ra.inflow">
		<reference type="javax.resource.spi.work.Work"/>
		<reference type="org.hornetq.ra.inflow.HornetQActivation"/>
		<reference type="java.lang.Throwable"/>
	</type>
	<type name="org.xml.sax.InputSource" internal="false" project="rt.jar" package="org.xml.sax">
	</type>
	<type name="org.hornetq.jms.client.HornetQObjectMessage" internal="true" project="trunk" package="org.hornetq.jms.client">
		<reference type="org.hornetq.jms.client.HornetQMessage"/>
		<reference type="java.io.ByteArrayOutputStream"/>
		<reference type="java.io.ObjectOutputStream"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.io.ObjectInputStream"/>
		<reference type="java.lang.Override"/>
		<reference type="java.io.Serializable"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="org.hornetq.utils.ObjectInputStreamWithClassLoader"/>
		<reference type="javax.jms.ObjectMessage"/>
		<reference type="java.io.ByteArrayInputStream"/>
		<reference type="org.hornetq.api.core.client.ClientMessage"/>
		<reference type="org.hornetq.api.core.client.ClientSession"/>
	</type>
	<type name="org.hornetq.core.config.Configuration" internal="true" project="trunk" package="org.hornetq.core.config">
		<reference type="java.io.Serializable"/>
		<reference type="org.hornetq.core.server.cluster.BridgeConfiguration"/>
		<reference type="org.hornetq.core.server.JournalType"/>
		<reference type="org.hornetq.core.server.cluster.DivertConfiguration"/>
		<reference type="org.hornetq.core.server.cluster.DiscoveryGroupConfiguration"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.server.cluster.ClusterConnectionConfiguration"/>
		<reference type="org.hornetq.core.server.cluster.BroadcastGroupConfiguration"/>
		<reference type="org.hornetq.api.core.TransportConfiguration"/>
		<reference type="org.hornetq.core.server.group.impl.GroupingHandlerConfiguration"/>
		<reference type="org.hornetq.core.server.cluster.QueueConfiguration"/>
	</type>
	<type name="org.hornetq.jms.client.HornetQMessage" internal="true" project="trunk" package="org.hornetq.jms.client">
		<reference type="java.io.InputStream"/>
		<reference type="javax.jms.MessageFormatException"/>
		<reference type="java.lang.Character"/>
		<reference type="org.hornetq.api.jms.HornetQJMSConstants"/>
		<reference type="java.lang.Long"/>
		<reference type="org.hornetq.jms.client.HornetQDestination"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.lang.Object"/>
		<reference type="org.hornetq.core.client.impl.ClientMessageImpl"/>
		<reference type="javax.jms.Message"/>
		<reference type="org.hornetq.jms.client.HornetQTextMessage"/>
		<reference type="java.util.Enumeration"/>
		<reference type="org.hornetq.jms.client.JMSExceptionHelper"/>
		<reference type="java.lang.Override"/>
		<reference type="org.hornetq.jms.client.HornetQMapMessage"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="javax.jms.Destination"/>
		<reference type="java.lang.Boolean"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="javax.jms.MessageNotWriteableException"/>
		<reference type="org.hornetq.api.core.client.ClientSession"/>
		<reference type="javax.jms.DeliveryMode"/>
		<reference type="org.hornetq.jms.client.HornetQObjectMessage"/>
		<reference type="org.hornetq.api.core.PropertyConversionException"/>
		<reference type="java.lang.StringBuffer"/>
		<reference type="javax.jms.IllegalStateException"/>
		<reference type="java.lang.System"/>
		<reference type="org.hornetq.jms.client.HornetQBytesMessage"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Byte"/>
		<reference type="java.util.Collections"/>
		<reference type="org.hornetq.jms.client.HornetQStreamMessage"/>
		<reference type="java.lang.IllegalArgumentException"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.api.core.Message"/>
		<reference type="javax.jms.MessageNotReadableException"/>
		<reference type="org.hornetq.api.core.client.ClientMessage"/>
		<reference type="javax.jms.InvalidDestinationException"/>
		<reference type="java.io.OutputStream"/>
	</type>
	<type name="javax.naming.NamingException" internal="false" project="rt.jar" package="javax.naming">
	</type>
	<type name="org.hornetq.core.journal.TransactionFailureCallback" internal="true" project="trunk" package="org.hornetq.core.journal">
		<reference type="org.hornetq.core.journal.RecordInfo"/>
	</type>
	<type name="org.hornetq.ra.HornetQRAMessageListener" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="org.hornetq.ra.HornetQRAMessageConsumer"/>
		<reference type="javax.jms.MessageListener"/>
		<reference type="javax.jms.Message"/>
	</type>
	<type name="org.hornetq.integration.logging.HornetQLoggerFormatter" internal="true" project="trunk" package="org.hornetq.integration.logging">
		<reference type="java.lang.Override"/>
		<reference type="java.util.Date"/>
		<reference type="java.io.StringWriter"/>
		<reference type="java.lang.StringBuffer"/>
		<reference type="java.io.PrintWriter"/>
		<reference type="java.lang.String"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.text.SimpleDateFormat"/>
		<reference type="java.util.logging.LogRecord"/>
		<reference type="java.lang.Thread"/>
		<reference type="java.lang.System"/>
		<reference type="java.util.logging.Formatter"/>
	</type>
	<type name="org.hornetq.jms.server.JMSServerManager" internal="true" project="trunk" package="org.hornetq.jms.server">
		<reference type="javax.naming.Context"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.core.server.HornetQServer"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.HornetQComponent"/>
		<reference type="org.hornetq.api.core.TransportConfiguration"/>
	</type>
	<type name="org.hornetq.core.remoting.impl.wireformat.SessionRequestProducerCreditsMessage" internal="false" project="trunk" package="org.hornetq.core.remoting.impl.wireformat">
	</type>
	<type name="java.lang.Character" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.hornetq.core.server.impl.ServerSessionPacketHandler" internal="false" project="trunk" package="org.hornetq.core.server.impl">
	</type>
	<type name="java.util.ArrayList" internal="false" project="rt.jar" package="java.util">
	</type>
	<type name="javax.resource.spi.ManagedConnectionFactory" internal="false" project="jboss-jca-api.jar" package="javax.resource.spi">
	</type>
	<type name="org.hornetq.core.server.RoutingContext" internal="true" project="trunk" package="org.hornetq.core.server">
		<reference type="org.hornetq.core.transaction.Transaction"/>
		<reference type="org.hornetq.core.server.Queue"/>
	</type>
	<type name="org.hornetq.core.remoting.impl.wireformat.SessionQueueQueryMessage" internal="false" project="trunk" package="org.hornetq.core.remoting.impl.wireformat">
	</type>
	<type name="org.hornetq.jms.client.JMSMessageListenerWrapper" internal="true" project="trunk" package="org.hornetq.jms.client">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.api.core.client.ClientConsumer"/>
		<reference type="java.lang.RuntimeException"/>
		<reference type="javax.jms.MessageListener"/>
		<reference type="org.hornetq.jms.client.HornetQMessage"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.client.MessageHandler"/>
		<reference type="javax.jms.Session"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.api.core.client.ClientMessage"/>
		<reference type="org.hornetq.jms.client.HornetQSession"/>
	</type>
	<type name="org.hornetq.core.logging.impl.JULLogDelegateFactory" internal="false" project="trunk" package="org.hornetq.core.logging.impl">
	</type>
	<type name="org.hornetq.ra.HornetQRACredential" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="java.lang.Override"/>
		<reference type="java.io.Serializable"/>
		<reference type="org.hornetq.ra.HornetQRAConnectionRequestInfo"/>
		<reference type="org.hornetq.ra.HornetQRACredential$GetCredentialAction"/>
		<reference type="javax.resource.spi.SecurityException"/>
		<reference type="javax.resource.spi.ConnectionRequestInfo"/>
		<reference type="java.lang.String"/>
		<reference type="javax.resource.spi.ManagedConnectionFactory"/>
		<reference type="javax.resource.spi.security.PasswordCredential"/>
		<reference type="javax.security.auth.Subject"/>
	</type>
	<type name="java.lang.InterruptedException" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.hornetq.core.remoting.impl.wireformat.CreateQueueMessage" internal="false" project="trunk" package="org.hornetq.core.remoting.impl.wireformat">
	</type>
	<type name="org.hornetq.jms.client.HornetQMessageConsumer" internal="true" project="trunk" package="org.hornetq.jms.client">
		<reference type="javax.jms.Topic"/>
		<reference type="org.hornetq.jms.client.JMSMessageListenerWrapper"/>
		<reference type="org.hornetq.jms.client.HornetQMessage"/>
		<reference type="javax.jms.TopicSubscriber"/>
		<reference type="org.hornetq.jms.client.HornetQDestination"/>
		<reference type="javax.jms.QueueReceiver"/>
		<reference type="java.lang.Exception"/>
		<reference type="javax.jms.IllegalStateException"/>
		<reference type="javax.jms.Message"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.jms.client.JMSExceptionHelper"/>
		<reference type="java.lang.Override"/>
		<reference type="org.hornetq.api.core.client.ClientConsumer"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="javax.jms.MessageListener"/>
		<reference type="javax.jms.Queue"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.api.core.client.MessageHandler"/>
		<reference type="javax.jms.Session"/>
		<reference type="javax.jms.MessageConsumer"/>
		<reference type="org.hornetq.api.core.client.ClientMessage"/>
		<reference type="org.hornetq.api.core.HornetQException"/>
		<reference type="org.hornetq.jms.client.HornetQSession"/>
	</type>
	<type name="org.hornetq.core.remoting.impl.wireformat.SessionSendLargeMessage" internal="false" project="trunk" package="org.hornetq.core.remoting.impl.wireformat">
	</type>
	<type name="javax.resource.spi.work.WorkManager" internal="false" project="jboss-jca-api.jar" package="javax.resource.spi.work">
	</type>
	<type name="org.hornetq.service.JBossASSecurityManagerService" internal="true" project="trunk" package="org.hornetq.service">
		<reference type="org.hornetq.integration.jboss.security.JBossASSecurityManager"/>
		<reference type="org.hornetq.service.JBossASSecurityManagerServiceMBean"/>
	</type>
	<type name="org.hornetq.ra.HornetQRACredential$GetCredentialAction" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="javax.resource.spi.ManagedConnectionFactory"/>
		<reference type="javax.security.auth.Subject"/>
		<reference type="javax.resource.spi.security.PasswordCredential"/>
		<reference type="java.security.AccessController"/>
		<reference type="org.hornetq.ra.HornetQRACredential"/>
	</type>
	<type name="org.hornetq.ra.HornetQRASession" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="java.util.Iterator"/>
		<reference type="javax.jms.Topic"/>
		<reference type="javax.jms.TemporaryTopic"/>
		<reference type="javax.jms.TopicSubscriber"/>
		<reference type="java.lang.Error"/>
		<reference type="javax.jms.QueueReceiver"/>
		<reference type="javax.jms.QueueBrowser"/>
		<reference type="javax.jms.Message"/>
		<reference type="javax.resource.spi.ConnectionEvent"/>
		<reference type="org.hornetq.ra.HornetQRATopicSubscriber"/>
		<reference type="org.hornetq.ra.HornetQRATopicPublisher"/>
		<reference type="javax.jms.QueueSender"/>
		<reference type="java.util.Set"/>
		<reference type="javax.jms.MessageListener"/>
		<reference type="javax.jms.MessageProducer"/>
		<reference type="javax.jms.Queue"/>
		<reference type="javax.jms.Destination"/>
		<reference type="java.lang.Throwable"/>
		<reference type="javax.jms.MessageConsumer"/>
		<reference type="javax.jms.BytesMessage"/>
		<reference type="javax.jms.TopicPublisher"/>
		<reference type="org.hornetq.ra.HornetQRAQueueReceiver"/>
		<reference type="java.util.HashSet"/>
		<reference type="org.hornetq.ra.HornetQRAConnectionRequestInfo"/>
		<reference type="org.hornetq.ra.HornetQRASessionFactory"/>
		<reference type="org.hornetq.ra.HornetQRAManagedConnection"/>
		<reference type="javax.jms.XAQueueSession"/>
		<reference type="javax.jms.IllegalStateException"/>
		<reference type="org.hornetq.ra.HornetQRAMessageProducer"/>
		<reference type="javax.jms.TransactionInProgressException"/>
		<reference type="org.hornetq.ra.HornetQRAConnectionFactory"/>
		<reference type="javax.jms.TemporaryQueue"/>
		<reference type="javax.jms.MapMessage"/>
		<reference type="org.hornetq.ra.HornetQRAMessageConsumer"/>
		<reference type="java.io.Serializable"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="javax.jms.TopicSession"/>
		<reference type="javax.jms.TextMessage"/>
		<reference type="javax.transaction.xa.XAResource"/>
		<reference type="javax.jms.XASession"/>
		<reference type="javax.jms.StreamMessage"/>
		<reference type="java.lang.String"/>
		<reference type="javax.jms.ObjectMessage"/>
		<reference type="javax.jms.Session"/>
		<reference type="javax.jms.XATopicSession"/>
		<reference type="javax.jms.QueueSession"/>
		<reference type="javax.jms.InvalidDestinationException"/>
		<reference type="org.hornetq.ra.HornetQRAQueueSender"/>
	</type>
	<type name="org.hornetq.ra.HornetQRAMessageConsumer" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="org.hornetq.ra.HornetQRAObjectMessage"/>
		<reference type="org.hornetq.ra.HornetQRASession"/>
		<reference type="org.hornetq.ra.HornetQRAMessage"/>
		<reference type="javax.jms.Message"/>
		<reference type="org.hornetq.ra.HornetQRABytesMessage"/>
		<reference type="org.hornetq.ra.HornetQRAMapMessage"/>
		<reference type="org.hornetq.ra.HornetQRATextMessage"/>
		<reference type="javax.jms.MapMessage"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="javax.jms.TextMessage"/>
		<reference type="javax.jms.MessageListener"/>
		<reference type="javax.jms.StreamMessage"/>
		<reference type="java.lang.String"/>
		<reference type="javax.jms.ObjectMessage"/>
		<reference type="javax.jms.MessageConsumer"/>
		<reference type="org.hornetq.ra.HornetQRAStreamMessage"/>
		<reference type="javax.jms.BytesMessage"/>
		<reference type="org.hornetq.ra.HornetQRAMessageListener"/>
	</type>
	<type name="org.hornetq.utils.json.JSONTokener" internal="true" project="trunk" package="org.hornetq.utils.json">
		<reference type="java.lang.Integer"/>
		<reference type="org.hornetq.utils.json.JSONException"/>
		<reference type="java.lang.Override"/>
		<reference type="java.io.BufferedReader"/>
		<reference type="java.lang.StringBuffer"/>
		<reference type="java.io.IOException"/>
		<reference type="org.hornetq.utils.json.JSONArray"/>
		<reference type="org.hornetq.utils.json.JSONObject"/>
		<reference type="java.lang.String"/>
		<reference type="java.lang.Object"/>
		<reference type="java.io.Reader"/>
		<reference type="java.io.StringReader"/>
	</type>
	<type name="org.hornetq.core.journal.Journal" internal="true" project="trunk" package="org.hornetq.core.journal">
		<reference type="org.hornetq.core.journal.RecordInfo"/>
		<reference type="org.hornetq.core.journal.JournalLoadInformation"/>
		<reference type="org.hornetq.core.journal.TransactionFailureCallback"/>
		<reference type="org.hornetq.core.journal.LoaderCallback"/>
		<reference type="org.hornetq.core.journal.IOCompletion"/>
		<reference type="org.hornetq.core.journal.EncodingSupport"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.server.HornetQComponent"/>
		<reference type="org.hornetq.core.journal.PreparedTransactionInfo"/>
	</type>
	<type name="org.apache.log4j.Logger" internal="false" project="log4j.jar" package="org.apache.log4j">
	</type>
	<type name="org.hornetq.core.postoffice.AddressManager" internal="true" project="trunk" package="org.hornetq.core.postoffice">
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.core.postoffice.Binding"/>
		<reference type="org.hornetq.core.postoffice.Bindings"/>
	</type>
	<type name="org.hornetq.api.jms.HornetQJMSConstants" internal="true" project="trunk" package="org.hornetq.api.jms">
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.api.core.client.MessageHandler" internal="false" project="trunk" package="org.hornetq.api.core.client">
	</type>
	<type name="org.hornetq.core.server.impl.HornetQServerImpl" internal="false" project="trunk" package="org.hornetq.core.server.impl">
	</type>
	<type name="javax.resource.spi.ManagedConnection" internal="false" project="jboss-jca-api.jar" package="javax.resource.spi">
	</type>
	<type name="javax.jms.Session" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.jboss.kernel.plugins.deployment.xml.BeanXMLDeployer" internal="false" project="jboss-kernel.jar" package="org.jboss.kernel.plugins.deployment.xml">
	</type>
	<type name="org.hornetq.jms.bridge.ConnectionFactoryFactory" internal="true" project="trunk" package="org.hornetq.jms.bridge">
		<reference type="javax.jms.ConnectionFactory"/>
		<reference type="java.lang.Exception"/>
	</type>
	<type name="java.lang.Double" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="java.util.concurrent.atomic.AtomicInteger" internal="false" project="rt.jar" package="java.util.concurrent.atomic">
	</type>
	<type name="org.hornetq.core.postoffice.BindingType" internal="true" project="trunk" package="org.hornetq.core.postoffice">
	</type>
	<type name="org.hornetq.utils.UUIDTimer" internal="true" project="trunk" package="org.hornetq.utils">
		<reference type="org.hornetq.utils.UUID"/>
		<reference type="java.util.Random"/>
		<reference type="java.lang.InterruptedException"/>
		<reference type="java.lang.Thread"/>
		<reference type="java.lang.System"/>
	</type>
	<type name="org.hornetq.utils.concurrent.LinkedBlockingDeque" internal="true" project="trunk" package="org.hornetq.utils.concurrent">
		<reference type="java.io.Serializable"/>
	</type>
	<type name="java.util.logging.Formatter" internal="false" project="rt.jar" package="java.util.logging">
	</type>
	<type name="java.lang.IndexOutOfBoundsException" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="javax.resource.spi.ResourceAdapterInternalException" internal="false" project="jboss-jca-api.jar" package="javax.resource.spi">
	</type>
	<type name="javax.resource.Referenceable" internal="false" project="jboss-jca-api.jar" package="javax.resource">
	</type>
	<type name="javax.jms.MessageFormatException" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.core.remoting.impl.wireformat.SessionForceConsumerDelivery" internal="false" project="trunk" package="org.hornetq.core.remoting.impl.wireformat">
	</type>
	<type name="org.hornetq.core.postoffice.QueueBinding" internal="true" project="trunk" package="org.hornetq.core.postoffice">
		<reference type="org.hornetq.core.server.Queue"/>
		<reference type="org.hornetq.core.postoffice.Binding"/>
	</type>
	<type name="org.hornetq.core.remoting.impl.wireformat.SessionDeleteQueueMessage" internal="false" project="trunk" package="org.hornetq.core.remoting.impl.wireformat">
	</type>
	<type name="org.hornetq.jms.referenceable.DestinationObjectFactory" internal="true" project="trunk" package="org.hornetq.jms.referenceable">
		<reference type="javax.naming.spi.ObjectFactory"/>
		<reference type="javax.naming.Name"/>
		<reference type="javax.naming.Context"/>
		<reference type="org.hornetq.jms.referenceable.SerializableObjectRefAddr"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.lang.Object"/>
		<reference type="javax.naming.Reference"/>
		<reference type="java.util.Hashtable"/>
	</type>
	<type name="java.lang.Integer" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="java.lang.Short" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.hornetq.utils.json.JSONArray" internal="true" project="trunk" package="org.hornetq.utils.json">
		<reference type="org.hornetq.utils.json.JSONException"/>
		<reference type="java.lang.Character"/>
		<reference type="java.util.Iterator"/>
		<reference type="java.lang.StringBuffer"/>
		<reference type="java.lang.Long"/>
		<reference type="java.lang.reflect.Array"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.lang.Object"/>
		<reference type="java.util.ArrayList"/>
		<reference type="java.util.Collection"/>
		<reference type="java.lang.Integer"/>
		<reference type="java.util.Map"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.Number"/>
		<reference type="org.hornetq.utils.json.JSONTokener"/>
		<reference type="java.io.IOException"/>
		<reference type="org.hornetq.utils.json.JSONObject"/>
		<reference type="java.lang.Double"/>
		<reference type="java.lang.String"/>
		<reference type="java.lang.Boolean"/>
		<reference type="java.io.Writer"/>
	</type>
	<type name="javax.resource.spi.ManagedConnectionMetaData" internal="false" project="jboss-jca-api.jar" package="javax.resource.spi">
	</type>
	<type name="java.nio.ByteBuffer" internal="false" project="rt.jar" package="java.nio">
	</type>
	<type name="org.hornetq.api.core.FilterConstants" internal="true" project="trunk" package="org.hornetq.api.core">
		<reference type="org.hornetq.api.core.SimpleString"/>
	</type>
	<type name="java.util.logging.LogRecord" internal="false" project="rt.jar" package="java.util.logging">
	</type>
	<type name="org.hornetq.utils.TypedProperties" internal="true" project="trunk" package="org.hornetq.utils">
	</type>
	<type name="java.util.UUID" internal="false" project="rt.jar" package="java.util">
	</type>
	<type name="java.lang.IllegalArgumentException" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.hornetq.core.server.Consumer" internal="true" project="trunk" package="org.hornetq.core.server">
		<reference type="org.hornetq.core.filter.Filter"/>
		<reference type="org.hornetq.core.server.HandleStatus"/>
		<reference type="org.hornetq.core.server.MessageReference"/>
		<reference type="java.lang.Exception"/>
	</type>
	<type name="javax.transaction.xa.XAException" internal="false" project="rt.jar" package="javax.transaction.xa">
	</type>
	<type name="javax.jms.XAQueueConnection" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="java.lang.Runtime" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.hornetq.core.journal.impl.TimedBuffer" internal="false" project="trunk" package="org.hornetq.core.journal.impl">
	</type>
	<type name="javax.jms.XATopicConnection" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="javax.jms.TemporaryQueue" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.core.server.ActivateCallback" internal="true" project="trunk" package="org.hornetq.core.server">
	</type>
	<type name="org.hornetq.jms.client.HornetQTextMessage" internal="true" project="trunk" package="org.hornetq.jms.client">
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Override"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="javax.jms.TextMessage"/>
		<reference type="org.hornetq.jms.client.HornetQMessage"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.api.core.client.ClientMessage"/>
		<reference type="org.hornetq.api.core.client.ClientSession"/>
	</type>
	<type name="org.hornetq.utils.UUIDGenerator" internal="true" project="trunk" package="org.hornetq.utils">
		<reference type="java.util.Arrays"/>
		<reference type="java.util.UUID"/>
		<reference type="java.net.NetworkInterface"/>
		<reference type="java.lang.Object"/>
		<reference type="java.util.Random"/>
		<reference type="java.lang.System"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="org.hornetq.utils.UUID"/>
		<reference type="java.lang.Integer"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="org.hornetq.utils.UUIDTimer"/>
		<reference type="java.lang.Throwable"/>
		<reference type="java.lang.Boolean"/>
		<reference type="java.lang.reflect.Method"/>
		<reference type="java.security.SecureRandom"/>
	</type>
	<type name="org.hornetq.core.postoffice.DuplicateIDCache" internal="true" project="trunk" package="org.hornetq.core.postoffice">
		<reference type="org.hornetq.core.transaction.Transaction"/>
		<reference type="java.lang.Long"/>
		<reference type="java.lang.Exception"/>
	</type>
	<type name="org.hornetq.core.version.Version" internal="true" project="trunk" package="org.hornetq.core.version">
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.ra.HornetQRAMetaData" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="javax.resource.ResourceException"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.ra.HornetQRAManagedConnection"/>
		<reference type="javax.resource.spi.ManagedConnectionMetaData"/>
	</type>
	<type name="org.hornetq.api.core.management.HornetQComponentControl" internal="false" project="trunk" package="org.hornetq.api.core.management">
	</type>
	<type name="org.hornetq.spi.core.remoting.Connection" internal="false" project="trunk" package="org.hornetq.spi.core.remoting">
	</type>
	<type name="org.hornetq.ra.HornetQRAMessageProducer" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="javax.jms.JMSException"/>
		<reference type="org.hornetq.ra.HornetQRASession"/>
		<reference type="javax.jms.MessageProducer"/>
		<reference type="javax.jms.Destination"/>
		<reference type="javax.jms.Message"/>
	</type>
	<type name="javax.jms.MessageProducer" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="org.hornetq.ra.HornetQRAConnectionManager" internal="true" project="trunk" package="org.hornetq.ra">
		<reference type="javax.resource.ResourceException"/>
		<reference type="javax.resource.spi.ConnectionRequestInfo"/>
		<reference type="java.lang.Object"/>
		<reference type="javax.resource.spi.ConnectionManager"/>
		<reference type="javax.resource.spi.ManagedConnection"/>
		<reference type="javax.resource.spi.ManagedConnectionFactory"/>
	</type>
	<type name="org.hornetq.core.persistence.StorageManager" internal="true" project="trunk" package="org.hornetq.core.persistence">
		<reference type="org.hornetq.core.persistence.OperationContext"/>
		<reference type="org.hornetq.core.server.LargeServerMessage"/>
		<reference type="java.lang.Long"/>
		<reference type="org.hornetq.core.paging.PagingManager"/>
		<reference type="org.hornetq.core.postoffice.PostOffice"/>
		<reference type="org.hornetq.core.server.MessageReference"/>
		<reference type="org.hornetq.core.server.group.impl.GroupBinding"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.hornetq.core.paging.PageTransactionInfo"/>
		<reference type="org.hornetq.core.paging.PagedMessage"/>
		<reference type="org.hornetq.core.journal.JournalLoadInformation"/>
		<reference type="org.hornetq.utils.UUID"/>
		<reference type="org.hornetq.core.transaction.ResourceManager"/>
		<reference type="org.hornetq.core.server.Queue"/>
		<reference type="org.hornetq.core.server.ServerMessage"/>
		<reference type="org.hornetq.core.journal.IOAsyncTask"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="javax.transaction.xa.Xid"/>
		<reference type="org.hornetq.core.postoffice.Binding"/>
		<reference type="org.hornetq.core.server.HornetQComponent"/>
		<reference type="java.util.concurrent.Executor"/>
		<reference type="org.hornetq.core.persistence.QueueBindingInfo"/>
		<reference type="org.hornetq.core.persistence.GroupingInfo"/>
	</type>
	<type name="java.lang.StringBuffer" internal="false" project="rt.jar" package="java.lang">
	</type>
	<type name="org.hornetq.api.core.PropertyConversionException" internal="true" project="trunk" package="org.hornetq.api.core">
		<reference type="java.lang.RuntimeException"/>
		<reference type="java.lang.String"/>
	</type>
	<type name="org.hornetq.utils.concurrent.Deque" internal="true" project="trunk" package="org.hornetq.utils.concurrent">
		<reference type="java.lang.Object"/>
	</type>
	<type name="org.hornetq.jms.client.HornetQBytesMessage" internal="true" project="trunk" package="org.hornetq.jms.client">
		<reference type="javax.jms.MessageFormatException"/>
		<reference type="java.lang.Character"/>
		<reference type="javax.jms.MessageEOFException"/>
		<reference type="java.lang.Short"/>
		<reference type="java.lang.Long"/>
		<reference type="org.hornetq.jms.client.HornetQMessage"/>
		<reference type="java.lang.Object"/>
		<reference type="java.lang.Exception"/>
		<reference type="java.lang.NullPointerException"/>
		<reference type="java.lang.Math"/>
		<reference type="java.lang.Byte"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Integer"/>
		<reference type="java.lang.Override"/>
		<reference type="javax.jms.JMSException"/>
		<reference type="java.lang.IndexOutOfBoundsException"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="java.lang.Double"/>
		<reference type="java.lang.String"/>
		<reference type="java.lang.Boolean"/>
		<reference type="javax.jms.BytesMessage"/>
		<reference type="org.hornetq.api.core.client.ClientMessage"/>
		<reference type="java.lang.Float"/>
		<reference type="org.hornetq.api.core.client.ClientSession"/>
	</type>
	<type name="org.hornetq.core.config.impl.FileConfiguration" internal="false" project="trunk" package="org.hornetq.core.config.impl">
	</type>
	<type name="org.hornetq.api.core.Message" internal="true" project="trunk" package="org.hornetq.api.core">
		<reference type="java.lang.Byte"/>
		<reference type="java.lang.Integer"/>
		<reference type="org.hornetq.api.core.PropertyConversionException"/>
		<reference type="java.lang.Short"/>
		<reference type="java.lang.Long"/>
		<reference type="java.lang.Double"/>
		<reference type="java.lang.String"/>
		<reference type="org.hornetq.api.core.HornetQBuffer"/>
		<reference type="org.hornetq.api.core.SimpleString"/>
		<reference type="java.lang.Object"/>
		<reference type="java.lang.Boolean"/>
		<reference type="java.lang.Float"/>
	</type>
	<type name="javax.jms.TopicPublisher" internal="false" project="jboss-jms-api.jar" package="javax.jms">
	</type>
	<type name="java.net.URL" internal="false" project="rt.jar" package="java.net">
	</type>
	<type name="org.hornetq.core.server.JournalType" internal="true" project="trunk" package="org.hornetq.core.server">
	</type>
	<type name="javax.resource.spi.IllegalStateException" internal="false" project="jboss-jca-api.jar" package="javax.resource.spi">
	</type>
	<type name="org.hornetq.core.remoting.ChannelHandler" internal="true" project="trunk" package="org.hornetq.core.remoting">
		<reference type="org.hornetq.core.remoting.Packet"/>
	</type>
	<type name="javax.resource.spi.LocalTransaction" internal="false" project="jboss-jca-api.jar" package="javax.resource.spi">
	</type>
	<type name="javax.resource.spi.SecurityException" internal="false" project="jboss-jca-api.jar" package="javax.resource.spi">
	</type>
	<type name="org.hornetq.utils.concurrent.LinkedBlockingDeque$Node" internal="true" project="trunk" package="org.hornetq.utils.concurrent">
	</type>
	<type name="java.io.StringReader" internal="false" project="rt.jar" package="java.io">
	</type>
	<type name="org.hornetq.integration.bootstrap.HornetQBootstrapServer" internal="true" project="trunk" package="org.hornetq.integration.bootstrap">
		<reference type="java.util.Properties"/>
		<reference type="java.lang.RuntimeException"/>
		<reference type="org.hornetq.integration.bootstrap.HornetQBootstrapServer$Shutdown"/>
		<reference type="java.io.File"/>
		<reference type="java.io.ByteArrayOutputStream"/>
		<reference type="java.util.TimerTask"/>
		<reference type="java.lang.Exception"/>
		<reference type="org.jboss.kernel.spi.deployment.KernelDeployment"/>
		<reference type="java.lang.Thread"/>
		<reference type="java.lang.System"/>
		<reference type="java.lang.ClassLoader"/>
		<reference type="org.hornetq.core.logging.Logger"/>
		<reference type="java.lang.Override"/>
		<reference type="java.lang.String"/>
		<reference type="java.util.Timer"/>
		<reference type="java.io.PrintStream"/>
		<reference type="java.io.ByteArrayInputStream"/>
		<reference type="org.jboss.kernel.spi.config.KernelConfig"/>
		<reference type="java.lang.Throwable"/>
		<reference type="java.lang.Runtime"/>
		<reference type="org.jboss.kernel.plugins.bootstrap.basic.BasicBootstrap"/>
		<reference type="java.net.URL"/>
		<reference type="org.jboss.kernel.plugins.deployment.xml.BeanXMLDeployer"/>
	</type>
</dependencyAnalysis>

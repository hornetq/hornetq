<!--
  ~ Copyright 2009 Red Hat, Inc.
  ~  Red Hat licenses this file to you under the Apache License, version
  ~  2.0 (the "License"); you may not use this file except in compliance
  ~  with the License.  You may obtain a copy of the License at
  ~     http://www.apache.org/licenses/LICENSE-2.0
  ~  Unless required by applicable law or agreed to in writing, software
  ~  distributed under the License is distributed on an "AS IS" BASIS,
  ~  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or
  ~  implied.  See the License for the specific language governing
  ~  permissions and limitations under the License.
  -->

<assembly xmlns="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2 http://maven.apache.org/xsd/assembly-1.1.2.xsd">

  <id>bin</id>
  <formats>
    <format>dir</format>
    <format>zip</format>
    <format>tar.gz</format>
  </formats>
  <includeBaseDirectory>true</includeBaseDirectory>
   <moduleSets>
      <moduleSet>
         <useAllReactorProjects>true</useAllReactorProjects>
         <includes>
            <include>org.hornetq:hornetq-commons</include>
         </includes>
         <binaries>
            <includeDependencies>false</includeDependencies>
            <outputDirectory>lib</outputDirectory>
            <unpack>false</unpack>
            <outputFileNameMapping>${module.artifactId}.${module.extension}</outputFileNameMapping>
         </binaries>
      </moduleSet>
      <moduleSet>
         <useAllReactorProjects>true</useAllReactorProjects>
         <includes>
            <include>org.hornetq:hornetq-journal</include>
         </includes>
         <binaries>
            <includeDependencies>false</includeDependencies>
            <outputDirectory>lib</outputDirectory>
            <unpack>false</unpack>
            <outputFileNameMapping>${module.artifactId}.${module.extension}</outputFileNameMapping>
         </binaries>
      </moduleSet>
      <moduleSet>
         <useAllReactorProjects>true</useAllReactorProjects>
         <includes>
            <include>org.hornetq:hornetq-bootstrap</include>
         </includes>
         <binaries>
            <includeDependencies>false</includeDependencies>
            <outputDirectory>lib</outputDirectory>
            <unpack>false</unpack>
            <outputFileNameMapping>${module.artifactId}.${module.extension}</outputFileNameMapping>
         </binaries>
      </moduleSet>
      <moduleSet>
         <useAllReactorProjects>true</useAllReactorProjects>
         <includes>
            <include>org.hornetq:hornetq-server</include>
         </includes>
         <binaries>
            <includeDependencies>false</includeDependencies>
            <outputDirectory></outputDirectory>
            <unpack>true</unpack>
            <unpackOptions>
               <includes>
                  <include>**/*.xsd</include>
               </includes>
            </unpackOptions>
         </binaries>
      </moduleSet>
      <moduleSet>
         <useAllReactorProjects>true</useAllReactorProjects>
         <includes>
            <include>org.hornetq:hornetq-native</include>
         </includes>
         <binaries>
            <includeDependencies>false</includeDependencies>
            <outputDirectory>bin</outputDirectory>
            <unpack>true</unpack>
            <unpackOptions>
               <includes>
                  <include>**/*.so</include>
               </includes>
            </unpackOptions>
         </binaries>
      </moduleSet>
      <moduleSet>
         <useAllReactorProjects>true</useAllReactorProjects>
         <includes>
            <include>org.hornetq:hornetq-core-client</include>
         </includes>
         <binaries>
            <includeDependencies>false</includeDependencies>
            <outputDirectory>lib</outputDirectory>
            <unpack>false</unpack>
            <outputFileNameMapping>${module.artifactId}.${module.extension}</outputFileNameMapping>
         </binaries>
      </moduleSet>
      <moduleSet>
         <useAllReactorProjects>true</useAllReactorProjects>
         <includes>
            <include>org.hornetq:hornetq-server</include>
         </includes>
         <binaries>
            <includeDependencies>false</includeDependencies>
            <outputDirectory>lib</outputDirectory>
            <unpack>false</unpack>
            <outputFileNameMapping>${module.artifactId}.${module.extension}</outputFileNameMapping>
         </binaries>
      </moduleSet>
      <moduleSet>
         <useAllReactorProjects>true</useAllReactorProjects>
         <includes>
            <include>org.hornetq:hornetq-jboss-as-integration</include>
         </includes>
         <binaries>
            <includeDependencies>false</includeDependencies>
            <outputDirectory>lib</outputDirectory>
            <unpack>false</unpack>
            <outputFileNameMapping>${module.artifactId}.${module.extension}</outputFileNameMapping>
         </binaries>
      </moduleSet>
      <moduleSet>
         <useAllReactorProjects>true</useAllReactorProjects>
         <includes>
            <include>org.hornetq:hornetq-jms-client</include>
         </includes>
         <binaries>
            <includeDependencies>false</includeDependencies>
            <outputDirectory>lib</outputDirectory>
            <unpack>false</unpack>
            <outputFileNameMapping>${module.artifactId}.${module.extension}</outputFileNameMapping>
         </binaries>
      </moduleSet>
      <moduleSet>
         <useAllReactorProjects>true</useAllReactorProjects>
         <includes>
            <include>org.hornetq:hornetq-jms-server</include>
         </includes>
         <binaries>
            <includeDependencies>false</includeDependencies>
            <outputDirectory>lib</outputDirectory>
            <unpack>false</unpack>
            <outputFileNameMapping>${module.artifactId}.${module.extension}</outputFileNameMapping>
         </binaries>
      </moduleSet>
      <moduleSet>
         <useAllReactorProjects>true</useAllReactorProjects>
         <includes>
            <include>org.hornetq:hornetq-jms-server</include>
         </includes>
         <binaries>
            <includeDependencies>false</includeDependencies>
            <outputDirectory></outputDirectory>
            <unpack>true</unpack>
            <unpackOptions>
               <includes>
                  <include>**/*.xsd</include>
               </includes>
            </unpackOptions>
         </binaries>
      </moduleSet>
      <moduleSet>
         <useAllReactorProjects>true</useAllReactorProjects>
         <includes>
            <include>org.hornetq:hornetq-jms-client</include>
         </includes>
         <binaries>
            <includeDependencies>false</includeDependencies>
            <outputDirectory>lib</outputDirectory>
            <unpack>false</unpack>
            <outputFileNameMapping>${module.artifactId}.${module.extension}</outputFileNameMapping>
         </binaries>
      </moduleSet>
      <moduleSet>
         <useAllReactorProjects>true</useAllReactorProjects>
         <includes>
            <include>org.hornetq:hornetq-ra</include>
         </includes>
         <binaries>
            <includeDependencies>false</includeDependencies>
            <outputDirectory>lib</outputDirectory>
            <unpack>false</unpack>
            <outputFileNameMapping>${module.artifactId}.${module.extension}</outputFileNameMapping>
         </binaries>
      </moduleSet>
      <moduleSet>
         <useAllReactorProjects>true</useAllReactorProjects>
         <includes>
            <include>org.hornetq:hornetq-service-sar</include>
         </includes>
         <binaries>
            <includeDependencies>false</includeDependencies>
            <outputDirectory>lib</outputDirectory>
            <unpack>false</unpack>
            <outputFileNameMapping>${module.artifactId}.${module.extension}</outputFileNameMapping>
         </binaries>
      </moduleSet>
      <moduleSet>
         <useAllReactorProjects>true</useAllReactorProjects>
         <includes>
            <include>org.hornetq:hornetq-spring-integration</include>
         </includes>
         <binaries>
            <includeDependencies>false</includeDependencies>
            <outputDirectory>lib</outputDirectory>
            <unpack>false</unpack>
            <outputFileNameMapping>${module.artifactId}.${module.extension}</outputFileNameMapping>
         </binaries>
      </moduleSet>
      <moduleSet>
         <useAllReactorProjects>true</useAllReactorProjects>
         <includes>
            <include>org.hornetq:hornetq-twitter-integration</include>
         </includes>
         <binaries>
            <includeDependencies>false</includeDependencies>
            <outputDirectory>lib</outputDirectory>
            <unpack>false</unpack>
            <outputFileNameMapping>${module.artifactId}.${module.extension}</outputFileNameMapping>
         </binaries>
      </moduleSet>
      <moduleSet>
         <useAllReactorProjects>true</useAllReactorProjects>
         <includes>
            <include>org.hornetq.rest:hornetq-rest</include>
         </includes>
         <binaries>
            <includeDependencies>false</includeDependencies>
            <outputDirectory>lib</outputDirectory>
            <unpack>false</unpack>
            <outputFileNameMapping>${module.artifactId}.${module.extension}</outputFileNameMapping>
         </binaries>
      </moduleSet>
      <moduleSet>
         <useAllReactorProjects>true</useAllReactorProjects>
         <includes>
            <include>org.hornetq:jnp-client</include>
         </includes>
         <binaries>
            <includeDependencies>false</includeDependencies>
            <outputDirectory>lib</outputDirectory>
            <unpack>false</unpack>
            <outputFileNameMapping>${module.artifactId}.${module.extension}</outputFileNameMapping>
         </binaries>
      </moduleSet>
      <moduleSet>
         <useAllReactorProjects>true</useAllReactorProjects>
         <includes>
            <include>org.hornetq:jboss-mc</include>
         </includes>
         <binaries>
            <includeDependencies>false</includeDependencies>
            <outputDirectory>lib</outputDirectory>
            <unpack>false</unpack>
            <outputFileNameMapping>${module.artifactId}.${module.extension}</outputFileNameMapping>
         </binaries>
      </moduleSet>
      <moduleSet>
         <useAllReactorProjects>true</useAllReactorProjects>
         <includes>
            <include>org.hornetq:jboss-mc</include>
         </includes>
         <binaries>
            <includeDependencies>false</includeDependencies>
            <outputDirectory>lib</outputDirectory>
            <unpack>false</unpack>
            <outputFileNameMapping>${module.artifactId}.${module.extension}</outputFileNameMapping>
         </binaries>
      </moduleSet>
      <moduleSet>
         <useAllReactorProjects>true</useAllReactorProjects>
         <includes>
            <include>org.hornetq:hornetq-core-client</include>
         </includes>
         <binaries>
            <attachmentClassifier>javadoc</attachmentClassifier>
            <includeDependencies>false</includeDependencies>
            <outputDirectory>docs/api/hornetq-client</outputDirectory>
         </binaries>
      </moduleSet>
      <moduleSet>
         <useAllReactorProjects>true</useAllReactorProjects>
         <includes>
            <include>org.hornetq:hornetq-server</include>
         </includes>
         <binaries>
            <attachmentClassifier>javadoc</attachmentClassifier>
            <includeDependencies>false</includeDependencies>
            <outputDirectory>docs/api/hornetq-server</outputDirectory>
         </binaries>
      </moduleSet>
      <moduleSet>
         <useAllReactorProjects>true</useAllReactorProjects>
         <includes>
            <include>org.hornetq:hornetq-jms-client</include>
         </includes>
         <binaries>
            <attachmentClassifier>javadoc</attachmentClassifier>
            <includeDependencies>false</includeDependencies>
            <outputDirectory>docs/api/hornetq-jms-client</outputDirectory>
         </binaries>
      </moduleSet>
      <moduleSet>
         <useAllReactorProjects>true</useAllReactorProjects>
         <includes>
            <include>org.hornetq:hornetq-jms-server</include>
         </includes>
         <binaries>
            <attachmentClassifier>javadoc</attachmentClassifier>
            <includeDependencies>false</includeDependencies>
            <outputDirectory>docs/api/hornetq-jms-server</outputDirectory>
         </binaries>
      </moduleSet>
   </moduleSets>
   <dependencySets>
      <dependencySet>
         <includes>
            <include>org.jboss.spec.javax.jms:jboss-jms-api_2.0_spec</include>
         </includes>
         <outputDirectory>lib</outputDirectory>
         <unpack>false</unpack>
         <outputFileNameMapping>jboss-jms-api.jar</outputFileNameMapping>
      </dependencySet>
      <dependencySet>
         <includes>
            <include>org.jboss.naming:jnpserver</include>
         </includes>
         <outputDirectory>lib</outputDirectory>
         <unpack>false</unpack>
         <outputFileNameMapping>jnpserver.jar</outputFileNameMapping>
      </dependencySet>
      <dependencySet>
         <includes>
            <include>io.netty:netty</include>
         </includes>
         <outputDirectory>lib</outputDirectory>
         <unpack>false</unpack>
         <outputFileNameMapping>netty.jar</outputFileNameMapping>
      </dependencySet>
   </dependencySets>
  <fileSets>
    <fileSet>
      <directory>src/main/resources/config</directory>
      <outputDirectory>config</outputDirectory>
      <lineEnding>keep</lineEnding>
      <excludes>
         <exclude>**/trunk/**</exclude>
         <exclude>*.properties</exclude>
      </excludes>
    </fileSet>
    <fileSet>
      <directory>src/main/resources/bin</directory>
      <outputDirectory>bin</outputDirectory>
      <lineEnding>keep</lineEnding>
    </fileSet>
    <fileSet>
      <directory>src/main/resources/licenses</directory>
      <outputDirectory>licenses</outputDirectory>
      <lineEnding>keep</lineEnding>
    </fileSet>
    <fileSet>
      <directory>src/main/resources/examples</directory>
      <outputDirectory>examples</outputDirectory>
      <lineEnding>keep</lineEnding>
    </fileSet>
    <fileSet>
      <directory>../../examples</directory>
      <outputDirectory>examples</outputDirectory>
      <lineEnding>keep</lineEnding>
      <excludes>
         <exclude>**/target/**</exclude>
         <exclude>**/**/*.iml</exclude>
         <exclude>**/**/*.dat</exclude>
      </excludes>
    </fileSet>
     <!--todo, this is crap, there must be better jdocbook assembly integration-->
      <fileSet>
         <directory>../../docs/user-manual/target/docbook/publish/en</directory>
         <outputDirectory>docs/user-manual</outputDirectory>
         <lineEnding>keep</lineEnding>
      </fileSet>
      <fileSet>
         <directory>../../docs/quickstart-guide/target/docbook/publish/en</directory>
         <outputDirectory>docs/quickstart-guide</outputDirectory>
         <lineEnding>keep</lineEnding>
      </fileSet>
      <fileSet>
         <directory>../../docs/rest-manual/target/docbook/publish/en</directory>
         <outputDirectory>docs/rest-manual</outputDirectory>
         <lineEnding>keep</lineEnding>
      </fileSet>
  </fileSets>
</assembly>
